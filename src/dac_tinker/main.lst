
main.elf:     file format elf32-littlearm

SYMBOL TABLE:
08000000 l    d  .isr_vector	00000000 .isr_vector
0800010c l    d  .text	00000000 .text
20000000 l    d  .data	00000000 .data
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 /var/folders/8f/zhq2rlhx6sl47y8ztwk74bcr0000gn/T//ccsCfPYG.o
f108f85f l       *ABS*	00000000 BootRAM
08000b72 l       .text	00000000 LoopCopyDataInit
08000b6a l       .text	00000000 CopyDataInit
08000b8a l       .text	00000000 LoopFillZerobss
08000b84 l       .text	00000000 FillZerobss
08000bb4 l       .text	00000000 Infinite_Loop
00000000 l    df *ABS*	00000000 stm32l1xx_dac.c
00000000 l    df *ABS*	00000000 stm32l1xx_gpio.c
00000000 l    df *ABS*	00000000 stm32l1xx_rcc.c
20000000 l     O .data	00000009 PLLMulTable
2000000c l     O .data	00000010 APBAHBPrescTable
00000000 l    df *ABS*	00000000 _udivsi3.o
08000940 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 system_stm32l1xx.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 /Users/nathanogates/Copy/Development/embedded/redux/gcc-arm/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crti.o
00000000 l    df *ABS*	00000000 /Users/nathanogates/Copy/Development/embedded/redux/gcc-arm/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crtn.o
00000000 l    df *ABS*	00000000 
20000020 l       .data	00000000 __exidx_end
00000000 l       *UND*	00000000 __fini_array_end
00000000 l       *UND*	00000000 malloc
00000000 l       *UND*	00000000 __bss_start__
20000020 l       .data	00000000 __exidx_start
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 __fini_array_start
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __libc_fini
00000000 l       *UND*	00000000 __stack
00000000 l       *UND*	00000000 _exit
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __register_frame_info
00000000 l       *UND*	00000000 free
08000bb4  w    F .text	00000004 RTC_Alarm_IRQHandler
08000bb4  w    F .text	00000004 EXTI2_IRQHandler
08000614 g     F .text	0000000c RCC_HSICmd
0800064c g     F .text	0000000c RCC_PLLCmd
08000bb4  w    F .text	00000004 DebugMon_Handler
0800083c g     F .text	00000018 RCC_AHBPeriphResetCmd
08000514 g     F .text	00000024 GPIO_PinAFConfig
08000930 g     F .text	0000000c RCC_ClearITPendingBit
080004dc g     F .text	0000000c GPIO_ReadOutputDataBit
08000bb4  w    F .text	00000004 HardFault_Handler
08000bb4  w    F .text	00000004 TIM10_IRQHandler
080001c8 g     F .text	00000020 DAC_WaveGenerationCmd
08000bb4  w    F .text	00000004 USB_HP_IRQHandler
08000bb4  w    F .text	00000004 TIM6_IRQHandler
08000bb4  w    F .text	00000004 SysTick_Handler
08000670 g     F .text	0000000c RCC_MCOConfig
08000bb4  w    F .text	00000004 PVD_IRQHandler
08000c18 g       .text	00000000 _sidata
08000bb4  w    F .text	00000004 PendSV_Handler
08000bb4  w    F .text	00000004 NMI_Handler
08000184 g     F .text	00000024 DAC_SoftwareTriggerCmd
08000bb4  w    F .text	00000004 EXTI3_IRQHandler
080008cc g     F .text	00000018 RCC_ITConfig
08000884 g     F .text	00000018 RCC_AHBPeriphClockLPModeCmd
08000c18 g       .text	00000000 _etext
20000020 g       .data	00000000 _sbss
0800067c g     F .text	00000014 RCC_SYSCLKConfig
08000590 g     F .text	0000003c RCC_WaitForHSEStartUp
08000658 g     F .text	0000000c RCC_ClockSecuritySystemCmd
08000bb4  w    F .text	00000004 EXTI0_IRQHandler
08000bb4  w    F .text	00000004 I2C2_EV_IRQHandler
08000908 g     F .text	00000014 RCC_ClearFlag
08000580 g     F .text	00000010 RCC_HSEConfig
0800093c g     F .text	00000088 .hidden __udivsi3
08000508 g     F .text	0000000a GPIO_ToggleBits
08000bb4  w    F .text	00000004 UsageFault_Handler
0800080c g     F .text	00000018 RCC_APB2PeriphClockCmd
080003e0 g     F .text	000000ae GPIO_Init
0800063c g     F .text	00000010 RCC_PLLConfig
20000000 g       .data	00000000 _sdata
08000bb4  w    F .text	00000004 SPI1_IRQHandler
08000504 g     F .text	00000004 GPIO_Write
080004e8 g     F .text	00000006 GPIO_ReadOutputData
08000620 g     F .text	00000010 RCC_LSEConfig
080007dc g     F .text	0000000c RCC_RTCCLKCmd
08000824 g     F .text	00000018 RCC_APB1PeriphClockCmd
0800091c g     F .text	00000014 RCC_GetITStatus
2000001c g     O .data	00000002 ADCVal
08000bb4  w    F .text	00000004 USB_FS_WKUP_IRQHandler
08000bb8 g     F .text	00000048 __libc_init_array
080007f4 g     F .text	00000018 RCC_AHBPeriphClockCmd
08000bb4  w    F .text	00000004 DMA1_Channel4_IRQHandler
08000bb4  w    F .text	00000004 ADC1_IRQHandler
080002c8 g     F .text	0000000c DAC_ClearFlag
080001a8 g     F .text	00000020 DAC_DualSoftwareTriggerCmd
08000c00 g     F .text	00000000 _init
08000bb4  w    F .text	00000004 USART3_IRQHandler
20000020 g       .data	00000000 _ebss
080009dc g     F .text	0000005c DAC_PreConfig
08000bb4  w    F .text	00000004 DMA1_Channel7_IRQHandler
08000b64  w    F .text	0000003c Reset_Handler
080004d4 g     F .text	00000006 GPIO_ReadInputData
08000bb4  w    F .text	00000004 LCD_IRQHandler
080008e4 g     F .text	00000024 RCC_GetFlagStatus
080004f0 g     F .text	00000004 GPIO_SetBits
08000bb4  w    F .text	00000004 TIM4_IRQHandler
08000690 g     F .text	00000010 RCC_GetSYSCLKSource
080004f8 g     F .text	0000000c GPIO_WriteBit
080002d4 g     F .text	0000001c DAC_GetITStatus
08000bb4  w    F .text	00000004 I2C1_EV_IRQHandler
080006e4 g     F .text	000000b8 RCC_GetClocksFreq
08000bb4  w    F .text	00000004 DMA1_Channel6_IRQHandler
0800089c g     F .text	00000018 RCC_APB2PeriphClockLPModeCmd
08000bb4  w    F .text	00000004 TIM3_IRQHandler
08000bb4  w    F .text	00000004 RCC_IRQHandler
20000020 g       .data	00000000 _bss
08000bb4  w    F .text	00000004 DMA1_Channel1_IRQHandler
08000bb4 g       .text	00000004 Default_Handler
0800079c g     F .text	00000040 RCC_RTCCLKConfig
08000bb4  w    F .text	00000004 EXTI15_10_IRQHandler
08000228 g     F .text	0000001c DAC_SetDualChannelData
0800010c g     F .text	00000018 DAC_DeInit
080001e8 g     F .text	00000020 DAC_SetChannel1Data
080004f4 g     F .text	00000004 GPIO_ResetBits
08000bb4  w    F .text	00000004 TIM7_IRQHandler
080002b0 g     F .text	00000018 DAC_GetFlagStatus
080009d8  w    F .text	00000002 .hidden __aeabi_ldiv0
08000bb4  w    F .text	00000004 EXTI9_5_IRQHandler
080005d8 g     F .text	00000018 RCC_MSIRangeConfig
08000bb4  w    F .text	00000004 TIM9_IRQHandler
08000bb4  w    F .text	00000004 TAMPER_STAMP_IRQHandler
08000bb4  w    F .text	00000004 RTC_WKUP_IRQHandler
080008b4 g     F .text	00000018 RCC_APB1PeriphClockLPModeCmd
08000208 g     F .text	00000020 DAC_SetChannel2Data
08000bb4  w    F .text	00000004 SPI2_IRQHandler
08000bb4  w    F .text	00000004 MemManage_Handler
080005fc g     F .text	00000018 RCC_AdjustHSICalibrationValue
08000a38 g     F .text	00000018 main
0800093c g     F .text	00000000 .hidden __aeabi_uidiv
08000bb4  w    F .text	00000004 SVC_Handler
00000000  w      *UND*	00000000 __init_array_end
080006b4 g     F .text	00000018 RCC_PCLK1Config
08000bb4  w    F .text	00000004 DMA1_Channel5_IRQHandler
08000bb4  w    F .text	00000004 USB_LP_IRQHandler
08000bb4  w    F .text	00000004 EXTI4_IRQHandler
080006cc g     F .text	00000018 RCC_PCLK2Config
08000a50 g     F .text	00000114 SystemInit
080002fc g     F .text	000000e4 GPIO_DeInit
08000154 g     F .text	0000000c DAC_StructInit
08000c0c g     F .text	00000000 _fini
08000538 g     F .text	00000048 RCC_DeInit
08000bb4  w    F .text	00000004 DMA1_Channel3_IRQHandler
08000bb4  w    F .text	00000004 COMP_IRQHandler
00000000  w      *UND*	00000000 __preinit_array_end
08000bb4  w    F .text	00000004 WWDG_IRQHandler
08000664 g     F .text	0000000c RCC_LSEClockSecuritySystemCmd
0800086c g     F .text	00000018 RCC_APB1PeriphResetCmd
20000000 g       .data	00000000 _data
080002f0 g     F .text	0000000c DAC_ClearITPendingBit
08000bb4  w    F .text	00000004 TIM2_IRQHandler
08000490 g     F .text	00000014 GPIO_StructInit
20002000 g       *ABS*	00000000 _estack
08000bb4  w    F .text	00000004 DAC_IRQHandler
080009c4 g     F .text	00000012 .hidden __aeabi_uidivmod
08000bb4  w    F .text	00000004 EXTI1_IRQHandler
08000268 g     F .text	00000028 DAC_DMACmd
20000020 g       .data	00000000 _edata
080007e8 g     F .text	0000000c RCC_RTCResetCmd
08000244 g     F .text	00000024 DAC_GetDataOutputValue
08000160 g     F .text	00000024 DAC_Cmd
08000bb4  w    F .text	00000004 TIM11_IRQHandler
08000124 g     F .text	00000030 DAC_Init
08000bb4  w    F .text	00000004 USART2_IRQHandler
08000290 g     F .text	00000020 DAC_ITConfig
08000000 g     O .isr_vector	00000000 g_pfnVectors
080005f0 g     F .text	0000000c RCC_MSICmd
08000bb4  w    F .text	00000004 I2C2_ER_IRQHandler
08000bb4  w    F .text	00000004 DMA1_Channel2_IRQHandler
00000000  w      *UND*	00000000 __init_array_start
080009d8  w    F .text	00000002 .hidden __aeabi_idiv0
08000bb4  w    F .text	00000004 FLASH_IRQHandler
080004a4 g     F .text	00000024 GPIO_PinLockConfig
08000bb4  w    F .text	00000004 BusFault_Handler
08000bb4  w    F .text	00000004 USART1_IRQHandler
08000630 g     F .text	0000000c RCC_LSICmd
08000854 g     F .text	00000018 RCC_APB2PeriphResetCmd
08000bb4  w    F .text	00000004 I2C1_ER_IRQHandler
080005cc g     F .text	0000000c RCC_AdjustMSICalibrationValue
00000000  w      *UND*	00000000 __preinit_array_start
080004c8 g     F .text	0000000c GPIO_ReadInputDataBit
080006a0 g     F .text	00000014 RCC_HCLKConfig



Disassembly of section .text:

0800010c <DAC_DeInit>:
 800010c:	b510      	push	{r4, lr}
 800010e:	2480      	movs	r4, #128	; 0x80
 8000110:	05a4      	lsls	r4, r4, #22
 8000112:	1c20      	adds	r0, r4, #0
 8000114:	2101      	movs	r1, #1
 8000116:	f000 fba9 	bl	800086c <RCC_APB1PeriphResetCmd>
 800011a:	1c20      	adds	r0, r4, #0
 800011c:	2100      	movs	r1, #0
 800011e:	f000 fba5 	bl	800086c <RCC_APB1PeriphResetCmd>
 8000122:	bd10      	pop	{r4, pc}

08000124 <DAC_Init>:
 8000124:	4b09      	ldr	r3, [pc, #36]	; (800014c <DAC_Init+0x28>)
 8000126:	b530      	push	{r4, r5, lr}
 8000128:	4c09      	ldr	r4, [pc, #36]	; (8000150 <DAC_Init+0x2c>)
 800012a:	681a      	ldr	r2, [r3, #0]
 800012c:	4084      	lsls	r4, r0
 800012e:	684d      	ldr	r5, [r1, #4]
 8000130:	43a2      	bics	r2, r4
 8000132:	680c      	ldr	r4, [r1, #0]
 8000134:	4325      	orrs	r5, r4
 8000136:	688c      	ldr	r4, [r1, #8]
 8000138:	4325      	orrs	r5, r4
 800013a:	68cc      	ldr	r4, [r1, #12]
 800013c:	1c29      	adds	r1, r5, #0
 800013e:	4321      	orrs	r1, r4
 8000140:	4081      	lsls	r1, r0
 8000142:	1c08      	adds	r0, r1, #0
 8000144:	4310      	orrs	r0, r2
 8000146:	6018      	str	r0, [r3, #0]
 8000148:	bd30      	pop	{r4, r5, pc}
 800014a:	46c0      	nop			; (mov r8, r8)
 800014c:	40007400 	.word	0x40007400
 8000150:	00000ffe 	.word	0x00000ffe

08000154 <DAC_StructInit>:
 8000154:	2300      	movs	r3, #0
 8000156:	6003      	str	r3, [r0, #0]
 8000158:	6043      	str	r3, [r0, #4]
 800015a:	6083      	str	r3, [r0, #8]
 800015c:	60c3      	str	r3, [r0, #12]
 800015e:	4770      	bx	lr

08000160 <DAC_Cmd>:
 8000160:	4b07      	ldr	r3, [pc, #28]	; (8000180 <DAC_Cmd+0x20>)
 8000162:	681a      	ldr	r2, [r3, #0]
 8000164:	2900      	cmp	r1, #0
 8000166:	d104      	bne.n	8000172 <DAC_Cmd+0x12>
 8000168:	2101      	movs	r1, #1
 800016a:	4081      	lsls	r1, r0
 800016c:	438a      	bics	r2, r1
 800016e:	601a      	str	r2, [r3, #0]
 8000170:	4770      	bx	lr
 8000172:	2101      	movs	r1, #1
 8000174:	4081      	lsls	r1, r0
 8000176:	1c08      	adds	r0, r1, #0
 8000178:	4310      	orrs	r0, r2
 800017a:	6018      	str	r0, [r3, #0]
 800017c:	e7f8      	b.n	8000170 <DAC_Cmd+0x10>
 800017e:	46c0      	nop			; (mov r8, r8)
 8000180:	40007400 	.word	0x40007400

08000184 <DAC_SoftwareTriggerCmd>:
 8000184:	4b07      	ldr	r3, [pc, #28]	; (80001a4 <DAC_SoftwareTriggerCmd+0x20>)
 8000186:	0900      	lsrs	r0, r0, #4
 8000188:	685a      	ldr	r2, [r3, #4]
 800018a:	2900      	cmp	r1, #0
 800018c:	d104      	bne.n	8000198 <DAC_SoftwareTriggerCmd+0x14>
 800018e:	2101      	movs	r1, #1
 8000190:	4081      	lsls	r1, r0
 8000192:	438a      	bics	r2, r1
 8000194:	605a      	str	r2, [r3, #4]
 8000196:	4770      	bx	lr
 8000198:	2101      	movs	r1, #1
 800019a:	4081      	lsls	r1, r0
 800019c:	1c08      	adds	r0, r1, #0
 800019e:	4310      	orrs	r0, r2
 80001a0:	6058      	str	r0, [r3, #4]
 80001a2:	e7f8      	b.n	8000196 <DAC_SoftwareTriggerCmd+0x12>
 80001a4:	40007400 	.word	0x40007400

080001a8 <DAC_DualSoftwareTriggerCmd>:
 80001a8:	4b06      	ldr	r3, [pc, #24]	; (80001c4 <DAC_DualSoftwareTriggerCmd+0x1c>)
 80001aa:	2800      	cmp	r0, #0
 80001ac:	d104      	bne.n	80001b8 <DAC_DualSoftwareTriggerCmd+0x10>
 80001ae:	685a      	ldr	r2, [r3, #4]
 80001b0:	2103      	movs	r1, #3
 80001b2:	438a      	bics	r2, r1
 80001b4:	605a      	str	r2, [r3, #4]
 80001b6:	4770      	bx	lr
 80001b8:	6859      	ldr	r1, [r3, #4]
 80001ba:	2203      	movs	r2, #3
 80001bc:	430a      	orrs	r2, r1
 80001be:	605a      	str	r2, [r3, #4]
 80001c0:	e7f9      	b.n	80001b6 <DAC_DualSoftwareTriggerCmd+0xe>
 80001c2:	46c0      	nop			; (mov r8, r8)
 80001c4:	40007400 	.word	0x40007400

080001c8 <DAC_WaveGenerationCmd>:
 80001c8:	4b06      	ldr	r3, [pc, #24]	; (80001e4 <DAC_WaveGenerationCmd+0x1c>)
 80001ca:	2a00      	cmp	r2, #0
 80001cc:	d104      	bne.n	80001d8 <DAC_WaveGenerationCmd+0x10>
 80001ce:	681a      	ldr	r2, [r3, #0]
 80001d0:	4081      	lsls	r1, r0
 80001d2:	438a      	bics	r2, r1
 80001d4:	601a      	str	r2, [r3, #0]
 80001d6:	4770      	bx	lr
 80001d8:	681a      	ldr	r2, [r3, #0]
 80001da:	4081      	lsls	r1, r0
 80001dc:	1c08      	adds	r0, r1, #0
 80001de:	4310      	orrs	r0, r2
 80001e0:	6018      	str	r0, [r3, #0]
 80001e2:	e7f8      	b.n	80001d6 <DAC_WaveGenerationCmd+0xe>
 80001e4:	40007400 	.word	0x40007400

080001e8 <DAC_SetChannel1Data>:
 80001e8:	b082      	sub	sp, #8
 80001ea:	2300      	movs	r3, #0
 80001ec:	9301      	str	r3, [sp, #4]
 80001ee:	4b05      	ldr	r3, [pc, #20]	; (8000204 <DAC_SetChannel1Data+0x1c>)
 80001f0:	9301      	str	r3, [sp, #4]
 80001f2:	9b01      	ldr	r3, [sp, #4]
 80001f4:	3308      	adds	r3, #8
 80001f6:	1818      	adds	r0, r3, r0
 80001f8:	9001      	str	r0, [sp, #4]
 80001fa:	9b01      	ldr	r3, [sp, #4]
 80001fc:	6019      	str	r1, [r3, #0]
 80001fe:	b002      	add	sp, #8
 8000200:	4770      	bx	lr
 8000202:	46c0      	nop			; (mov r8, r8)
 8000204:	40007400 	.word	0x40007400

08000208 <DAC_SetChannel2Data>:
 8000208:	b082      	sub	sp, #8
 800020a:	2300      	movs	r3, #0
 800020c:	9301      	str	r3, [sp, #4]
 800020e:	4b05      	ldr	r3, [pc, #20]	; (8000224 <DAC_SetChannel2Data+0x1c>)
 8000210:	9301      	str	r3, [sp, #4]
 8000212:	9b01      	ldr	r3, [sp, #4]
 8000214:	3314      	adds	r3, #20
 8000216:	1818      	adds	r0, r3, r0
 8000218:	9001      	str	r0, [sp, #4]
 800021a:	9b01      	ldr	r3, [sp, #4]
 800021c:	6019      	str	r1, [r3, #0]
 800021e:	b002      	add	sp, #8
 8000220:	4770      	bx	lr
 8000222:	46c0      	nop			; (mov r8, r8)
 8000224:	40007400 	.word	0x40007400

08000228 <DAC_SetDualChannelData>:
 8000228:	2808      	cmp	r0, #8
 800022a:	d005      	beq.n	8000238 <DAC_SetDualChannelData+0x10>
 800022c:	0409      	lsls	r1, r1, #16
 800022e:	4311      	orrs	r1, r2
 8000230:	4b03      	ldr	r3, [pc, #12]	; (8000240 <DAC_SetDualChannelData+0x18>)
 8000232:	18c0      	adds	r0, r0, r3
 8000234:	6001      	str	r1, [r0, #0]
 8000236:	4770      	bx	lr
 8000238:	0209      	lsls	r1, r1, #8
 800023a:	4311      	orrs	r1, r2
 800023c:	e7f8      	b.n	8000230 <DAC_SetDualChannelData+0x8>
 800023e:	46c0      	nop			; (mov r8, r8)
 8000240:	40007420 	.word	0x40007420

08000244 <DAC_GetDataOutputValue>:
 8000244:	b082      	sub	sp, #8
 8000246:	2300      	movs	r3, #0
 8000248:	9301      	str	r3, [sp, #4]
 800024a:	4b06      	ldr	r3, [pc, #24]	; (8000264 <DAC_GetDataOutputValue+0x20>)
 800024c:	0880      	lsrs	r0, r0, #2
 800024e:	9301      	str	r3, [sp, #4]
 8000250:	9b01      	ldr	r3, [sp, #4]
 8000252:	332c      	adds	r3, #44	; 0x2c
 8000254:	1818      	adds	r0, r3, r0
 8000256:	9001      	str	r0, [sp, #4]
 8000258:	9b01      	ldr	r3, [sp, #4]
 800025a:	6818      	ldr	r0, [r3, #0]
 800025c:	b280      	uxth	r0, r0
 800025e:	b002      	add	sp, #8
 8000260:	4770      	bx	lr
 8000262:	46c0      	nop			; (mov r8, r8)
 8000264:	40007400 	.word	0x40007400

08000268 <DAC_DMACmd>:
 8000268:	4b08      	ldr	r3, [pc, #32]	; (800028c <DAC_DMACmd+0x24>)
 800026a:	681a      	ldr	r2, [r3, #0]
 800026c:	2900      	cmp	r1, #0
 800026e:	d105      	bne.n	800027c <DAC_DMACmd+0x14>
 8000270:	2180      	movs	r1, #128	; 0x80
 8000272:	0149      	lsls	r1, r1, #5
 8000274:	4081      	lsls	r1, r0
 8000276:	438a      	bics	r2, r1
 8000278:	601a      	str	r2, [r3, #0]
 800027a:	4770      	bx	lr
 800027c:	2180      	movs	r1, #128	; 0x80
 800027e:	0149      	lsls	r1, r1, #5
 8000280:	4081      	lsls	r1, r0
 8000282:	1c08      	adds	r0, r1, #0
 8000284:	4310      	orrs	r0, r2
 8000286:	6018      	str	r0, [r3, #0]
 8000288:	e7f7      	b.n	800027a <DAC_DMACmd+0x12>
 800028a:	46c0      	nop			; (mov r8, r8)
 800028c:	40007400 	.word	0x40007400

08000290 <DAC_ITConfig>:
 8000290:	4b06      	ldr	r3, [pc, #24]	; (80002ac <DAC_ITConfig+0x1c>)
 8000292:	2a00      	cmp	r2, #0
 8000294:	d104      	bne.n	80002a0 <DAC_ITConfig+0x10>
 8000296:	681a      	ldr	r2, [r3, #0]
 8000298:	4081      	lsls	r1, r0
 800029a:	438a      	bics	r2, r1
 800029c:	601a      	str	r2, [r3, #0]
 800029e:	4770      	bx	lr
 80002a0:	681a      	ldr	r2, [r3, #0]
 80002a2:	4081      	lsls	r1, r0
 80002a4:	1c08      	adds	r0, r1, #0
 80002a6:	4310      	orrs	r0, r2
 80002a8:	6018      	str	r0, [r3, #0]
 80002aa:	e7f8      	b.n	800029e <DAC_ITConfig+0xe>
 80002ac:	40007400 	.word	0x40007400

080002b0 <DAC_GetFlagStatus>:
 80002b0:	4b04      	ldr	r3, [pc, #16]	; (80002c4 <DAC_GetFlagStatus+0x14>)
 80002b2:	4081      	lsls	r1, r0
 80002b4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80002b6:	1c08      	adds	r0, r1, #0
 80002b8:	4018      	ands	r0, r3
 80002ba:	1e43      	subs	r3, r0, #1
 80002bc:	4198      	sbcs	r0, r3
 80002be:	b2c0      	uxtb	r0, r0
 80002c0:	4770      	bx	lr
 80002c2:	46c0      	nop			; (mov r8, r8)
 80002c4:	40007400 	.word	0x40007400

080002c8 <DAC_ClearFlag>:
 80002c8:	4b01      	ldr	r3, [pc, #4]	; (80002d0 <DAC_ClearFlag+0x8>)
 80002ca:	4081      	lsls	r1, r0
 80002cc:	6359      	str	r1, [r3, #52]	; 0x34
 80002ce:	4770      	bx	lr
 80002d0:	40007400 	.word	0x40007400

080002d4 <DAC_GetITStatus>:
 80002d4:	4b05      	ldr	r3, [pc, #20]	; (80002ec <DAC_GetITStatus+0x18>)
 80002d6:	4081      	lsls	r1, r0
 80002d8:	681a      	ldr	r2, [r3, #0]
 80002da:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80002dc:	2000      	movs	r0, #0
 80002de:	420b      	tst	r3, r1
 80002e0:	d003      	beq.n	80002ea <DAC_GetITStatus+0x16>
 80002e2:	4011      	ands	r1, r2
 80002e4:	1e4a      	subs	r2, r1, #1
 80002e6:	4191      	sbcs	r1, r2
 80002e8:	b2c8      	uxtb	r0, r1
 80002ea:	4770      	bx	lr
 80002ec:	40007400 	.word	0x40007400

080002f0 <DAC_ClearITPendingBit>:
 80002f0:	4b01      	ldr	r3, [pc, #4]	; (80002f8 <DAC_ClearITPendingBit+0x8>)
 80002f2:	4081      	lsls	r1, r0
 80002f4:	6359      	str	r1, [r3, #52]	; 0x34
 80002f6:	4770      	bx	lr
 80002f8:	40007400 	.word	0x40007400

080002fc <GPIO_DeInit>:
 80002fc:	b508      	push	{r3, lr}
 80002fe:	4b30      	ldr	r3, [pc, #192]	; (80003c0 <GPIO_DeInit+0xc4>)
 8000300:	4298      	cmp	r0, r3
 8000302:	d01e      	beq.n	8000342 <GPIO_DeInit+0x46>
 8000304:	4b2f      	ldr	r3, [pc, #188]	; (80003c4 <GPIO_DeInit+0xc8>)
 8000306:	4298      	cmp	r0, r3
 8000308:	d024      	beq.n	8000354 <GPIO_DeInit+0x58>
 800030a:	4b2f      	ldr	r3, [pc, #188]	; (80003c8 <GPIO_DeInit+0xcc>)
 800030c:	4298      	cmp	r0, r3
 800030e:	d02a      	beq.n	8000366 <GPIO_DeInit+0x6a>
 8000310:	4b2e      	ldr	r3, [pc, #184]	; (80003cc <GPIO_DeInit+0xd0>)
 8000312:	4298      	cmp	r0, r3
 8000314:	d030      	beq.n	8000378 <GPIO_DeInit+0x7c>
 8000316:	4b2e      	ldr	r3, [pc, #184]	; (80003d0 <GPIO_DeInit+0xd4>)
 8000318:	4298      	cmp	r0, r3
 800031a:	d036      	beq.n	800038a <GPIO_DeInit+0x8e>
 800031c:	4b2d      	ldr	r3, [pc, #180]	; (80003d4 <GPIO_DeInit+0xd8>)
 800031e:	4298      	cmp	r0, r3
 8000320:	d03c      	beq.n	800039c <GPIO_DeInit+0xa0>
 8000322:	4b2d      	ldr	r3, [pc, #180]	; (80003d8 <GPIO_DeInit+0xdc>)
 8000324:	4298      	cmp	r0, r3
 8000326:	d042      	beq.n	80003ae <GPIO_DeInit+0xb2>
 8000328:	4b2c      	ldr	r3, [pc, #176]	; (80003dc <GPIO_DeInit+0xe0>)
 800032a:	4298      	cmp	r0, r3
 800032c:	d000      	beq.n	8000330 <GPIO_DeInit+0x34>
 800032e:	bd08      	pop	{r3, pc}
 8000330:	2020      	movs	r0, #32
 8000332:	2101      	movs	r1, #1
 8000334:	f000 fa82 	bl	800083c <RCC_AHBPeriphResetCmd>
 8000338:	2020      	movs	r0, #32
 800033a:	2100      	movs	r1, #0
 800033c:	f000 fa7e 	bl	800083c <RCC_AHBPeriphResetCmd>
 8000340:	e7f5      	b.n	800032e <GPIO_DeInit+0x32>
 8000342:	2001      	movs	r0, #1
 8000344:	2101      	movs	r1, #1
 8000346:	f000 fa79 	bl	800083c <RCC_AHBPeriphResetCmd>
 800034a:	2001      	movs	r0, #1
 800034c:	2100      	movs	r1, #0
 800034e:	f000 fa75 	bl	800083c <RCC_AHBPeriphResetCmd>
 8000352:	e7ec      	b.n	800032e <GPIO_DeInit+0x32>
 8000354:	2002      	movs	r0, #2
 8000356:	2101      	movs	r1, #1
 8000358:	f000 fa70 	bl	800083c <RCC_AHBPeriphResetCmd>
 800035c:	2002      	movs	r0, #2
 800035e:	2100      	movs	r1, #0
 8000360:	f000 fa6c 	bl	800083c <RCC_AHBPeriphResetCmd>
 8000364:	e7e3      	b.n	800032e <GPIO_DeInit+0x32>
 8000366:	2004      	movs	r0, #4
 8000368:	2101      	movs	r1, #1
 800036a:	f000 fa67 	bl	800083c <RCC_AHBPeriphResetCmd>
 800036e:	2004      	movs	r0, #4
 8000370:	2100      	movs	r1, #0
 8000372:	f000 fa63 	bl	800083c <RCC_AHBPeriphResetCmd>
 8000376:	e7da      	b.n	800032e <GPIO_DeInit+0x32>
 8000378:	2008      	movs	r0, #8
 800037a:	2101      	movs	r1, #1
 800037c:	f000 fa5e 	bl	800083c <RCC_AHBPeriphResetCmd>
 8000380:	2008      	movs	r0, #8
 8000382:	2100      	movs	r1, #0
 8000384:	f000 fa5a 	bl	800083c <RCC_AHBPeriphResetCmd>
 8000388:	e7d1      	b.n	800032e <GPIO_DeInit+0x32>
 800038a:	2010      	movs	r0, #16
 800038c:	2101      	movs	r1, #1
 800038e:	f000 fa55 	bl	800083c <RCC_AHBPeriphResetCmd>
 8000392:	2010      	movs	r0, #16
 8000394:	2100      	movs	r1, #0
 8000396:	f000 fa51 	bl	800083c <RCC_AHBPeriphResetCmd>
 800039a:	e7c8      	b.n	800032e <GPIO_DeInit+0x32>
 800039c:	2040      	movs	r0, #64	; 0x40
 800039e:	2101      	movs	r1, #1
 80003a0:	f000 fa4c 	bl	800083c <RCC_AHBPeriphResetCmd>
 80003a4:	2040      	movs	r0, #64	; 0x40
 80003a6:	2100      	movs	r1, #0
 80003a8:	f000 fa48 	bl	800083c <RCC_AHBPeriphResetCmd>
 80003ac:	e7bf      	b.n	800032e <GPIO_DeInit+0x32>
 80003ae:	2080      	movs	r0, #128	; 0x80
 80003b0:	2101      	movs	r1, #1
 80003b2:	f000 fa43 	bl	800083c <RCC_AHBPeriphResetCmd>
 80003b6:	2080      	movs	r0, #128	; 0x80
 80003b8:	2100      	movs	r1, #0
 80003ba:	f000 fa3f 	bl	800083c <RCC_AHBPeriphResetCmd>
 80003be:	e7b6      	b.n	800032e <GPIO_DeInit+0x32>
 80003c0:	40020000 	.word	0x40020000
 80003c4:	40020400 	.word	0x40020400
 80003c8:	40020800 	.word	0x40020800
 80003cc:	40020c00 	.word	0x40020c00
 80003d0:	40021000 	.word	0x40021000
 80003d4:	40021800 	.word	0x40021800
 80003d8:	40021c00 	.word	0x40021c00
 80003dc:	40021400 	.word	0x40021400

080003e0 <GPIO_Init>:
 80003e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80003e2:	4644      	mov	r4, r8
 80003e4:	465f      	mov	r7, fp
 80003e6:	4656      	mov	r6, sl
 80003e8:	464d      	mov	r5, r9
 80003ea:	b4f0      	push	{r4, r5, r6, r7}
 80003ec:	468c      	mov	ip, r1
 80003ee:	680f      	ldr	r7, [r1, #0]
 80003f0:	2103      	movs	r1, #3
 80003f2:	b083      	sub	sp, #12
 80003f4:	2400      	movs	r4, #0
 80003f6:	2300      	movs	r3, #0
 80003f8:	2601      	movs	r6, #1
 80003fa:	4688      	mov	r8, r1
 80003fc:	e003      	b.n	8000406 <GPIO_Init+0x26>
 80003fe:	3301      	adds	r3, #1
 8000400:	3402      	adds	r4, #2
 8000402:	2b10      	cmp	r3, #16
 8000404:	d026      	beq.n	8000454 <GPIO_Init+0x74>
 8000406:	1c32      	adds	r2, r6, #0
 8000408:	409a      	lsls	r2, r3
 800040a:	1c3d      	adds	r5, r7, #0
 800040c:	4015      	ands	r5, r2
 800040e:	4295      	cmp	r5, r2
 8000410:	d1f5      	bne.n	80003fe <GPIO_Init+0x1e>
 8000412:	4642      	mov	r2, r8
 8000414:	6801      	ldr	r1, [r0, #0]
 8000416:	40a2      	lsls	r2, r4
 8000418:	43d2      	mvns	r2, r2
 800041a:	4011      	ands	r1, r2
 800041c:	6001      	str	r1, [r0, #0]
 800041e:	4661      	mov	r1, ip
 8000420:	7909      	ldrb	r1, [r1, #4]
 8000422:	4693      	mov	fp, r2
 8000424:	6802      	ldr	r2, [r0, #0]
 8000426:	9101      	str	r1, [sp, #4]
 8000428:	40a1      	lsls	r1, r4
 800042a:	4311      	orrs	r1, r2
 800042c:	6001      	str	r1, [r0, #0]
 800042e:	9901      	ldr	r1, [sp, #4]
 8000430:	3901      	subs	r1, #1
 8000432:	b2c9      	uxtb	r1, r1
 8000434:	2901      	cmp	r1, #1
 8000436:	d914      	bls.n	8000462 <GPIO_Init+0x82>
 8000438:	68c1      	ldr	r1, [r0, #12]
 800043a:	465a      	mov	r2, fp
 800043c:	400a      	ands	r2, r1
 800043e:	4665      	mov	r5, ip
 8000440:	60c2      	str	r2, [r0, #12]
 8000442:	79ea      	ldrb	r2, [r5, #7]
 8000444:	68c1      	ldr	r1, [r0, #12]
 8000446:	40a2      	lsls	r2, r4
 8000448:	430a      	orrs	r2, r1
 800044a:	3301      	adds	r3, #1
 800044c:	60c2      	str	r2, [r0, #12]
 800044e:	3402      	adds	r4, #2
 8000450:	2b10      	cmp	r3, #16
 8000452:	d1d8      	bne.n	8000406 <GPIO_Init+0x26>
 8000454:	b003      	add	sp, #12
 8000456:	bc3c      	pop	{r2, r3, r4, r5}
 8000458:	4690      	mov	r8, r2
 800045a:	4699      	mov	r9, r3
 800045c:	46a2      	mov	sl, r4
 800045e:	46ab      	mov	fp, r5
 8000460:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000462:	6881      	ldr	r1, [r0, #8]
 8000464:	465a      	mov	r2, fp
 8000466:	4011      	ands	r1, r2
 8000468:	4662      	mov	r2, ip
 800046a:	6081      	str	r1, [r0, #8]
 800046c:	7952      	ldrb	r2, [r2, #5]
 800046e:	6881      	ldr	r1, [r0, #8]
 8000470:	40a2      	lsls	r2, r4
 8000472:	4311      	orrs	r1, r2
 8000474:	6081      	str	r1, [r0, #8]
 8000476:	6841      	ldr	r1, [r0, #4]
 8000478:	4662      	mov	r2, ip
 800047a:	b289      	uxth	r1, r1
 800047c:	43a9      	bics	r1, r5
 800047e:	8081      	strh	r1, [r0, #4]
 8000480:	7991      	ldrb	r1, [r2, #6]
 8000482:	6845      	ldr	r5, [r0, #4]
 8000484:	4099      	lsls	r1, r3
 8000486:	4329      	orrs	r1, r5
 8000488:	b289      	uxth	r1, r1
 800048a:	8081      	strh	r1, [r0, #4]
 800048c:	e7d4      	b.n	8000438 <GPIO_Init+0x58>
 800048e:	46c0      	nop			; (mov r8, r8)

08000490 <GPIO_StructInit>:
 8000490:	4b03      	ldr	r3, [pc, #12]	; (80004a0 <GPIO_StructInit+0x10>)
 8000492:	6003      	str	r3, [r0, #0]
 8000494:	2300      	movs	r3, #0
 8000496:	7103      	strb	r3, [r0, #4]
 8000498:	7143      	strb	r3, [r0, #5]
 800049a:	7183      	strb	r3, [r0, #6]
 800049c:	71c3      	strb	r3, [r0, #7]
 800049e:	4770      	bx	lr
 80004a0:	0000ffff 	.word	0x0000ffff

080004a4 <GPIO_PinLockConfig>:
 80004a4:	2380      	movs	r3, #128	; 0x80
 80004a6:	b082      	sub	sp, #8
 80004a8:	025b      	lsls	r3, r3, #9
 80004aa:	9301      	str	r3, [sp, #4]
 80004ac:	9b01      	ldr	r3, [sp, #4]
 80004ae:	430b      	orrs	r3, r1
 80004b0:	9301      	str	r3, [sp, #4]
 80004b2:	9b01      	ldr	r3, [sp, #4]
 80004b4:	61c3      	str	r3, [r0, #28]
 80004b6:	61c1      	str	r1, [r0, #28]
 80004b8:	9b01      	ldr	r3, [sp, #4]
 80004ba:	61c3      	str	r3, [r0, #28]
 80004bc:	69c3      	ldr	r3, [r0, #28]
 80004be:	9301      	str	r3, [sp, #4]
 80004c0:	69c3      	ldr	r3, [r0, #28]
 80004c2:	9301      	str	r3, [sp, #4]
 80004c4:	b002      	add	sp, #8
 80004c6:	4770      	bx	lr

080004c8 <GPIO_ReadInputDataBit>:
 80004c8:	6900      	ldr	r0, [r0, #16]
 80004ca:	4008      	ands	r0, r1
 80004cc:	1e43      	subs	r3, r0, #1
 80004ce:	4198      	sbcs	r0, r3
 80004d0:	b2c0      	uxtb	r0, r0
 80004d2:	4770      	bx	lr

080004d4 <GPIO_ReadInputData>:
 80004d4:	6900      	ldr	r0, [r0, #16]
 80004d6:	b280      	uxth	r0, r0
 80004d8:	4770      	bx	lr
 80004da:	46c0      	nop			; (mov r8, r8)

080004dc <GPIO_ReadOutputDataBit>:
 80004dc:	6940      	ldr	r0, [r0, #20]
 80004de:	4008      	ands	r0, r1
 80004e0:	1e43      	subs	r3, r0, #1
 80004e2:	4198      	sbcs	r0, r3
 80004e4:	b2c0      	uxtb	r0, r0
 80004e6:	4770      	bx	lr

080004e8 <GPIO_ReadOutputData>:
 80004e8:	6940      	ldr	r0, [r0, #20]
 80004ea:	b280      	uxth	r0, r0
 80004ec:	4770      	bx	lr
 80004ee:	46c0      	nop			; (mov r8, r8)

080004f0 <GPIO_SetBits>:
 80004f0:	8301      	strh	r1, [r0, #24]
 80004f2:	4770      	bx	lr

080004f4 <GPIO_ResetBits>:
 80004f4:	8341      	strh	r1, [r0, #26]
 80004f6:	4770      	bx	lr

080004f8 <GPIO_WriteBit>:
 80004f8:	2a00      	cmp	r2, #0
 80004fa:	d101      	bne.n	8000500 <GPIO_WriteBit+0x8>
 80004fc:	8341      	strh	r1, [r0, #26]
 80004fe:	4770      	bx	lr
 8000500:	8301      	strh	r1, [r0, #24]
 8000502:	e7fc      	b.n	80004fe <GPIO_WriteBit+0x6>

08000504 <GPIO_Write>:
 8000504:	8281      	strh	r1, [r0, #20]
 8000506:	4770      	bx	lr

08000508 <GPIO_ToggleBits>:
 8000508:	6943      	ldr	r3, [r0, #20]
 800050a:	b29b      	uxth	r3, r3
 800050c:	4059      	eors	r1, r3
 800050e:	8281      	strh	r1, [r0, #20]
 8000510:	4770      	bx	lr
 8000512:	46c0      	nop			; (mov r8, r8)

08000514 <GPIO_PinAFConfig>:
 8000514:	2307      	movs	r3, #7
 8000516:	400b      	ands	r3, r1
 8000518:	08c9      	lsrs	r1, r1, #3
 800051a:	0089      	lsls	r1, r1, #2
 800051c:	1840      	adds	r0, r0, r1
 800051e:	b510      	push	{r4, lr}
 8000520:	6a01      	ldr	r1, [r0, #32]
 8000522:	009b      	lsls	r3, r3, #2
 8000524:	240f      	movs	r4, #15
 8000526:	409c      	lsls	r4, r3
 8000528:	43a1      	bics	r1, r4
 800052a:	6201      	str	r1, [r0, #32]
 800052c:	6a01      	ldr	r1, [r0, #32]
 800052e:	409a      	lsls	r2, r3
 8000530:	1c13      	adds	r3, r2, #0
 8000532:	430b      	orrs	r3, r1
 8000534:	6203      	str	r3, [r0, #32]
 8000536:	bd10      	pop	{r4, pc}

08000538 <RCC_DeInit>:
 8000538:	4b0c      	ldr	r3, [pc, #48]	; (800056c <RCC_DeInit+0x34>)
 800053a:	2280      	movs	r2, #128	; 0x80
 800053c:	6819      	ldr	r1, [r3, #0]
 800053e:	0052      	lsls	r2, r2, #1
 8000540:	430a      	orrs	r2, r1
 8000542:	601a      	str	r2, [r3, #0]
 8000544:	6899      	ldr	r1, [r3, #8]
 8000546:	4a0a      	ldr	r2, [pc, #40]	; (8000570 <RCC_DeInit+0x38>)
 8000548:	400a      	ands	r2, r1
 800054a:	609a      	str	r2, [r3, #8]
 800054c:	6819      	ldr	r1, [r3, #0]
 800054e:	4a09      	ldr	r2, [pc, #36]	; (8000574 <RCC_DeInit+0x3c>)
 8000550:	400a      	ands	r2, r1
 8000552:	601a      	str	r2, [r3, #0]
 8000554:	6819      	ldr	r1, [r3, #0]
 8000556:	4a08      	ldr	r2, [pc, #32]	; (8000578 <RCC_DeInit+0x40>)
 8000558:	400a      	ands	r2, r1
 800055a:	601a      	str	r2, [r3, #0]
 800055c:	6899      	ldr	r1, [r3, #8]
 800055e:	4a07      	ldr	r2, [pc, #28]	; (800057c <RCC_DeInit+0x44>)
 8000560:	400a      	ands	r2, r1
 8000562:	609a      	str	r2, [r3, #8]
 8000564:	2200      	movs	r2, #0
 8000566:	60da      	str	r2, [r3, #12]
 8000568:	4770      	bx	lr
 800056a:	46c0      	nop			; (mov r8, r8)
 800056c:	40023800 	.word	0x40023800
 8000570:	88ffc00c 	.word	0x88ffc00c
 8000574:	eefefffe 	.word	0xeefefffe
 8000578:	fffbffff 	.word	0xfffbffff
 800057c:	ff02ffff 	.word	0xff02ffff

08000580 <RCC_HSEConfig>:
 8000580:	4b02      	ldr	r3, [pc, #8]	; (800058c <RCC_HSEConfig+0xc>)
 8000582:	2200      	movs	r2, #0
 8000584:	701a      	strb	r2, [r3, #0]
 8000586:	7018      	strb	r0, [r3, #0]
 8000588:	4770      	bx	lr
 800058a:	46c0      	nop			; (mov r8, r8)
 800058c:	40023802 	.word	0x40023802

08000590 <RCC_WaitForHSEStartUp>:
 8000590:	2300      	movs	r3, #0
 8000592:	b082      	sub	sp, #8
 8000594:	9301      	str	r3, [sp, #4]
 8000596:	2280      	movs	r2, #128	; 0x80
 8000598:	23a0      	movs	r3, #160	; 0xa0
 800059a:	490b      	ldr	r1, [pc, #44]	; (80005c8 <RCC_WaitForHSEStartUp+0x38>)
 800059c:	0292      	lsls	r2, r2, #10
 800059e:	00d8      	lsls	r0, r3, #3
 80005a0:	680b      	ldr	r3, [r1, #0]
 80005a2:	4213      	tst	r3, r2
 80005a4:	d10b      	bne.n	80005be <RCC_WaitForHSEStartUp+0x2e>
 80005a6:	9b01      	ldr	r3, [sp, #4]
 80005a8:	3301      	adds	r3, #1
 80005aa:	9301      	str	r3, [sp, #4]
 80005ac:	9b01      	ldr	r3, [sp, #4]
 80005ae:	4283      	cmp	r3, r0
 80005b0:	d1f6      	bne.n	80005a0 <RCC_WaitForHSEStartUp+0x10>
 80005b2:	4b05      	ldr	r3, [pc, #20]	; (80005c8 <RCC_WaitForHSEStartUp+0x38>)
 80005b4:	6818      	ldr	r0, [r3, #0]
 80005b6:	0380      	lsls	r0, r0, #14
 80005b8:	0fc0      	lsrs	r0, r0, #31
 80005ba:	b002      	add	sp, #8
 80005bc:	4770      	bx	lr
 80005be:	9b01      	ldr	r3, [sp, #4]
 80005c0:	3301      	adds	r3, #1
 80005c2:	9301      	str	r3, [sp, #4]
 80005c4:	9b01      	ldr	r3, [sp, #4]
 80005c6:	e7f4      	b.n	80005b2 <RCC_WaitForHSEStartUp+0x22>
 80005c8:	40023800 	.word	0x40023800

080005cc <RCC_AdjustMSICalibrationValue>:
 80005cc:	4b01      	ldr	r3, [pc, #4]	; (80005d4 <RCC_AdjustMSICalibrationValue+0x8>)
 80005ce:	7018      	strb	r0, [r3, #0]
 80005d0:	4770      	bx	lr
 80005d2:	46c0      	nop			; (mov r8, r8)
 80005d4:	40023807 	.word	0x40023807

080005d8 <RCC_MSIRangeConfig>:
 80005d8:	4b03      	ldr	r3, [pc, #12]	; (80005e8 <RCC_MSIRangeConfig+0x10>)
 80005da:	4a04      	ldr	r2, [pc, #16]	; (80005ec <RCC_MSIRangeConfig+0x14>)
 80005dc:	6859      	ldr	r1, [r3, #4]
 80005de:	400a      	ands	r2, r1
 80005e0:	4310      	orrs	r0, r2
 80005e2:	6058      	str	r0, [r3, #4]
 80005e4:	4770      	bx	lr
 80005e6:	46c0      	nop			; (mov r8, r8)
 80005e8:	40023800 	.word	0x40023800
 80005ec:	ffff1fff 	.word	0xffff1fff

080005f0 <RCC_MSICmd>:
 80005f0:	4b01      	ldr	r3, [pc, #4]	; (80005f8 <RCC_MSICmd+0x8>)
 80005f2:	6018      	str	r0, [r3, #0]
 80005f4:	4770      	bx	lr
 80005f6:	46c0      	nop			; (mov r8, r8)
 80005f8:	42470020 	.word	0x42470020

080005fc <RCC_AdjustHSICalibrationValue>:
 80005fc:	4b03      	ldr	r3, [pc, #12]	; (800060c <RCC_AdjustHSICalibrationValue+0x10>)
 80005fe:	4a04      	ldr	r2, [pc, #16]	; (8000610 <RCC_AdjustHSICalibrationValue+0x14>)
 8000600:	6859      	ldr	r1, [r3, #4]
 8000602:	0200      	lsls	r0, r0, #8
 8000604:	400a      	ands	r2, r1
 8000606:	4310      	orrs	r0, r2
 8000608:	6058      	str	r0, [r3, #4]
 800060a:	4770      	bx	lr
 800060c:	40023800 	.word	0x40023800
 8000610:	ffffe0ff 	.word	0xffffe0ff

08000614 <RCC_HSICmd>:
 8000614:	4b01      	ldr	r3, [pc, #4]	; (800061c <RCC_HSICmd+0x8>)
 8000616:	6018      	str	r0, [r3, #0]
 8000618:	4770      	bx	lr
 800061a:	46c0      	nop			; (mov r8, r8)
 800061c:	42470000 	.word	0x42470000

08000620 <RCC_LSEConfig>:
 8000620:	4b02      	ldr	r3, [pc, #8]	; (800062c <RCC_LSEConfig+0xc>)
 8000622:	2200      	movs	r2, #0
 8000624:	701a      	strb	r2, [r3, #0]
 8000626:	7018      	strb	r0, [r3, #0]
 8000628:	4770      	bx	lr
 800062a:	46c0      	nop			; (mov r8, r8)
 800062c:	40023835 	.word	0x40023835

08000630 <RCC_LSICmd>:
 8000630:	4b01      	ldr	r3, [pc, #4]	; (8000638 <RCC_LSICmd+0x8>)
 8000632:	6018      	str	r0, [r3, #0]
 8000634:	4770      	bx	lr
 8000636:	46c0      	nop			; (mov r8, r8)
 8000638:	42470680 	.word	0x42470680

0800063c <RCC_PLLConfig>:
 800063c:	4310      	orrs	r0, r2
 800063e:	4b02      	ldr	r3, [pc, #8]	; (8000648 <RCC_PLLConfig+0xc>)
 8000640:	4301      	orrs	r1, r0
 8000642:	7019      	strb	r1, [r3, #0]
 8000644:	4770      	bx	lr
 8000646:	46c0      	nop			; (mov r8, r8)
 8000648:	4002380a 	.word	0x4002380a

0800064c <RCC_PLLCmd>:
 800064c:	4b01      	ldr	r3, [pc, #4]	; (8000654 <RCC_PLLCmd+0x8>)
 800064e:	6018      	str	r0, [r3, #0]
 8000650:	4770      	bx	lr
 8000652:	46c0      	nop			; (mov r8, r8)
 8000654:	42470060 	.word	0x42470060

08000658 <RCC_ClockSecuritySystemCmd>:
 8000658:	4b01      	ldr	r3, [pc, #4]	; (8000660 <RCC_ClockSecuritySystemCmd+0x8>)
 800065a:	6018      	str	r0, [r3, #0]
 800065c:	4770      	bx	lr
 800065e:	46c0      	nop			; (mov r8, r8)
 8000660:	42470070 	.word	0x42470070

08000664 <RCC_LSEClockSecuritySystemCmd>:
 8000664:	4b01      	ldr	r3, [pc, #4]	; (800066c <RCC_LSEClockSecuritySystemCmd+0x8>)
 8000666:	6018      	str	r0, [r3, #0]
 8000668:	4770      	bx	lr
 800066a:	46c0      	nop			; (mov r8, r8)
 800066c:	424706ac 	.word	0x424706ac

08000670 <RCC_MCOConfig>:
 8000670:	4b01      	ldr	r3, [pc, #4]	; (8000678 <RCC_MCOConfig+0x8>)
 8000672:	4308      	orrs	r0, r1
 8000674:	7018      	strb	r0, [r3, #0]
 8000676:	4770      	bx	lr
 8000678:	4002380b 	.word	0x4002380b

0800067c <RCC_SYSCLKConfig>:
 800067c:	4b03      	ldr	r3, [pc, #12]	; (800068c <RCC_SYSCLKConfig+0x10>)
 800067e:	2103      	movs	r1, #3
 8000680:	689a      	ldr	r2, [r3, #8]
 8000682:	438a      	bics	r2, r1
 8000684:	4310      	orrs	r0, r2
 8000686:	6098      	str	r0, [r3, #8]
 8000688:	4770      	bx	lr
 800068a:	46c0      	nop			; (mov r8, r8)
 800068c:	40023800 	.word	0x40023800

08000690 <RCC_GetSYSCLKSource>:
 8000690:	4b02      	ldr	r3, [pc, #8]	; (800069c <RCC_GetSYSCLKSource+0xc>)
 8000692:	200c      	movs	r0, #12
 8000694:	689b      	ldr	r3, [r3, #8]
 8000696:	4018      	ands	r0, r3
 8000698:	4770      	bx	lr
 800069a:	46c0      	nop			; (mov r8, r8)
 800069c:	40023800 	.word	0x40023800

080006a0 <RCC_HCLKConfig>:
 80006a0:	4b03      	ldr	r3, [pc, #12]	; (80006b0 <RCC_HCLKConfig+0x10>)
 80006a2:	21f0      	movs	r1, #240	; 0xf0
 80006a4:	689a      	ldr	r2, [r3, #8]
 80006a6:	438a      	bics	r2, r1
 80006a8:	4310      	orrs	r0, r2
 80006aa:	6098      	str	r0, [r3, #8]
 80006ac:	4770      	bx	lr
 80006ae:	46c0      	nop			; (mov r8, r8)
 80006b0:	40023800 	.word	0x40023800

080006b4 <RCC_PCLK1Config>:
 80006b4:	4b03      	ldr	r3, [pc, #12]	; (80006c4 <RCC_PCLK1Config+0x10>)
 80006b6:	4a04      	ldr	r2, [pc, #16]	; (80006c8 <RCC_PCLK1Config+0x14>)
 80006b8:	6899      	ldr	r1, [r3, #8]
 80006ba:	400a      	ands	r2, r1
 80006bc:	4310      	orrs	r0, r2
 80006be:	6098      	str	r0, [r3, #8]
 80006c0:	4770      	bx	lr
 80006c2:	46c0      	nop			; (mov r8, r8)
 80006c4:	40023800 	.word	0x40023800
 80006c8:	fffff8ff 	.word	0xfffff8ff

080006cc <RCC_PCLK2Config>:
 80006cc:	4b03      	ldr	r3, [pc, #12]	; (80006dc <RCC_PCLK2Config+0x10>)
 80006ce:	4a04      	ldr	r2, [pc, #16]	; (80006e0 <RCC_PCLK2Config+0x14>)
 80006d0:	6899      	ldr	r1, [r3, #8]
 80006d2:	00c0      	lsls	r0, r0, #3
 80006d4:	400a      	ands	r2, r1
 80006d6:	4310      	orrs	r0, r2
 80006d8:	6098      	str	r0, [r3, #8]
 80006da:	4770      	bx	lr
 80006dc:	40023800 	.word	0x40023800
 80006e0:	ffffc7ff 	.word	0xffffc7ff

080006e4 <RCC_GetClocksFreq>:
 80006e4:	4a29      	ldr	r2, [pc, #164]	; (800078c <RCC_GetClocksFreq+0xa8>)
 80006e6:	b538      	push	{r3, r4, r5, lr}
 80006e8:	6893      	ldr	r3, [r2, #8]
 80006ea:	210c      	movs	r1, #12
 80006ec:	1c04      	adds	r4, r0, #0
 80006ee:	400b      	ands	r3, r1
 80006f0:	2b04      	cmp	r3, #4
 80006f2:	d041      	beq.n	8000778 <RCC_GetClocksFreq+0x94>
 80006f4:	d931      	bls.n	800075a <RCC_GetClocksFreq+0x76>
 80006f6:	2b08      	cmp	r3, #8
 80006f8:	d014      	beq.n	8000724 <RCC_GetClocksFreq+0x40>
 80006fa:	2b0c      	cmp	r3, #12
 80006fc:	d139      	bne.n	8000772 <RCC_GetClocksFreq+0x8e>
 80006fe:	6893      	ldr	r3, [r2, #8]
 8000700:	4d23      	ldr	r5, [pc, #140]	; (8000790 <RCC_GetClocksFreq+0xac>)
 8000702:	6891      	ldr	r1, [r2, #8]
 8000704:	029b      	lsls	r3, r3, #10
 8000706:	0f1b      	lsrs	r3, r3, #28
 8000708:	5ceb      	ldrb	r3, [r5, r3]
 800070a:	0209      	lsls	r1, r1, #8
 800070c:	6892      	ldr	r2, [r2, #8]
 800070e:	0f89      	lsrs	r1, r1, #30
 8000710:	b2db      	uxtb	r3, r3
 8000712:	3101      	adds	r1, #1
 8000714:	03d0      	lsls	r0, r2, #15
 8000716:	d433      	bmi.n	8000780 <RCC_GetClocksFreq+0x9c>
 8000718:	481e      	ldr	r0, [pc, #120]	; (8000794 <RCC_GetClocksFreq+0xb0>)
 800071a:	4358      	muls	r0, r3
 800071c:	f000 f90e 	bl	800093c <__aeabi_uidiv>
 8000720:	6020      	str	r0, [r4, #0]
 8000722:	e002      	b.n	800072a <RCC_GetClocksFreq+0x46>
 8000724:	481c      	ldr	r0, [pc, #112]	; (8000798 <RCC_GetClocksFreq+0xb4>)
 8000726:	4d1a      	ldr	r5, [pc, #104]	; (8000790 <RCC_GetClocksFreq+0xac>)
 8000728:	6020      	str	r0, [r4, #0]
 800072a:	4b18      	ldr	r3, [pc, #96]	; (800078c <RCC_GetClocksFreq+0xa8>)
 800072c:	689a      	ldr	r2, [r3, #8]
 800072e:	0612      	lsls	r2, r2, #24
 8000730:	0f12      	lsrs	r2, r2, #28
 8000732:	18aa      	adds	r2, r5, r2
 8000734:	7b12      	ldrb	r2, [r2, #12]
 8000736:	40d0      	lsrs	r0, r2
 8000738:	6060      	str	r0, [r4, #4]
 800073a:	689a      	ldr	r2, [r3, #8]
 800073c:	1c01      	adds	r1, r0, #0
 800073e:	0552      	lsls	r2, r2, #21
 8000740:	0f52      	lsrs	r2, r2, #29
 8000742:	18aa      	adds	r2, r5, r2
 8000744:	7b12      	ldrb	r2, [r2, #12]
 8000746:	40d1      	lsrs	r1, r2
 8000748:	60a1      	str	r1, [r4, #8]
 800074a:	689b      	ldr	r3, [r3, #8]
 800074c:	049b      	lsls	r3, r3, #18
 800074e:	0f5b      	lsrs	r3, r3, #29
 8000750:	18ed      	adds	r5, r5, r3
 8000752:	7b2b      	ldrb	r3, [r5, #12]
 8000754:	40d8      	lsrs	r0, r3
 8000756:	60e0      	str	r0, [r4, #12]
 8000758:	bd38      	pop	{r3, r4, r5, pc}
 800075a:	2b00      	cmp	r3, #0
 800075c:	d109      	bne.n	8000772 <RCC_GetClocksFreq+0x8e>
 800075e:	6853      	ldr	r3, [r2, #4]
 8000760:	041b      	lsls	r3, r3, #16
 8000762:	0f5b      	lsrs	r3, r3, #29
 8000764:	2080      	movs	r0, #128	; 0x80
 8000766:	3301      	adds	r3, #1
 8000768:	0200      	lsls	r0, r0, #8
 800076a:	4098      	lsls	r0, r3
 800076c:	6020      	str	r0, [r4, #0]
 800076e:	4d08      	ldr	r5, [pc, #32]	; (8000790 <RCC_GetClocksFreq+0xac>)
 8000770:	e7db      	b.n	800072a <RCC_GetClocksFreq+0x46>
 8000772:	4b06      	ldr	r3, [pc, #24]	; (800078c <RCC_GetClocksFreq+0xa8>)
 8000774:	685b      	ldr	r3, [r3, #4]
 8000776:	e7f3      	b.n	8000760 <RCC_GetClocksFreq+0x7c>
 8000778:	4806      	ldr	r0, [pc, #24]	; (8000794 <RCC_GetClocksFreq+0xb0>)
 800077a:	4d05      	ldr	r5, [pc, #20]	; (8000790 <RCC_GetClocksFreq+0xac>)
 800077c:	6020      	str	r0, [r4, #0]
 800077e:	e7d4      	b.n	800072a <RCC_GetClocksFreq+0x46>
 8000780:	4805      	ldr	r0, [pc, #20]	; (8000798 <RCC_GetClocksFreq+0xb4>)
 8000782:	4358      	muls	r0, r3
 8000784:	f000 f8da 	bl	800093c <__aeabi_uidiv>
 8000788:	6020      	str	r0, [r4, #0]
 800078a:	e7ce      	b.n	800072a <RCC_GetClocksFreq+0x46>
 800078c:	40023800 	.word	0x40023800
 8000790:	20000000 	.word	0x20000000
 8000794:	00f42400 	.word	0x00f42400
 8000798:	007a1200 	.word	0x007a1200

0800079c <RCC_RTCCLKConfig>:
 800079c:	23c0      	movs	r3, #192	; 0xc0
 800079e:	029b      	lsls	r3, r3, #10
 80007a0:	1c02      	adds	r2, r0, #0
 80007a2:	b510      	push	{r4, lr}
 80007a4:	401a      	ands	r2, r3
 80007a6:	429a      	cmp	r2, r3
 80007a8:	d108      	bne.n	80007bc <RCC_RTCCLKConfig+0x20>
 80007aa:	4b09      	ldr	r3, [pc, #36]	; (80007d0 <RCC_RTCCLKConfig+0x34>)
 80007ac:	4909      	ldr	r1, [pc, #36]	; (80007d4 <RCC_RTCCLKConfig+0x38>)
 80007ae:	681c      	ldr	r4, [r3, #0]
 80007b0:	4021      	ands	r1, r4
 80007b2:	24c0      	movs	r4, #192	; 0xc0
 80007b4:	05e4      	lsls	r4, r4, #23
 80007b6:	4020      	ands	r0, r4
 80007b8:	4308      	orrs	r0, r1
 80007ba:	6018      	str	r0, [r3, #0]
 80007bc:	4b04      	ldr	r3, [pc, #16]	; (80007d0 <RCC_RTCCLKConfig+0x34>)
 80007be:	4906      	ldr	r1, [pc, #24]	; (80007d8 <RCC_RTCCLKConfig+0x3c>)
 80007c0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80007c2:	4001      	ands	r1, r0
 80007c4:	6359      	str	r1, [r3, #52]	; 0x34
 80007c6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80007c8:	430a      	orrs	r2, r1
 80007ca:	635a      	str	r2, [r3, #52]	; 0x34
 80007cc:	bd10      	pop	{r4, pc}
 80007ce:	46c0      	nop			; (mov r8, r8)
 80007d0:	40023800 	.word	0x40023800
 80007d4:	9fffffff 	.word	0x9fffffff
 80007d8:	fffcffff 	.word	0xfffcffff

080007dc <RCC_RTCCLKCmd>:
 80007dc:	4b01      	ldr	r3, [pc, #4]	; (80007e4 <RCC_RTCCLKCmd+0x8>)
 80007de:	6018      	str	r0, [r3, #0]
 80007e0:	4770      	bx	lr
 80007e2:	46c0      	nop			; (mov r8, r8)
 80007e4:	424706d8 	.word	0x424706d8

080007e8 <RCC_RTCResetCmd>:
 80007e8:	4b01      	ldr	r3, [pc, #4]	; (80007f0 <RCC_RTCResetCmd+0x8>)
 80007ea:	6018      	str	r0, [r3, #0]
 80007ec:	4770      	bx	lr
 80007ee:	46c0      	nop			; (mov r8, r8)
 80007f0:	424706dc 	.word	0x424706dc

080007f4 <RCC_AHBPeriphClockCmd>:
 80007f4:	4b04      	ldr	r3, [pc, #16]	; (8000808 <RCC_AHBPeriphClockCmd+0x14>)
 80007f6:	69da      	ldr	r2, [r3, #28]
 80007f8:	2900      	cmp	r1, #0
 80007fa:	d102      	bne.n	8000802 <RCC_AHBPeriphClockCmd+0xe>
 80007fc:	4382      	bics	r2, r0
 80007fe:	61da      	str	r2, [r3, #28]
 8000800:	4770      	bx	lr
 8000802:	4310      	orrs	r0, r2
 8000804:	61d8      	str	r0, [r3, #28]
 8000806:	e7fb      	b.n	8000800 <RCC_AHBPeriphClockCmd+0xc>
 8000808:	40023800 	.word	0x40023800

0800080c <RCC_APB2PeriphClockCmd>:
 800080c:	4b04      	ldr	r3, [pc, #16]	; (8000820 <RCC_APB2PeriphClockCmd+0x14>)
 800080e:	6a1a      	ldr	r2, [r3, #32]
 8000810:	2900      	cmp	r1, #0
 8000812:	d102      	bne.n	800081a <RCC_APB2PeriphClockCmd+0xe>
 8000814:	4382      	bics	r2, r0
 8000816:	621a      	str	r2, [r3, #32]
 8000818:	4770      	bx	lr
 800081a:	4310      	orrs	r0, r2
 800081c:	6218      	str	r0, [r3, #32]
 800081e:	e7fb      	b.n	8000818 <RCC_APB2PeriphClockCmd+0xc>
 8000820:	40023800 	.word	0x40023800

08000824 <RCC_APB1PeriphClockCmd>:
 8000824:	4b04      	ldr	r3, [pc, #16]	; (8000838 <RCC_APB1PeriphClockCmd+0x14>)
 8000826:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000828:	2900      	cmp	r1, #0
 800082a:	d102      	bne.n	8000832 <RCC_APB1PeriphClockCmd+0xe>
 800082c:	4382      	bics	r2, r0
 800082e:	625a      	str	r2, [r3, #36]	; 0x24
 8000830:	4770      	bx	lr
 8000832:	4310      	orrs	r0, r2
 8000834:	6258      	str	r0, [r3, #36]	; 0x24
 8000836:	e7fb      	b.n	8000830 <RCC_APB1PeriphClockCmd+0xc>
 8000838:	40023800 	.word	0x40023800

0800083c <RCC_AHBPeriphResetCmd>:
 800083c:	4b04      	ldr	r3, [pc, #16]	; (8000850 <RCC_AHBPeriphResetCmd+0x14>)
 800083e:	691a      	ldr	r2, [r3, #16]
 8000840:	2900      	cmp	r1, #0
 8000842:	d102      	bne.n	800084a <RCC_AHBPeriphResetCmd+0xe>
 8000844:	4382      	bics	r2, r0
 8000846:	611a      	str	r2, [r3, #16]
 8000848:	4770      	bx	lr
 800084a:	4310      	orrs	r0, r2
 800084c:	6118      	str	r0, [r3, #16]
 800084e:	e7fb      	b.n	8000848 <RCC_AHBPeriphResetCmd+0xc>
 8000850:	40023800 	.word	0x40023800

08000854 <RCC_APB2PeriphResetCmd>:
 8000854:	4b04      	ldr	r3, [pc, #16]	; (8000868 <RCC_APB2PeriphResetCmd+0x14>)
 8000856:	695a      	ldr	r2, [r3, #20]
 8000858:	2900      	cmp	r1, #0
 800085a:	d102      	bne.n	8000862 <RCC_APB2PeriphResetCmd+0xe>
 800085c:	4382      	bics	r2, r0
 800085e:	615a      	str	r2, [r3, #20]
 8000860:	4770      	bx	lr
 8000862:	4310      	orrs	r0, r2
 8000864:	6158      	str	r0, [r3, #20]
 8000866:	e7fb      	b.n	8000860 <RCC_APB2PeriphResetCmd+0xc>
 8000868:	40023800 	.word	0x40023800

0800086c <RCC_APB1PeriphResetCmd>:
 800086c:	4b04      	ldr	r3, [pc, #16]	; (8000880 <RCC_APB1PeriphResetCmd+0x14>)
 800086e:	699a      	ldr	r2, [r3, #24]
 8000870:	2900      	cmp	r1, #0
 8000872:	d102      	bne.n	800087a <RCC_APB1PeriphResetCmd+0xe>
 8000874:	4382      	bics	r2, r0
 8000876:	619a      	str	r2, [r3, #24]
 8000878:	4770      	bx	lr
 800087a:	4310      	orrs	r0, r2
 800087c:	6198      	str	r0, [r3, #24]
 800087e:	e7fb      	b.n	8000878 <RCC_APB1PeriphResetCmd+0xc>
 8000880:	40023800 	.word	0x40023800

08000884 <RCC_AHBPeriphClockLPModeCmd>:
 8000884:	4b04      	ldr	r3, [pc, #16]	; (8000898 <RCC_AHBPeriphClockLPModeCmd+0x14>)
 8000886:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8000888:	2900      	cmp	r1, #0
 800088a:	d102      	bne.n	8000892 <RCC_AHBPeriphClockLPModeCmd+0xe>
 800088c:	4382      	bics	r2, r0
 800088e:	629a      	str	r2, [r3, #40]	; 0x28
 8000890:	4770      	bx	lr
 8000892:	4310      	orrs	r0, r2
 8000894:	6298      	str	r0, [r3, #40]	; 0x28
 8000896:	e7fb      	b.n	8000890 <RCC_AHBPeriphClockLPModeCmd+0xc>
 8000898:	40023800 	.word	0x40023800

0800089c <RCC_APB2PeriphClockLPModeCmd>:
 800089c:	4b04      	ldr	r3, [pc, #16]	; (80008b0 <RCC_APB2PeriphClockLPModeCmd+0x14>)
 800089e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80008a0:	2900      	cmp	r1, #0
 80008a2:	d102      	bne.n	80008aa <RCC_APB2PeriphClockLPModeCmd+0xe>
 80008a4:	4382      	bics	r2, r0
 80008a6:	62da      	str	r2, [r3, #44]	; 0x2c
 80008a8:	4770      	bx	lr
 80008aa:	4310      	orrs	r0, r2
 80008ac:	62d8      	str	r0, [r3, #44]	; 0x2c
 80008ae:	e7fb      	b.n	80008a8 <RCC_APB2PeriphClockLPModeCmd+0xc>
 80008b0:	40023800 	.word	0x40023800

080008b4 <RCC_APB1PeriphClockLPModeCmd>:
 80008b4:	4b04      	ldr	r3, [pc, #16]	; (80008c8 <RCC_APB1PeriphClockLPModeCmd+0x14>)
 80008b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80008b8:	2900      	cmp	r1, #0
 80008ba:	d102      	bne.n	80008c2 <RCC_APB1PeriphClockLPModeCmd+0xe>
 80008bc:	4382      	bics	r2, r0
 80008be:	631a      	str	r2, [r3, #48]	; 0x30
 80008c0:	4770      	bx	lr
 80008c2:	4310      	orrs	r0, r2
 80008c4:	6318      	str	r0, [r3, #48]	; 0x30
 80008c6:	e7fb      	b.n	80008c0 <RCC_APB1PeriphClockLPModeCmd+0xc>
 80008c8:	40023800 	.word	0x40023800

080008cc <RCC_ITConfig>:
 80008cc:	4b04      	ldr	r3, [pc, #16]	; (80008e0 <RCC_ITConfig+0x14>)
 80008ce:	781a      	ldrb	r2, [r3, #0]
 80008d0:	2900      	cmp	r1, #0
 80008d2:	d102      	bne.n	80008da <RCC_ITConfig+0xe>
 80008d4:	4382      	bics	r2, r0
 80008d6:	701a      	strb	r2, [r3, #0]
 80008d8:	4770      	bx	lr
 80008da:	4310      	orrs	r0, r2
 80008dc:	7018      	strb	r0, [r3, #0]
 80008de:	e7fb      	b.n	80008d8 <RCC_ITConfig+0xc>
 80008e0:	4002380d 	.word	0x4002380d

080008e4 <RCC_GetFlagStatus>:
 80008e4:	0943      	lsrs	r3, r0, #5
 80008e6:	2b01      	cmp	r3, #1
 80008e8:	d008      	beq.n	80008fc <RCC_GetFlagStatus+0x18>
 80008ea:	4b06      	ldr	r3, [pc, #24]	; (8000904 <RCC_GetFlagStatus+0x20>)
 80008ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80008ee:	221f      	movs	r2, #31
 80008f0:	4010      	ands	r0, r2
 80008f2:	40c3      	lsrs	r3, r0
 80008f4:	1c18      	adds	r0, r3, #0
 80008f6:	2301      	movs	r3, #1
 80008f8:	4018      	ands	r0, r3
 80008fa:	4770      	bx	lr
 80008fc:	4b01      	ldr	r3, [pc, #4]	; (8000904 <RCC_GetFlagStatus+0x20>)
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	e7f5      	b.n	80008ee <RCC_GetFlagStatus+0xa>
 8000902:	46c0      	nop			; (mov r8, r8)
 8000904:	40023800 	.word	0x40023800

08000908 <RCC_ClearFlag>:
 8000908:	4b03      	ldr	r3, [pc, #12]	; (8000918 <RCC_ClearFlag+0x10>)
 800090a:	2280      	movs	r2, #128	; 0x80
 800090c:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800090e:	0452      	lsls	r2, r2, #17
 8000910:	430a      	orrs	r2, r1
 8000912:	635a      	str	r2, [r3, #52]	; 0x34
 8000914:	4770      	bx	lr
 8000916:	46c0      	nop			; (mov r8, r8)
 8000918:	40023800 	.word	0x40023800

0800091c <RCC_GetITStatus>:
 800091c:	4b03      	ldr	r3, [pc, #12]	; (800092c <RCC_GetITStatus+0x10>)
 800091e:	68db      	ldr	r3, [r3, #12]
 8000920:	4018      	ands	r0, r3
 8000922:	1e43      	subs	r3, r0, #1
 8000924:	4198      	sbcs	r0, r3
 8000926:	b2c0      	uxtb	r0, r0
 8000928:	4770      	bx	lr
 800092a:	46c0      	nop			; (mov r8, r8)
 800092c:	40023800 	.word	0x40023800

08000930 <RCC_ClearITPendingBit>:
 8000930:	4b01      	ldr	r3, [pc, #4]	; (8000938 <RCC_ClearITPendingBit+0x8>)
 8000932:	7018      	strb	r0, [r3, #0]
 8000934:	4770      	bx	lr
 8000936:	46c0      	nop			; (mov r8, r8)
 8000938:	4002380e 	.word	0x4002380e

0800093c <__aeabi_uidiv>:
 800093c:	2900      	cmp	r1, #0
 800093e:	d034      	beq.n	80009aa <.udivsi3_skip_div0_test+0x6a>

08000940 <.udivsi3_skip_div0_test>:
 8000940:	2301      	movs	r3, #1
 8000942:	2200      	movs	r2, #0
 8000944:	b410      	push	{r4}
 8000946:	4288      	cmp	r0, r1
 8000948:	d32c      	bcc.n	80009a4 <.udivsi3_skip_div0_test+0x64>
 800094a:	2401      	movs	r4, #1
 800094c:	0724      	lsls	r4, r4, #28
 800094e:	42a1      	cmp	r1, r4
 8000950:	d204      	bcs.n	800095c <.udivsi3_skip_div0_test+0x1c>
 8000952:	4281      	cmp	r1, r0
 8000954:	d202      	bcs.n	800095c <.udivsi3_skip_div0_test+0x1c>
 8000956:	0109      	lsls	r1, r1, #4
 8000958:	011b      	lsls	r3, r3, #4
 800095a:	e7f8      	b.n	800094e <.udivsi3_skip_div0_test+0xe>
 800095c:	00e4      	lsls	r4, r4, #3
 800095e:	42a1      	cmp	r1, r4
 8000960:	d204      	bcs.n	800096c <.udivsi3_skip_div0_test+0x2c>
 8000962:	4281      	cmp	r1, r0
 8000964:	d202      	bcs.n	800096c <.udivsi3_skip_div0_test+0x2c>
 8000966:	0049      	lsls	r1, r1, #1
 8000968:	005b      	lsls	r3, r3, #1
 800096a:	e7f8      	b.n	800095e <.udivsi3_skip_div0_test+0x1e>
 800096c:	4288      	cmp	r0, r1
 800096e:	d301      	bcc.n	8000974 <.udivsi3_skip_div0_test+0x34>
 8000970:	1a40      	subs	r0, r0, r1
 8000972:	431a      	orrs	r2, r3
 8000974:	084c      	lsrs	r4, r1, #1
 8000976:	42a0      	cmp	r0, r4
 8000978:	d302      	bcc.n	8000980 <.udivsi3_skip_div0_test+0x40>
 800097a:	1b00      	subs	r0, r0, r4
 800097c:	085c      	lsrs	r4, r3, #1
 800097e:	4322      	orrs	r2, r4
 8000980:	088c      	lsrs	r4, r1, #2
 8000982:	42a0      	cmp	r0, r4
 8000984:	d302      	bcc.n	800098c <.udivsi3_skip_div0_test+0x4c>
 8000986:	1b00      	subs	r0, r0, r4
 8000988:	089c      	lsrs	r4, r3, #2
 800098a:	4322      	orrs	r2, r4
 800098c:	08cc      	lsrs	r4, r1, #3
 800098e:	42a0      	cmp	r0, r4
 8000990:	d302      	bcc.n	8000998 <.udivsi3_skip_div0_test+0x58>
 8000992:	1b00      	subs	r0, r0, r4
 8000994:	08dc      	lsrs	r4, r3, #3
 8000996:	4322      	orrs	r2, r4
 8000998:	2800      	cmp	r0, #0
 800099a:	d003      	beq.n	80009a4 <.udivsi3_skip_div0_test+0x64>
 800099c:	091b      	lsrs	r3, r3, #4
 800099e:	d001      	beq.n	80009a4 <.udivsi3_skip_div0_test+0x64>
 80009a0:	0909      	lsrs	r1, r1, #4
 80009a2:	e7e3      	b.n	800096c <.udivsi3_skip_div0_test+0x2c>
 80009a4:	1c10      	adds	r0, r2, #0
 80009a6:	bc10      	pop	{r4}
 80009a8:	4770      	bx	lr
 80009aa:	2800      	cmp	r0, #0
 80009ac:	d001      	beq.n	80009b2 <.udivsi3_skip_div0_test+0x72>
 80009ae:	2000      	movs	r0, #0
 80009b0:	43c0      	mvns	r0, r0
 80009b2:	b407      	push	{r0, r1, r2}
 80009b4:	4802      	ldr	r0, [pc, #8]	; (80009c0 <.udivsi3_skip_div0_test+0x80>)
 80009b6:	a102      	add	r1, pc, #8	; (adr r1, 80009c0 <.udivsi3_skip_div0_test+0x80>)
 80009b8:	1840      	adds	r0, r0, r1
 80009ba:	9002      	str	r0, [sp, #8]
 80009bc:	bd03      	pop	{r0, r1, pc}
 80009be:	46c0      	nop			; (mov r8, r8)
 80009c0:	00000019 	.word	0x00000019

080009c4 <__aeabi_uidivmod>:
 80009c4:	2900      	cmp	r1, #0
 80009c6:	d0f0      	beq.n	80009aa <.udivsi3_skip_div0_test+0x6a>
 80009c8:	b503      	push	{r0, r1, lr}
 80009ca:	f7ff ffb9 	bl	8000940 <.udivsi3_skip_div0_test>
 80009ce:	bc0e      	pop	{r1, r2, r3}
 80009d0:	4342      	muls	r2, r0
 80009d2:	1a89      	subs	r1, r1, r2
 80009d4:	4718      	bx	r3
 80009d6:	46c0      	nop			; (mov r8, r8)

080009d8 <__aeabi_idiv0>:
 80009d8:	4770      	bx	lr
 80009da:	46c0      	nop			; (mov r8, r8)

080009dc <DAC_PreConfig>:

uint16_t ADCVal = 4000;

void DAC_PreConfig(void)
{
 80009dc:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStructure;
  DAC_InitTypeDef  DAC_InitStructure;

  /* DAC Periph clock enable */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE);
 80009de:	2080      	movs	r0, #128	; 0x80

uint16_t ADCVal = 4000;

void DAC_PreConfig(void)
{
 80009e0:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStructure;
  DAC_InitTypeDef  DAC_InitStructure;

  /* DAC Periph clock enable */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE);
 80009e2:	0580      	lsls	r0, r0, #22
 80009e4:	2101      	movs	r1, #1
 80009e6:	f7ff ff1d 	bl	8000824 <RCC_APB1PeriphClockCmd>
  /* GPIOA clock enable */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 80009ea:	2001      	movs	r0, #1
 80009ec:	1c01      	adds	r1, r0, #0
 80009ee:	f7ff ff01 	bl	80007f4 <RCC_AHBPeriphClockCmd>

  /* Configure PA.04 (DAC_OUT1), PA.05 (DAC_OUT2) as analog */
  GPIO_InitStructure.GPIO_Pin =   GPIO_Pin_5;
 80009f2:	2320      	movs	r3, #32
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 80009f4:	466a      	mov	r2, sp
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80009f6:	2400      	movs	r4, #0
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE);
  /* GPIOA clock enable */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);

  /* Configure PA.04 (DAC_OUT1), PA.05 (DAC_OUT2) as analog */
  GPIO_InitStructure.GPIO_Pin =   GPIO_Pin_5;
 80009f8:	9300      	str	r3, [sp, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
  GPIO_Init(GPIOA, &GPIO_InitStructure);
 80009fa:	4669      	mov	r1, sp
  /* GPIOA clock enable */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);

  /* Configure PA.04 (DAC_OUT1), PA.05 (DAC_OUT2) as analog */
  GPIO_InitStructure.GPIO_Pin =   GPIO_Pin_5;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 80009fc:	2303      	movs	r3, #3
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
  GPIO_Init(GPIOA, &GPIO_InitStructure);
 80009fe:	480d      	ldr	r0, [pc, #52]	; (8000a34 <DAC_PreConfig+0x58>)
  /* GPIOA clock enable */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);

  /* Configure PA.04 (DAC_OUT1), PA.05 (DAC_OUT2) as analog */
  GPIO_InitStructure.GPIO_Pin =   GPIO_Pin_5;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 8000a00:	7113      	strb	r3, [r2, #4]
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 8000a02:	71d4      	strb	r4, [r2, #7]
  GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000a04:	f7ff fcec 	bl	80003e0 <GPIO_Init>
  DAC_InitStructure.DAC_Trigger = DAC_Trigger_None;
  DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_None;
  DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;

            /* DAC Channel2 Init */
  DAC_Init(DAC_Channel_2, &DAC_InitStructure);
 8000a08:	a902      	add	r1, sp, #8
 8000a0a:	2010      	movs	r0, #16
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
  GPIO_Init(GPIOA, &GPIO_InitStructure);

 /* DAC channel1 and channel2 Configuration */
  DAC_InitStructure.DAC_Trigger = DAC_Trigger_None;
 8000a0c:	9402      	str	r4, [sp, #8]
  DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_None;
 8000a0e:	9403      	str	r4, [sp, #12]
  DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 8000a10:	9405      	str	r4, [sp, #20]

            /* DAC Channel2 Init */
  DAC_Init(DAC_Channel_2, &DAC_InitStructure);
 8000a12:	f7ff fb87 	bl	8000124 <DAC_Init>
  DAC_Init(DAC_Channel_1, &DAC_InitStructure);
 8000a16:	1c20      	adds	r0, r4, #0
 8000a18:	a902      	add	r1, sp, #8
 8000a1a:	f7ff fb83 	bl	8000124 <DAC_Init>

          /* Enable DAC Channel2 */
  DAC_Cmd(DAC_Channel_2, ENABLE);
 8000a1e:	2010      	movs	r0, #16
 8000a20:	2101      	movs	r1, #1
 8000a22:	f7ff fb9d 	bl	8000160 <DAC_Cmd>
  DAC_Cmd(DAC_Channel_1, ENABLE);
 8000a26:	1c20      	adds	r0, r4, #0
 8000a28:	2101      	movs	r1, #1
 8000a2a:	f7ff fb99 	bl	8000160 <DAC_Cmd>

}
 8000a2e:	b006      	add	sp, #24
 8000a30:	bd10      	pop	{r4, pc}
 8000a32:	46c0      	nop			; (mov r8, r8)
 8000a34:	40020000 	.word	0x40020000

08000a38 <main>:
    j++;
  }
}

int main(void)
{
 8000a38:	b508      	push	{r3, lr}
  
  /* Preconfiguration before using DAC----------------------------------------*/
  DAC_PreConfig();
 8000a3a:	f7ff ffcf 	bl	80009dc <DAC_PreConfig>
  
  DAC_SetDualChannelData(DAC_Align_12b_R, ADCVal,ADCVal);
 8000a3e:	4b03      	ldr	r3, [pc, #12]	; (8000a4c <main+0x14>)
 8000a40:	2000      	movs	r0, #0
 8000a42:	881a      	ldrh	r2, [r3, #0]
 8000a44:	1c11      	adds	r1, r2, #0
 8000a46:	f7ff fbef 	bl	8000228 <DAC_SetDualChannelData>
 8000a4a:	e7fe      	b.n	8000a4a <main+0x12>
 8000a4c:	2000001c 	.word	0x2000001c

08000a50 <SystemInit>:
  * @retval None
  */
void SystemInit (void)
{
  /*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100;
 8000a50:	4b3c      	ldr	r3, [pc, #240]	; (8000b44 <SystemInit+0xf4>)
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000a52:	b537      	push	{r0, r1, r2, r4, r5, lr}
  /*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100;
 8000a54:	6819      	ldr	r1, [r3, #0]
 8000a56:	2280      	movs	r2, #128	; 0x80
 8000a58:	0052      	lsls	r2, r2, #1
 8000a5a:	430a      	orrs	r2, r1
 8000a5c:	601a      	str	r2, [r3, #0]

  /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
  RCC->CFGR &= (uint32_t)0x88FFC00C;
 8000a5e:	6899      	ldr	r1, [r3, #8]
 8000a60:	4a39      	ldr	r2, [pc, #228]	; (8000b48 <SystemInit+0xf8>)
 8000a62:	400a      	ands	r2, r1
 8000a64:	609a      	str	r2, [r3, #8]
  
  /*!< Reset HSION, HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xEEFEFFFE;
 8000a66:	6819      	ldr	r1, [r3, #0]
 8000a68:	4a38      	ldr	r2, [pc, #224]	; (8000b4c <SystemInit+0xfc>)
 8000a6a:	400a      	ands	r2, r1
 8000a6c:	601a      	str	r2, [r3, #0]

  /*!< Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8000a6e:	6819      	ldr	r1, [r3, #0]
 8000a70:	4a37      	ldr	r2, [pc, #220]	; (8000b50 <SystemInit+0x100>)
 8000a72:	400a      	ands	r2, r1
 8000a74:	601a      	str	r2, [r3, #0]

  /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
  RCC->CFGR &= (uint32_t)0xFF02FFFF;
 8000a76:	689a      	ldr	r2, [r3, #8]
 8000a78:	4936      	ldr	r1, [pc, #216]	; (8000b54 <SystemInit+0x104>)
 8000a7a:	400a      	ands	r2, r1
 8000a7c:	609a      	str	r2, [r3, #8]

  /*!< Disable all interrupts */
  RCC->CIR = 0x00000000;
 8000a7e:	2200      	movs	r2, #0
 8000a80:	60da      	str	r2, [r3, #12]
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 8000a82:	9200      	str	r2, [sp, #0]
 8000a84:	9201      	str	r2, [sp, #4]
  
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/
  /* Enable HSE */
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 8000a86:	6818      	ldr	r0, [r3, #0]
 8000a88:	2280      	movs	r2, #128	; 0x80
 8000a8a:	0252      	lsls	r2, r2, #9
 8000a8c:	4302      	orrs	r2, r0
 8000a8e:	601a      	str	r2, [r3, #0]
 8000a90:	1c08      	adds	r0, r1, #0
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
 8000a92:	6819      	ldr	r1, [r3, #0]
 8000a94:	2280      	movs	r2, #128	; 0x80
 8000a96:	0292      	lsls	r2, r2, #10
 8000a98:	4011      	ands	r1, r2
 8000a9a:	9101      	str	r1, [sp, #4]
    StartUpCounter++;
 8000a9c:	9900      	ldr	r1, [sp, #0]
 8000a9e:	3101      	adds	r1, #1
 8000aa0:	9100      	str	r1, [sp, #0]
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 8000aa2:	9901      	ldr	r1, [sp, #4]
 8000aa4:	2900      	cmp	r1, #0
 8000aa6:	d104      	bne.n	8000ab2 <SystemInit+0x62>
 8000aa8:	9c00      	ldr	r4, [sp, #0]
 8000aaa:	21a0      	movs	r1, #160	; 0xa0
 8000aac:	01c9      	lsls	r1, r1, #7
 8000aae:	428c      	cmp	r4, r1
 8000ab0:	d1ef      	bne.n	8000a92 <SystemInit+0x42>

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 8000ab2:	6819      	ldr	r1, [r3, #0]
 8000ab4:	400a      	ands	r2, r1
 8000ab6:	d000      	beq.n	8000aba <SystemInit+0x6a>
  {
    HSEStatus = (uint32_t)0x01;
 8000ab8:	2201      	movs	r2, #1
  }
  else
  {
    HSEStatus = (uint32_t)0x00;
 8000aba:	9201      	str	r2, [sp, #4]
  }
  
  if (HSEStatus == (uint32_t)0x01)
 8000abc:	9901      	ldr	r1, [sp, #4]
 8000abe:	2901      	cmp	r1, #1
 8000ac0:	d004      	beq.n	8000acc <SystemInit+0x7c>
  SetSysClock();

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 8000ac2:	4b25      	ldr	r3, [pc, #148]	; (8000b58 <SystemInit+0x108>)
 8000ac4:	2280      	movs	r2, #128	; 0x80
 8000ac6:	0512      	lsls	r2, r2, #20
 8000ac8:	609a      	str	r2, [r3, #8]
#endif
}
 8000aca:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
  }
  
  if (HSEStatus == (uint32_t)0x01)
  {
    /* Enable 64-bit access */
    FLASH->ACR |= FLASH_ACR_ACC64;
 8000acc:	4a23      	ldr	r2, [pc, #140]	; (8000b5c <SystemInit+0x10c>)
 8000ace:	2504      	movs	r5, #4
 8000ad0:	6814      	ldr	r4, [r2, #0]
 8000ad2:	432c      	orrs	r4, r5
 8000ad4:	6014      	str	r4, [r2, #0]
    
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTEN;
 8000ad6:	6814      	ldr	r4, [r2, #0]
 8000ad8:	2502      	movs	r5, #2
 8000ada:	432c      	orrs	r4, r5
 8000adc:	6014      	str	r4, [r2, #0]

    /* Flash 1 wait state */
    FLASH->ACR |= FLASH_ACR_LATENCY;
 8000ade:	6814      	ldr	r4, [r2, #0]
 8000ae0:	4321      	orrs	r1, r4
 8000ae2:	6011      	str	r1, [r2, #0]
    
    /* Power enable */
    RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8000ae4:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8000ae6:	2280      	movs	r2, #128	; 0x80
 8000ae8:	0552      	lsls	r2, r2, #21
 8000aea:	430a      	orrs	r2, r1
 8000aec:	625a      	str	r2, [r3, #36]	; 0x24
  
    /* Select the Voltage Range 1 (1.8 V) */
    PWR->CR = PWR_CR_VOS_0;
 8000aee:	2180      	movs	r1, #128	; 0x80
 8000af0:	4a1b      	ldr	r2, [pc, #108]	; (8000b60 <SystemInit+0x110>)
 8000af2:	0109      	lsls	r1, r1, #4
 8000af4:	6011      	str	r1, [r2, #0]
  
    /* Wait Until the Voltage Regulator is ready */
    while((PWR->CSR & PWR_CSR_VOSF) != RESET)
 8000af6:	6851      	ldr	r1, [r2, #4]
 8000af8:	06cc      	lsls	r4, r1, #27
 8000afa:	d4fc      	bmi.n	8000af6 <SystemInit+0xa6>
    {
    }
        
    /* HCLK = SYSCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 8000afc:	689a      	ldr	r2, [r3, #8]
 8000afe:	609a      	str	r2, [r3, #8]
  
    /* PCLK2 = HCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 8000b00:	689a      	ldr	r2, [r3, #8]
 8000b02:	609a      	str	r2, [r3, #8]
    
    /* PCLK1 = HCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 8000b04:	689a      	ldr	r2, [r3, #8]
 8000b06:	609a      	str	r2, [r3, #8]
    
    /*  PLL configuration */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL |
 8000b08:	6899      	ldr	r1, [r3, #8]
                                        RCC_CFGR_PLLDIV));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMUL12 | RCC_CFGR_PLLDIV3);
 8000b0a:	2291      	movs	r2, #145	; 0x91
    
    /* PCLK1 = HCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
    
    /*  PLL configuration */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL |
 8000b0c:	4001      	ands	r1, r0
 8000b0e:	6099      	str	r1, [r3, #8]
                                        RCC_CFGR_PLLDIV));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMUL12 | RCC_CFGR_PLLDIV3);
 8000b10:	6899      	ldr	r1, [r3, #8]
 8000b12:	0412      	lsls	r2, r2, #16
 8000b14:	430a      	orrs	r2, r1
 8000b16:	609a      	str	r2, [r3, #8]

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
 8000b18:	6819      	ldr	r1, [r3, #0]
 8000b1a:	2280      	movs	r2, #128	; 0x80
 8000b1c:	0452      	lsls	r2, r2, #17
 8000b1e:	430a      	orrs	r2, r1
 8000b20:	601a      	str	r2, [r3, #0]

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 8000b22:	6819      	ldr	r1, [r3, #0]
 8000b24:	4a07      	ldr	r2, [pc, #28]	; (8000b44 <SystemInit+0xf4>)
 8000b26:	0188      	lsls	r0, r1, #6
 8000b28:	d5fb      	bpl.n	8000b22 <SystemInit+0xd2>
    {
    }
        
    /* Select PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 8000b2a:	6890      	ldr	r0, [r2, #8]
 8000b2c:	2103      	movs	r1, #3
 8000b2e:	4388      	bics	r0, r1
 8000b30:	6090      	str	r0, [r2, #8]
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
 8000b32:	6890      	ldr	r0, [r2, #8]
 8000b34:	4301      	orrs	r1, r0
 8000b36:	6091      	str	r1, [r2, #8]

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 8000b38:	6899      	ldr	r1, [r3, #8]
 8000b3a:	220c      	movs	r2, #12
 8000b3c:	400a      	ands	r2, r1
 8000b3e:	2a0c      	cmp	r2, #12
 8000b40:	d1fa      	bne.n	8000b38 <SystemInit+0xe8>
 8000b42:	e7be      	b.n	8000ac2 <SystemInit+0x72>
 8000b44:	40023800 	.word	0x40023800
 8000b48:	88ffc00c 	.word	0x88ffc00c
 8000b4c:	eefefffe 	.word	0xeefefffe
 8000b50:	fffbffff 	.word	0xfffbffff
 8000b54:	ff02ffff 	.word	0xff02ffff
 8000b58:	e000ed00 	.word	0xe000ed00
 8000b5c:	40023c00 	.word	0x40023c00
 8000b60:	40007000 	.word	0x40007000

08000b64 <Reset_Handler>:
.weak Reset_Handler
.type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
movs r1, #0
 8000b64:	2100      	movs	r1, #0
b LoopCopyDataInit
 8000b66:	f000 b804 	b.w	8000b72 <LoopCopyDataInit>

08000b6a <CopyDataInit>:

CopyDataInit:
ldr r3, =_sidata
 8000b6a:	4b0d      	ldr	r3, [pc, #52]	; (8000ba0 <LoopFillZerobss+0x16>)
ldr r3, [r3, r1]
 8000b6c:	585b      	ldr	r3, [r3, r1]
str r3, [r0, r1]
 8000b6e:	5043      	str	r3, [r0, r1]
adds r1, r1, #4
 8000b70:	3104      	adds	r1, #4

08000b72 <LoopCopyDataInit>:

LoopCopyDataInit:
ldr r0, =_sdata
 8000b72:	480c      	ldr	r0, [pc, #48]	; (8000ba4 <LoopFillZerobss+0x1a>)
ldr r3, =_edata
 8000b74:	4b0c      	ldr	r3, [pc, #48]	; (8000ba8 <LoopFillZerobss+0x1e>)
adds r2, r0, r1
 8000b76:	1842      	adds	r2, r0, r1
cmp r2, r3
 8000b78:	429a      	cmp	r2, r3
bcc CopyDataInit
 8000b7a:	f4ff aff6 	bcc.w	8000b6a <CopyDataInit>
ldr r2, =_sbss
 8000b7e:	4a0b      	ldr	r2, [pc, #44]	; (8000bac <LoopFillZerobss+0x22>)
b LoopFillZerobss
 8000b80:	f000 b803 	b.w	8000b8a <LoopFillZerobss>

08000b84 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
movs r3, #0
 8000b84:	2300      	movs	r3, #0
str r3, [r2], #4
 8000b86:	f842 3b04 	str.w	r3, [r2], #4

08000b8a <LoopFillZerobss>:

LoopFillZerobss:
ldr r3, = _ebss
 8000b8a:	4b09      	ldr	r3, [pc, #36]	; (8000bb0 <LoopFillZerobss+0x26>)
cmp r2, r3
 8000b8c:	429a      	cmp	r2, r3
bcc FillZerobss
 8000b8e:	f4ff aff9 	bcc.w	8000b84 <FillZerobss>

/* Call the clock system intitialization function.*/
bl SystemInit
 8000b92:	f7ff ff5d 	bl	8000a50 <SystemInit>
/* Call static constructors */
bl __libc_init_array
 8000b96:	f000 f80f 	bl	8000bb8 <__libc_init_array>
/* Call the application's entry point.*/
bl main
 8000b9a:	f7ff ff4d 	bl	8000a38 <main>
bx lr
 8000b9e:	4770      	bx	lr
/* Copy the data segment initializers from flash to SRAM */
movs r1, #0
b LoopCopyDataInit

CopyDataInit:
ldr r3, =_sidata
 8000ba0:	08000c18 	.word	0x08000c18
ldr r3, [r3, r1]
str r3, [r0, r1]
adds r1, r1, #4

LoopCopyDataInit:
ldr r0, =_sdata
 8000ba4:	20000000 	.word	0x20000000
ldr r3, =_edata
 8000ba8:	20000020 	.word	0x20000020
adds r2, r0, r1
cmp r2, r3
bcc CopyDataInit
ldr r2, =_sbss
 8000bac:	20000020 	.word	0x20000020
FillZerobss:
movs r3, #0
str r3, [r2], #4

LoopFillZerobss:
ldr r3, = _ebss
 8000bb0:	20000020 	.word	0x20000020

08000bb4 <ADC1_IRQHandler>:
* @retval : None
*/
.section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
b Infinite_Loop
 8000bb4:	f7ff bffe 	b.w	8000bb4 <ADC1_IRQHandler>

08000bb8 <__libc_init_array>:
 8000bb8:	b570      	push	{r4, r5, r6, lr}
 8000bba:	4e0d      	ldr	r6, [pc, #52]	; (8000bf0 <__libc_init_array+0x38>)
 8000bbc:	4d0d      	ldr	r5, [pc, #52]	; (8000bf4 <__libc_init_array+0x3c>)
 8000bbe:	2400      	movs	r4, #0
 8000bc0:	1bad      	subs	r5, r5, r6
 8000bc2:	10ad      	asrs	r5, r5, #2
 8000bc4:	d005      	beq.n	8000bd2 <__libc_init_array+0x1a>
 8000bc6:	00a3      	lsls	r3, r4, #2
 8000bc8:	58f3      	ldr	r3, [r6, r3]
 8000bca:	3401      	adds	r4, #1
 8000bcc:	4798      	blx	r3
 8000bce:	42a5      	cmp	r5, r4
 8000bd0:	d1f9      	bne.n	8000bc6 <__libc_init_array+0xe>
 8000bd2:	f000 f815 	bl	8000c00 <_init>
 8000bd6:	4e08      	ldr	r6, [pc, #32]	; (8000bf8 <__libc_init_array+0x40>)
 8000bd8:	4d08      	ldr	r5, [pc, #32]	; (8000bfc <__libc_init_array+0x44>)
 8000bda:	2400      	movs	r4, #0
 8000bdc:	1bad      	subs	r5, r5, r6
 8000bde:	10ad      	asrs	r5, r5, #2
 8000be0:	d005      	beq.n	8000bee <__libc_init_array+0x36>
 8000be2:	00a3      	lsls	r3, r4, #2
 8000be4:	58f3      	ldr	r3, [r6, r3]
 8000be6:	3401      	adds	r4, #1
 8000be8:	4798      	blx	r3
 8000bea:	42a5      	cmp	r5, r4
 8000bec:	d1f9      	bne.n	8000be2 <__libc_init_array+0x2a>
 8000bee:	bd70      	pop	{r4, r5, r6, pc}
	...

08000c00 <_init>:
 8000c00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c02:	46c0      	nop			; (mov r8, r8)
 8000c04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c06:	bc08      	pop	{r3}
 8000c08:	469e      	mov	lr, r3
 8000c0a:	4770      	bx	lr

08000c0c <_fini>:
 8000c0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c0e:	46c0      	nop			; (mov r8, r8)
 8000c10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c12:	bc08      	pop	{r3}
 8000c14:	469e      	mov	lr, r3
 8000c16:	4770      	bx	lr
