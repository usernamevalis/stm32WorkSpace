
main.elf:     file format elf32-littlearm

SYMBOL TABLE:
08000000 l    d  .isr_vector	00000000 .isr_vector
0800010c l    d  .text	00000000 .text
20000000 l    d  .data	00000000 .data
20000020 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 /var/folders/8f/zhq2rlhx6sl47y8ztwk74bcr0000gn/T//ccd1GYqg.o
f108f85f l       *ABS*	00000000 BootRAM
08001f4a l       .text	00000000 LoopCopyDataInit
08001f42 l       .text	00000000 CopyDataInit
08001f62 l       .text	00000000 LoopFillZerobss
08001f5c l       .text	00000000 FillZerobss
08001f8c l       .text	00000000 Infinite_Loop
00000000 l    df *ABS*	00000000 stm32l1xx_dac.c
00000000 l    df *ABS*	00000000 stm32l1xx_dma.c
00000000 l    df *ABS*	00000000 stm32l1xx_exti.c
00000000 l    df *ABS*	00000000 stm32l1xx_gpio.c
00000000 l    df *ABS*	00000000 misc.c
00000000 l    df *ABS*	00000000 stm32l1xx_rcc.c
20000000 l     O .data	00000009 PLLMulTable
2000000c l     O .data	00000010 APBAHBPrescTable
00000000 l    df *ABS*	00000000 stm32l1xx_syscfg.c
00000000 l    df *ABS*	00000000 stm32l1xx_tim.c
00000000 l    df *ABS*	00000000 _udivsi3.o
08001ab8 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 system_stm32l1xx.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 /Users/nathanogates/Copy/Development/embedded/redux/gcc-arm/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crti.o
00000000 l    df *ABS*	00000000 /Users/nathanogates/Copy/Development/embedded/redux/gcc-arm/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crtn.o
00000000 l    df *ABS*	00000000 
20000080 l       .bss	00000000 __exidx_end
00000000 l       *UND*	00000000 __fini_array_end
00000000 l       *UND*	00000000 malloc
00000000 l       *UND*	00000000 __bss_start__
20000080 l       .bss	00000000 __exidx_start
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 __fini_array_start
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __libc_fini
00000000 l       *UND*	00000000 __stack
00000000 l       *UND*	00000000 _exit
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __register_frame_info
00000000 l       *UND*	00000000 free
08001f8c  w    F .text	00000004 RTC_Alarm_IRQHandler
080010bc g     F .text	00000010 TIM_TimeBaseStructInit
08001f8c  w    F .text	00000004 EXTI2_IRQHandler
08000d14 g     F .text	00000014 SYSCFG_DeInit
080009ec g     F .text	0000000c RCC_HSICmd
08001324 g     F .text	00000018 TIM_ForcedOC2Config
08000a24 g     F .text	0000000c RCC_PLLCmd
08001f8c  w    F .text	00000004 DebugMon_Handler
08001308 g     F .text	00000004 TIM_SetCompare2
08000470 g     F .text	0000001c DMA_Cmd
08000c14 g     F .text	00000018 RCC_AHBPeriphResetCmd
08001bc4 g     F .text	00000064 EXTI15_10_Config
08000820 g     F .text	00000024 GPIO_PinAFConfig
08000d08 g     F .text	0000000c RCC_ClearITPendingBit
080007e8 g     F .text	0000000c GPIO_ReadOutputDataBit
080014b4 g     F .text	0000001c TIM_CCxCmd
08001828 g     F .text	0000001c TIM_SetIC4Prescaler
080004e4 g     F .text	00000020 DMA_GetITStatus
08001f8c  w    F .text	00000004 HardFault_Handler
08001f8c  w    F .text	00000004 TIM10_IRQHandler
080001c8 g     F .text	00000020 DAC_WaveGenerationCmd
08001f8c  w    F .text	00000004 USB_HP_IRQHandler
08001f8c  w    F .text	00000004 TIM6_IRQHandler
08001364 g     F .text	00000010 TIM_OC1PreloadConfig
08001f8c  w    F .text	00000004 SysTick_Handler
08000a48 g     F .text	0000000c RCC_MCOConfig
20000024 g     O .bss	0000000c TIM_TimeBaseStructure
08000858 g     F .text	00000070 NVIC_Init
08000e38 g     F .text	00000040 SYSCFG_RIIOSwitchConfig
08001f8c  w    F .text	00000004 PVD_IRQHandler
08002038 g       .text	00000000 _sidata
08000d5c g     F .text	00000020 SYSCFG_USBPuCmd
08001f8c  w    F .text	00000004 PendSV_Handler
08001f8c  w    F .text	00000004 NMI_Handler
08000184 g     F .text	00000024 DAC_SoftwareTriggerCmd
08000dc0 g     F .text	00000048 SYSCFG_RITIMInputCaptureConfig
08001f8c  w    F .text	00000004 EXTI3_IRQHandler
080019b4 g     F .text	00000022 TIM_ETRClockMode2Config
08000ca4 g     F .text	00000018 RCC_ITConfig
08001314 g     F .text	00000010 TIM_ForcedOC1Config
08000da8 g     F .text	00000018 SYSCFG_RITIMSelect
08001898 g     F .text	00000014 TIM_DMACmd
0800198c g     F .text	00000028 TIM_ETRClockMode1Config
08000c5c g     F .text	00000018 RCC_AHBPeriphClockLPModeCmd
08001810 g     F .text	00000018 TIM_SetIC3Prescaler
08001424 g     F .text	00000010 TIM_ClearOC3Ref
08002038 g       .text	00000000 _etext
20000020 g       .bss	00000000 _sbss
08000a54 g     F .text	00000014 RCC_SYSCLKConfig
08000418 g     F .text	0000003c DMA_Init
0800051c g     F .text	0000001c EXTI_DeInit
08000968 g     F .text	0000003c RCC_WaitForHSEStartUp
08000490 g     F .text	00000006 DMA_GetCurrDataCounter
080008c8 g     F .text	00000014 NVIC_SetVectorTable
08000a30 g     F .text	0000000c RCC_ClockSecuritySystemCmd
08001f8c  w    F .text	00000004 EXTI0_IRQHandler
08001f8c  w    F .text	00000004 I2C2_EV_IRQHandler
08001fd8 g     O .text	00000040 Sine12bit
08000ce0 g     F .text	00000014 RCC_ClearFlag
08001188 g     F .text	00000020 TIM_Cmd
0800139c g     F .text	00000018 TIM_OC4PreloadConfig
08000958 g     F .text	00000010 RCC_HSEConfig
08001ab4 g     F .text	00000088 .hidden __udivsi3
08001868 g     F .text	00000008 TIM_ClearFlag
08000814 g     F .text	0000000a GPIO_ToggleBits
08001888 g     F .text	00000008 TIM_ClearITPendingBit
08001f8c  w    F .text	00000004 UsageFault_Handler
0800048c g     F .text	00000004 DMA_SetCurrDataCounter
080010ec g     F .text	00000004 TIM_GetCounter
08000be4 g     F .text	00000018 RCC_APB2PeriphClockCmd
080017d4 g     F .text	00000004 TIM_GetCapture3
080006ec g     F .text	000000ae GPIO_Init
08000a14 g     F .text	00000010 RCC_PLLConfig
20000020 g     O .bss	00000004 lightState
20000000 g       .data	00000000 _sdata
08001f8c  w    F .text	00000004 SPI1_IRQHandler
080017cc g     F .text	00000004 TIM_GetCapture1
0800149c g     F .text	00000018 TIM_SelectOCREFClear
08000e98 g     F .text	000000bc SYSCFG_RIHysteresisConfig
080008f4 g     F .text	0000001c SysTick_CLKSourceConfig
08000810 g     F .text	00000004 GPIO_Write
080007f4 g     F .text	00000006 GPIO_ReadOutputData
08001224 g     F .text	00000040 TIM_OC3Init
080009f8 g     F .text	00000010 RCC_LSEConfig
08001b54 g     F .text	00000030 debugLights
08000bb4 g     F .text	0000000c RCC_RTCCLKCmd
08000504 g     F .text	00000018 DMA_ClearITPendingBit
08000f54 g     F .text	00000100 TIM_DeInit
08000bfc g     F .text	00000018 RCC_APB1PeriphClockCmd
08000cf4 g     F .text	00000014 RCC_GetITStatus
08001f8c  w    F .text	00000004 USB_FS_WKUP_IRQHandler
08001f90 g     F .text	00000048 __libc_init_array
0800185c g     F .text	0000000c TIM_GetFlagStatus
08000bcc g     F .text	00000018 RCC_AHBPeriphClockCmd
08001f8c  w    F .text	00000004 DMA1_Channel4_IRQHandler
080013dc g     F .text	00000010 TIM_OC3FastConfig
08001f8c  w    F .text	00000004 ADC1_IRQHandler
080002c8 g     F .text	0000000c DAC_ClearFlag
080018ac g     F .text	00000020 TIM_SelectCCDMA
080001a8 g     F .text	00000020 DAC_DualSoftwareTriggerCmd
08002020 g     F .text	00000000 _init
08000454 g     F .text	0000001a DMA_StructInit
08001170 g     F .text	00000018 TIM_SetClockDivision
080004ac g     F .text	00000020 DMA_GetFlagStatus
08001f8c  w    F .text	00000004 USART3_IRQHandler
080005fc g     F .text	0000000c EXTI_ClearITPendingBit
20000080 g       .bss	00000000 _ebss
08001c28 g     F .text	0000003c DAC_PreConfig
08001f8c  w    F .text	00000004 DMA1_Channel7_IRQHandler
080011a8 g     F .text	00000038 TIM_OC1Init
0800138c g     F .text	00000010 TIM_OC3PreloadConfig
08001f3c  w    F .text	0000003c Reset_Handler
080007e0 g     F .text	00000006 GPIO_ReadInputData
080010e8 g     F .text	00000004 TIM_SetAutoreload
08001f8c  w    F .text	00000004 LCD_IRQHandler
08000cbc g     F .text	00000024 RCC_GetFlagStatus
08000d28 g     F .text	00000018 SYSCFG_RIDeInit
080007fc g     F .text	00000004 GPIO_SetBits
08001f8c  w    F .text	00000004 TIM4_IRQHandler
080005c0 g     F .text	00000014 EXTI_GetFlagStatus
08000a68 g     F .text	00000010 RCC_GetSYSCLKSource
08001138 g     F .text	00000020 TIM_ARRPreloadConfig
08000804 g     F .text	0000000c GPIO_WriteBit
08001b84 g     F .text	00000040 TIM2_config
080002d4 g     F .text	0000001c DAC_GetITStatus
08001f8c  w    F .text	00000004 I2C1_EV_IRQHandler
08001870 g     F .text	00000016 TIM_GetITStatus
08000abc g     F .text	000000b8 RCC_GetClocksFreq
08001f8c  w    F .text	00000004 DMA1_Channel6_IRQHandler
080012b4 g     F .text	00000050 TIM_SelectOCxM
08000c74 g     F .text	00000018 RCC_APB2PeriphClockLPModeCmd
08000e20 g     F .text	00000018 SYSCFG_RIChannelSpeedConfig
080005b0 g     F .text	00000010 EXTI_GenerateSWInterrupt
08001aa0 g     F .text	00000014 TIM_RemapConfig
20000030 g     O .bss	00000010 DAC_InitStructure
08001f8c  w    F .text	00000004 TIM3_IRQHandler
08001f8c  w    F .text	00000004 RCC_IRQHandler
20000020 g       .bss	00000000 _bss
08001f8c  w    F .text	00000004 DMA1_Channel1_IRQHandler
080013b4 g     F .text	00000010 TIM_OC1FastConfig
08001f8c g       .text	00000004 Default_Handler
2000001c g     O .data	00000001 WaveChange
080005d4 g     F .text	0000000c EXTI_ClearFlag
08001374 g     F .text	00000018 TIM_OC2PreloadConfig
08000b74 g     F .text	00000040 RCC_RTCCLKConfig
080019d8 g     F .text	00000010 TIM_SelectInputTrigger
08001dd4 g     F .text	00000054 EXTI15_10_IRQHandler
08001844 g     F .text	00000014 TIM_ITConfig
080011e0 g     F .text	00000044 TIM_OC2Init
08000228 g     F .text	0000001c DAC_SetDualChannelData
08000538 g     F .text	00000068 EXTI_Init
0800010c g     F .text	00000018 DAC_DeInit
080001e8 g     F .text	00000020 DAC_SetChannel1Data
2000001d g     O .data	00000001 SelectedWavesForm
080010cc g     F .text	00000006 TIM_PrescalerConfig
08000800 g     F .text	00000004 GPIO_ResetBits
08001484 g     F .text	00000018 TIM_OC4PolarityConfig
080019e8 g     F .text	00000018 TIM_SelectOutputTrigger
08001f8c  w    F .text	00000004 TIM7_IRQHandler
0800130c g     F .text	00000004 TIM_SetCompare3
08001264 g     F .text	00000044 TIM_OC4Init
080002b0 g     F .text	00000018 DAC_GetFlagStatus
08001a80 g     F .text	00000020 TIM_SelectHallSensor
08001b50  w    F .text	00000002 .hidden __aeabi_ldiv0
08001f8c  w    F .text	00000004 EXTI9_5_IRQHandler
080009b0 g     F .text	00000018 RCC_MSIRangeConfig
08001f8c  w    F .text	00000004 TIM9_IRQHandler
08001f8c  w    F .text	00000004 TAMPER_STAMP_IRQHandler
08001f8c  w    F .text	00000004 RTC_WKUP_IRQHandler
08000c8c g     F .text	00000018 RCC_APB1PeriphClockLPModeCmd
08000208 g     F .text	00000020 DAC_SetChannel2Data
080017dc g     F .text	00000018 TIM_SetIC1Prescaler
080005e0 g     F .text	0000001c EXTI_GetITStatus
0800134c g     F .text	00000018 TIM_ForcedOC4Config
08001f8c  w    F .text	00000004 SPI2_IRQHandler
08000d4c g     F .text	00000010 SYSCFG_GetBootMode
08000d40 g     F .text	0000000c SYSCFG_MemoryRemapConfig
08001f8c  w    F .text	00000004 MemManage_Handler
080009d4 g     F .text	00000018 RCC_AdjustHSICalibrationValue
08001c64 g     F .text	00000170 main
080018dc g     F .text	0000001c TIM_ITRxExternalClockConfig
08000e08 g     F .text	00000018 SYSCFG_RIResistorConfig
0800146c g     F .text	00000018 TIM_OC3PolarityConfig
08001ab4 g     F .text	00000000 .hidden __aeabi_uidiv
08001f8c  w    F .text	00000004 SVC_Handler
00000000  w      *UND*	00000000 __init_array_end
080018cc g     F .text	00000010 TIM_InternalClockConfig
08001444 g     F .text	00000010 TIM_OC1PolarityConfig
080013c4 g     F .text	00000018 TIM_OC2FastConfig
08000a8c g     F .text	00000018 RCC_PCLK1Config
080005a0 g     F .text	0000000e EXTI_StructInit
080010e4 g     F .text	00000004 TIM_SetCounter
08001f8c  w    F .text	00000004 DMA1_Channel5_IRQHandler
08001f8c  w    F .text	00000004 USB_LP_IRQHandler
08001f8c  w    F .text	00000004 EXTI4_IRQHandler
08000aa4 g     F .text	00000018 RCC_PCLK2Config
08001310 g     F .text	00000004 TIM_SetCompare4
080017d0 g     F .text	00000004 TIM_GetCapture2
20000040 g     O .bss	00000008 GPIO_InitStructure
08002018 g     O .text	00000006 Escalator8bit
080010f0 g     F .text	00000006 TIM_GetPrescaler
08001414 g     F .text	00000010 TIM_ClearOC2Ref
08001e28 g     F .text	00000114 SystemInit
080014d0 g     F .text	00000164 TIM_ICInit
08000608 g     F .text	000000e4 GPIO_DeInit
08000154 g     F .text	0000000c DAC_StructInit
0800202c g     F .text	00000000 _fini
08000910 g     F .text	00000048 RCC_DeInit
08000e78 g     F .text	00000020 SYSCFG_RISwitchControlModeCmd
08001634 g     F .text	00000010 TIM_ICStructInit
08001644 g     F .text	00000188 TIM_PWMIConfig
08001f8c  w    F .text	00000004 DMA1_Channel3_IRQHandler
08001f8c  w    F .text	00000004 COMP_IRQHandler
080008dc g     F .text	00000018 NVIC_SystemLPConfig
00000000  w      *UND*	00000000 __preinit_array_end
08001404 g     F .text	00000010 TIM_ClearOC1Ref
08001f8c  w    F .text	00000004 WWDG_IRQHandler
08000a3c g     F .text	0000000c RCC_LSEClockSecuritySystemCmd
08000c44 g     F .text	00000018 RCC_APB1PeriphResetCmd
20000000 g       .data	00000000 _data
08000498 g     F .text	00000012 DMA_ITConfig
080002f0 g     F .text	0000000c DAC_ClearITPendingBit
08001f8c  w    F .text	00000004 TIM2_IRQHandler
08001118 g     F .text	00000020 TIM_UpdateRequestConfig
0800133c g     F .text	00000010 TIM_ForcedOC3Config
080018f8 g     F .text	00000094 TIM_TIxExternalClockConfig
0800079c g     F .text	00000014 GPIO_StructInit
080012a8 g     F .text	0000000c TIM_OCStructInit
20002000 g       *ABS*	00000000 _estack
08001f8c  w    F .text	00000004 DAC_IRQHandler
08001b3c g     F .text	00000012 .hidden __aeabi_uidivmod
08001f8c  w    F .text	00000004 EXTI1_IRQHandler
08000268 g     F .text	00000028 DAC_DMACmd
08001a18 g     F .text	00000018 TIM_SelectMasterSlaveMode
20000020 g       .data	00000000 _edata
08000bc0 g     F .text	0000000c RCC_RTCResetCmd
080017d8 g     F .text	00000004 TIM_GetCapture4
08000244 g     F .text	00000024 DAC_GetDataOutputValue
08000160 g     F .text	00000024 DAC_Cmd
08001054 g     F .text	00000068 TIM_TimeBaseInit
08001f8c  w    F .text	00000004 TIM11_IRQHandler
08000124 g     F .text	00000030 DAC_Init
08001f8c  w    F .text	00000004 USART2_IRQHandler
08000d7c g     F .text	0000002c SYSCFG_EXTILineConfig
08000290 g     F .text	00000020 DAC_ITConfig
08000000 g     O .isr_vector	00000000 g_pfnVectors
080009c8 g     F .text	0000000c RCC_MSICmd
20000048 g     O .bss	00000004 NVIC_InitStructure
08001890 g     F .text	00000008 TIM_DMAConfig
08001f8c  w    F .text	00000004 I2C2_ER_IRQHandler
08001f8c  w    F .text	00000004 DMA1_Channel2_IRQHandler
08001858 g     F .text	00000004 TIM_GenerateEvent
2000004c g     O .bss	00000008 EXTI_InitStructure
080004cc g     F .text	00000018 DMA_ClearFlag
00000000  w      *UND*	00000000 __init_array_start
08001b50  w    F .text	00000002 .hidden __aeabi_idiv0
08001f8c  w    F .text	00000004 FLASH_IRQHandler
20000054 g     O .bss	0000002c DMA_InitStructure
080007b0 g     F .text	00000024 GPIO_PinLockConfig
08001f8c  w    F .text	00000004 BusFault_Handler
08001f8c  w    F .text	00000004 USART1_IRQHandler
08000a08 g     F .text	0000000c RCC_LSICmd
080017f4 g     F .text	0000001c TIM_SetIC2Prescaler
08001a30 g     F .text	00000016 TIM_ETRConfig
08000c2c g     F .text	00000018 RCC_APB2PeriphResetCmd
08001a00 g     F .text	00000018 TIM_SelectSlaveMode
08001f8c  w    F .text	00000004 I2C1_ER_IRQHandler
08000844 g     F .text	00000014 NVIC_PriorityGroupConfig
080002fc g     F .text	0000011c DMA_DeInit
08001434 g     F .text	00000010 TIM_ClearOC4Ref
08001158 g     F .text	00000018 TIM_SelectOnePulseMode
08001a48 g     F .text	00000038 TIM_EncoderInterfaceConfig
080009a4 g     F .text	0000000c RCC_AdjustMSICalibrationValue
00000000  w      *UND*	00000000 __preinit_array_start
08001304 g     F .text	00000004 TIM_SetCompare1
08001454 g     F .text	00000018 TIM_OC2PolarityConfig
080010f8 g     F .text	00000020 TIM_UpdateDisableConfig
080007d4 g     F .text	0000000c GPIO_ReadInputDataBit
080013ec g     F .text	00000018 TIM_OC4FastConfig
08000a78 g     F .text	00000014 RCC_HCLKConfig
080010d4 g     F .text	00000010 TIM_CounterModeConfig



Disassembly of section .text:

0800010c <DAC_DeInit>:
 800010c:	b510      	push	{r4, lr}
 800010e:	2480      	movs	r4, #128	; 0x80
 8000110:	05a4      	lsls	r4, r4, #22
 8000112:	1c20      	adds	r0, r4, #0
 8000114:	2101      	movs	r1, #1
 8000116:	f000 fd95 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 800011a:	1c20      	adds	r0, r4, #0
 800011c:	2100      	movs	r1, #0
 800011e:	f000 fd91 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 8000122:	bd10      	pop	{r4, pc}

08000124 <DAC_Init>:
 8000124:	4b09      	ldr	r3, [pc, #36]	; (800014c <DAC_Init+0x28>)
 8000126:	b530      	push	{r4, r5, lr}
 8000128:	4c09      	ldr	r4, [pc, #36]	; (8000150 <DAC_Init+0x2c>)
 800012a:	681a      	ldr	r2, [r3, #0]
 800012c:	4084      	lsls	r4, r0
 800012e:	684d      	ldr	r5, [r1, #4]
 8000130:	43a2      	bics	r2, r4
 8000132:	680c      	ldr	r4, [r1, #0]
 8000134:	4325      	orrs	r5, r4
 8000136:	688c      	ldr	r4, [r1, #8]
 8000138:	4325      	orrs	r5, r4
 800013a:	68cc      	ldr	r4, [r1, #12]
 800013c:	1c29      	adds	r1, r5, #0
 800013e:	4321      	orrs	r1, r4
 8000140:	4081      	lsls	r1, r0
 8000142:	1c08      	adds	r0, r1, #0
 8000144:	4310      	orrs	r0, r2
 8000146:	6018      	str	r0, [r3, #0]
 8000148:	bd30      	pop	{r4, r5, pc}
 800014a:	46c0      	nop			; (mov r8, r8)
 800014c:	40007400 	.word	0x40007400
 8000150:	00000ffe 	.word	0x00000ffe

08000154 <DAC_StructInit>:
 8000154:	2300      	movs	r3, #0
 8000156:	6003      	str	r3, [r0, #0]
 8000158:	6043      	str	r3, [r0, #4]
 800015a:	6083      	str	r3, [r0, #8]
 800015c:	60c3      	str	r3, [r0, #12]
 800015e:	4770      	bx	lr

08000160 <DAC_Cmd>:
 8000160:	4b07      	ldr	r3, [pc, #28]	; (8000180 <DAC_Cmd+0x20>)
 8000162:	681a      	ldr	r2, [r3, #0]
 8000164:	2900      	cmp	r1, #0
 8000166:	d104      	bne.n	8000172 <DAC_Cmd+0x12>
 8000168:	2101      	movs	r1, #1
 800016a:	4081      	lsls	r1, r0
 800016c:	438a      	bics	r2, r1
 800016e:	601a      	str	r2, [r3, #0]
 8000170:	4770      	bx	lr
 8000172:	2101      	movs	r1, #1
 8000174:	4081      	lsls	r1, r0
 8000176:	1c08      	adds	r0, r1, #0
 8000178:	4310      	orrs	r0, r2
 800017a:	6018      	str	r0, [r3, #0]
 800017c:	e7f8      	b.n	8000170 <DAC_Cmd+0x10>
 800017e:	46c0      	nop			; (mov r8, r8)
 8000180:	40007400 	.word	0x40007400

08000184 <DAC_SoftwareTriggerCmd>:
 8000184:	4b07      	ldr	r3, [pc, #28]	; (80001a4 <DAC_SoftwareTriggerCmd+0x20>)
 8000186:	0900      	lsrs	r0, r0, #4
 8000188:	685a      	ldr	r2, [r3, #4]
 800018a:	2900      	cmp	r1, #0
 800018c:	d104      	bne.n	8000198 <DAC_SoftwareTriggerCmd+0x14>
 800018e:	2101      	movs	r1, #1
 8000190:	4081      	lsls	r1, r0
 8000192:	438a      	bics	r2, r1
 8000194:	605a      	str	r2, [r3, #4]
 8000196:	4770      	bx	lr
 8000198:	2101      	movs	r1, #1
 800019a:	4081      	lsls	r1, r0
 800019c:	1c08      	adds	r0, r1, #0
 800019e:	4310      	orrs	r0, r2
 80001a0:	6058      	str	r0, [r3, #4]
 80001a2:	e7f8      	b.n	8000196 <DAC_SoftwareTriggerCmd+0x12>
 80001a4:	40007400 	.word	0x40007400

080001a8 <DAC_DualSoftwareTriggerCmd>:
 80001a8:	4b06      	ldr	r3, [pc, #24]	; (80001c4 <DAC_DualSoftwareTriggerCmd+0x1c>)
 80001aa:	2800      	cmp	r0, #0
 80001ac:	d104      	bne.n	80001b8 <DAC_DualSoftwareTriggerCmd+0x10>
 80001ae:	685a      	ldr	r2, [r3, #4]
 80001b0:	2103      	movs	r1, #3
 80001b2:	438a      	bics	r2, r1
 80001b4:	605a      	str	r2, [r3, #4]
 80001b6:	4770      	bx	lr
 80001b8:	6859      	ldr	r1, [r3, #4]
 80001ba:	2203      	movs	r2, #3
 80001bc:	430a      	orrs	r2, r1
 80001be:	605a      	str	r2, [r3, #4]
 80001c0:	e7f9      	b.n	80001b6 <DAC_DualSoftwareTriggerCmd+0xe>
 80001c2:	46c0      	nop			; (mov r8, r8)
 80001c4:	40007400 	.word	0x40007400

080001c8 <DAC_WaveGenerationCmd>:
 80001c8:	4b06      	ldr	r3, [pc, #24]	; (80001e4 <DAC_WaveGenerationCmd+0x1c>)
 80001ca:	2a00      	cmp	r2, #0
 80001cc:	d104      	bne.n	80001d8 <DAC_WaveGenerationCmd+0x10>
 80001ce:	681a      	ldr	r2, [r3, #0]
 80001d0:	4081      	lsls	r1, r0
 80001d2:	438a      	bics	r2, r1
 80001d4:	601a      	str	r2, [r3, #0]
 80001d6:	4770      	bx	lr
 80001d8:	681a      	ldr	r2, [r3, #0]
 80001da:	4081      	lsls	r1, r0
 80001dc:	1c08      	adds	r0, r1, #0
 80001de:	4310      	orrs	r0, r2
 80001e0:	6018      	str	r0, [r3, #0]
 80001e2:	e7f8      	b.n	80001d6 <DAC_WaveGenerationCmd+0xe>
 80001e4:	40007400 	.word	0x40007400

080001e8 <DAC_SetChannel1Data>:
 80001e8:	b082      	sub	sp, #8
 80001ea:	2300      	movs	r3, #0
 80001ec:	9301      	str	r3, [sp, #4]
 80001ee:	4b05      	ldr	r3, [pc, #20]	; (8000204 <DAC_SetChannel1Data+0x1c>)
 80001f0:	9301      	str	r3, [sp, #4]
 80001f2:	9b01      	ldr	r3, [sp, #4]
 80001f4:	3308      	adds	r3, #8
 80001f6:	1818      	adds	r0, r3, r0
 80001f8:	9001      	str	r0, [sp, #4]
 80001fa:	9b01      	ldr	r3, [sp, #4]
 80001fc:	6019      	str	r1, [r3, #0]
 80001fe:	b002      	add	sp, #8
 8000200:	4770      	bx	lr
 8000202:	46c0      	nop			; (mov r8, r8)
 8000204:	40007400 	.word	0x40007400

08000208 <DAC_SetChannel2Data>:
 8000208:	b082      	sub	sp, #8
 800020a:	2300      	movs	r3, #0
 800020c:	9301      	str	r3, [sp, #4]
 800020e:	4b05      	ldr	r3, [pc, #20]	; (8000224 <DAC_SetChannel2Data+0x1c>)
 8000210:	9301      	str	r3, [sp, #4]
 8000212:	9b01      	ldr	r3, [sp, #4]
 8000214:	3314      	adds	r3, #20
 8000216:	1818      	adds	r0, r3, r0
 8000218:	9001      	str	r0, [sp, #4]
 800021a:	9b01      	ldr	r3, [sp, #4]
 800021c:	6019      	str	r1, [r3, #0]
 800021e:	b002      	add	sp, #8
 8000220:	4770      	bx	lr
 8000222:	46c0      	nop			; (mov r8, r8)
 8000224:	40007400 	.word	0x40007400

08000228 <DAC_SetDualChannelData>:
 8000228:	2808      	cmp	r0, #8
 800022a:	d005      	beq.n	8000238 <DAC_SetDualChannelData+0x10>
 800022c:	0409      	lsls	r1, r1, #16
 800022e:	4311      	orrs	r1, r2
 8000230:	4b03      	ldr	r3, [pc, #12]	; (8000240 <DAC_SetDualChannelData+0x18>)
 8000232:	18c0      	adds	r0, r0, r3
 8000234:	6001      	str	r1, [r0, #0]
 8000236:	4770      	bx	lr
 8000238:	0209      	lsls	r1, r1, #8
 800023a:	4311      	orrs	r1, r2
 800023c:	e7f8      	b.n	8000230 <DAC_SetDualChannelData+0x8>
 800023e:	46c0      	nop			; (mov r8, r8)
 8000240:	40007420 	.word	0x40007420

08000244 <DAC_GetDataOutputValue>:
 8000244:	b082      	sub	sp, #8
 8000246:	2300      	movs	r3, #0
 8000248:	9301      	str	r3, [sp, #4]
 800024a:	4b06      	ldr	r3, [pc, #24]	; (8000264 <DAC_GetDataOutputValue+0x20>)
 800024c:	0880      	lsrs	r0, r0, #2
 800024e:	9301      	str	r3, [sp, #4]
 8000250:	9b01      	ldr	r3, [sp, #4]
 8000252:	332c      	adds	r3, #44	; 0x2c
 8000254:	1818      	adds	r0, r3, r0
 8000256:	9001      	str	r0, [sp, #4]
 8000258:	9b01      	ldr	r3, [sp, #4]
 800025a:	6818      	ldr	r0, [r3, #0]
 800025c:	b280      	uxth	r0, r0
 800025e:	b002      	add	sp, #8
 8000260:	4770      	bx	lr
 8000262:	46c0      	nop			; (mov r8, r8)
 8000264:	40007400 	.word	0x40007400

08000268 <DAC_DMACmd>:
 8000268:	4b08      	ldr	r3, [pc, #32]	; (800028c <DAC_DMACmd+0x24>)
 800026a:	681a      	ldr	r2, [r3, #0]
 800026c:	2900      	cmp	r1, #0
 800026e:	d105      	bne.n	800027c <DAC_DMACmd+0x14>
 8000270:	2180      	movs	r1, #128	; 0x80
 8000272:	0149      	lsls	r1, r1, #5
 8000274:	4081      	lsls	r1, r0
 8000276:	438a      	bics	r2, r1
 8000278:	601a      	str	r2, [r3, #0]
 800027a:	4770      	bx	lr
 800027c:	2180      	movs	r1, #128	; 0x80
 800027e:	0149      	lsls	r1, r1, #5
 8000280:	4081      	lsls	r1, r0
 8000282:	1c08      	adds	r0, r1, #0
 8000284:	4310      	orrs	r0, r2
 8000286:	6018      	str	r0, [r3, #0]
 8000288:	e7f7      	b.n	800027a <DAC_DMACmd+0x12>
 800028a:	46c0      	nop			; (mov r8, r8)
 800028c:	40007400 	.word	0x40007400

08000290 <DAC_ITConfig>:
 8000290:	4b06      	ldr	r3, [pc, #24]	; (80002ac <DAC_ITConfig+0x1c>)
 8000292:	2a00      	cmp	r2, #0
 8000294:	d104      	bne.n	80002a0 <DAC_ITConfig+0x10>
 8000296:	681a      	ldr	r2, [r3, #0]
 8000298:	4081      	lsls	r1, r0
 800029a:	438a      	bics	r2, r1
 800029c:	601a      	str	r2, [r3, #0]
 800029e:	4770      	bx	lr
 80002a0:	681a      	ldr	r2, [r3, #0]
 80002a2:	4081      	lsls	r1, r0
 80002a4:	1c08      	adds	r0, r1, #0
 80002a6:	4310      	orrs	r0, r2
 80002a8:	6018      	str	r0, [r3, #0]
 80002aa:	e7f8      	b.n	800029e <DAC_ITConfig+0xe>
 80002ac:	40007400 	.word	0x40007400

080002b0 <DAC_GetFlagStatus>:
 80002b0:	4b04      	ldr	r3, [pc, #16]	; (80002c4 <DAC_GetFlagStatus+0x14>)
 80002b2:	4081      	lsls	r1, r0
 80002b4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80002b6:	1c08      	adds	r0, r1, #0
 80002b8:	4018      	ands	r0, r3
 80002ba:	1e43      	subs	r3, r0, #1
 80002bc:	4198      	sbcs	r0, r3
 80002be:	b2c0      	uxtb	r0, r0
 80002c0:	4770      	bx	lr
 80002c2:	46c0      	nop			; (mov r8, r8)
 80002c4:	40007400 	.word	0x40007400

080002c8 <DAC_ClearFlag>:
 80002c8:	4b01      	ldr	r3, [pc, #4]	; (80002d0 <DAC_ClearFlag+0x8>)
 80002ca:	4081      	lsls	r1, r0
 80002cc:	6359      	str	r1, [r3, #52]	; 0x34
 80002ce:	4770      	bx	lr
 80002d0:	40007400 	.word	0x40007400

080002d4 <DAC_GetITStatus>:
 80002d4:	4b05      	ldr	r3, [pc, #20]	; (80002ec <DAC_GetITStatus+0x18>)
 80002d6:	4081      	lsls	r1, r0
 80002d8:	681a      	ldr	r2, [r3, #0]
 80002da:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80002dc:	2000      	movs	r0, #0
 80002de:	420b      	tst	r3, r1
 80002e0:	d003      	beq.n	80002ea <DAC_GetITStatus+0x16>
 80002e2:	4011      	ands	r1, r2
 80002e4:	1e4a      	subs	r2, r1, #1
 80002e6:	4191      	sbcs	r1, r2
 80002e8:	b2c8      	uxtb	r0, r1
 80002ea:	4770      	bx	lr
 80002ec:	40007400 	.word	0x40007400

080002f0 <DAC_ClearITPendingBit>:
 80002f0:	4b01      	ldr	r3, [pc, #4]	; (80002f8 <DAC_ClearITPendingBit+0x8>)
 80002f2:	4081      	lsls	r1, r0
 80002f4:	6359      	str	r1, [r3, #52]	; 0x34
 80002f6:	4770      	bx	lr
 80002f8:	40007400 	.word	0x40007400

080002fc <DMA_DeInit>:
 80002fc:	6802      	ldr	r2, [r0, #0]
 80002fe:	4b37      	ldr	r3, [pc, #220]	; (80003dc <DMA_DeInit+0xe0>)
 8000300:	4013      	ands	r3, r2
 8000302:	6003      	str	r3, [r0, #0]
 8000304:	2300      	movs	r3, #0
 8000306:	6003      	str	r3, [r0, #0]
 8000308:	6043      	str	r3, [r0, #4]
 800030a:	6083      	str	r3, [r0, #8]
 800030c:	60c3      	str	r3, [r0, #12]
 800030e:	4b34      	ldr	r3, [pc, #208]	; (80003e0 <DMA_DeInit+0xe4>)
 8000310:	4298      	cmp	r0, r3
 8000312:	d028      	beq.n	8000366 <DMA_DeInit+0x6a>
 8000314:	4b33      	ldr	r3, [pc, #204]	; (80003e4 <DMA_DeInit+0xe8>)
 8000316:	4298      	cmp	r0, r3
 8000318:	d02b      	beq.n	8000372 <DMA_DeInit+0x76>
 800031a:	4b33      	ldr	r3, [pc, #204]	; (80003e8 <DMA_DeInit+0xec>)
 800031c:	4298      	cmp	r0, r3
 800031e:	d02e      	beq.n	800037e <DMA_DeInit+0x82>
 8000320:	4b32      	ldr	r3, [pc, #200]	; (80003ec <DMA_DeInit+0xf0>)
 8000322:	4298      	cmp	r0, r3
 8000324:	d032      	beq.n	800038c <DMA_DeInit+0x90>
 8000326:	4b32      	ldr	r3, [pc, #200]	; (80003f0 <DMA_DeInit+0xf4>)
 8000328:	4298      	cmp	r0, r3
 800032a:	d03d      	beq.n	80003a8 <DMA_DeInit+0xac>
 800032c:	4b31      	ldr	r3, [pc, #196]	; (80003f4 <DMA_DeInit+0xf8>)
 800032e:	4298      	cmp	r0, r3
 8000330:	d03c      	beq.n	80003ac <DMA_DeInit+0xb0>
 8000332:	4b31      	ldr	r3, [pc, #196]	; (80003f8 <DMA_DeInit+0xfc>)
 8000334:	4298      	cmp	r0, r3
 8000336:	d00f      	beq.n	8000358 <DMA_DeInit+0x5c>
 8000338:	4b30      	ldr	r3, [pc, #192]	; (80003fc <DMA_DeInit+0x100>)
 800033a:	4298      	cmp	r0, r3
 800033c:	d03d      	beq.n	80003ba <DMA_DeInit+0xbe>
 800033e:	4b30      	ldr	r3, [pc, #192]	; (8000400 <DMA_DeInit+0x104>)
 8000340:	4298      	cmp	r0, r3
 8000342:	d040      	beq.n	80003c6 <DMA_DeInit+0xca>
 8000344:	4b2f      	ldr	r3, [pc, #188]	; (8000404 <DMA_DeInit+0x108>)
 8000346:	4298      	cmp	r0, r3
 8000348:	d043      	beq.n	80003d2 <DMA_DeInit+0xd6>
 800034a:	4b2f      	ldr	r3, [pc, #188]	; (8000408 <DMA_DeInit+0x10c>)
 800034c:	4298      	cmp	r0, r3
 800034e:	d042      	beq.n	80003d6 <DMA_DeInit+0xda>
 8000350:	4b2e      	ldr	r3, [pc, #184]	; (800040c <DMA_DeInit+0x110>)
 8000352:	4298      	cmp	r0, r3
 8000354:	d021      	beq.n	800039a <DMA_DeInit+0x9e>
 8000356:	4770      	bx	lr
 8000358:	4b2d      	ldr	r3, [pc, #180]	; (8000410 <DMA_DeInit+0x114>)
 800035a:	22f0      	movs	r2, #240	; 0xf0
 800035c:	6859      	ldr	r1, [r3, #4]
 800035e:	0512      	lsls	r2, r2, #20
 8000360:	430a      	orrs	r2, r1
 8000362:	605a      	str	r2, [r3, #4]
 8000364:	e7f7      	b.n	8000356 <DMA_DeInit+0x5a>
 8000366:	4b2a      	ldr	r3, [pc, #168]	; (8000410 <DMA_DeInit+0x114>)
 8000368:	220f      	movs	r2, #15
 800036a:	6859      	ldr	r1, [r3, #4]
 800036c:	430a      	orrs	r2, r1
 800036e:	605a      	str	r2, [r3, #4]
 8000370:	e7f1      	b.n	8000356 <DMA_DeInit+0x5a>
 8000372:	4b27      	ldr	r3, [pc, #156]	; (8000410 <DMA_DeInit+0x114>)
 8000374:	22f0      	movs	r2, #240	; 0xf0
 8000376:	6859      	ldr	r1, [r3, #4]
 8000378:	430a      	orrs	r2, r1
 800037a:	605a      	str	r2, [r3, #4]
 800037c:	e7eb      	b.n	8000356 <DMA_DeInit+0x5a>
 800037e:	4b24      	ldr	r3, [pc, #144]	; (8000410 <DMA_DeInit+0x114>)
 8000380:	6859      	ldr	r1, [r3, #4]
 8000382:	22f0      	movs	r2, #240	; 0xf0
 8000384:	0112      	lsls	r2, r2, #4
 8000386:	430a      	orrs	r2, r1
 8000388:	605a      	str	r2, [r3, #4]
 800038a:	e7e4      	b.n	8000356 <DMA_DeInit+0x5a>
 800038c:	4b20      	ldr	r3, [pc, #128]	; (8000410 <DMA_DeInit+0x114>)
 800038e:	6859      	ldr	r1, [r3, #4]
 8000390:	22f0      	movs	r2, #240	; 0xf0
 8000392:	0212      	lsls	r2, r2, #8
 8000394:	430a      	orrs	r2, r1
 8000396:	605a      	str	r2, [r3, #4]
 8000398:	e7dd      	b.n	8000356 <DMA_DeInit+0x5a>
 800039a:	4b1e      	ldr	r3, [pc, #120]	; (8000414 <DMA_DeInit+0x118>)
 800039c:	6859      	ldr	r1, [r3, #4]
 800039e:	22f0      	movs	r2, #240	; 0xf0
 80003a0:	0312      	lsls	r2, r2, #12
 80003a2:	430a      	orrs	r2, r1
 80003a4:	605a      	str	r2, [r3, #4]
 80003a6:	e7d6      	b.n	8000356 <DMA_DeInit+0x5a>
 80003a8:	4b19      	ldr	r3, [pc, #100]	; (8000410 <DMA_DeInit+0x114>)
 80003aa:	e7f7      	b.n	800039c <DMA_DeInit+0xa0>
 80003ac:	4b18      	ldr	r3, [pc, #96]	; (8000410 <DMA_DeInit+0x114>)
 80003ae:	22f0      	movs	r2, #240	; 0xf0
 80003b0:	6859      	ldr	r1, [r3, #4]
 80003b2:	0412      	lsls	r2, r2, #16
 80003b4:	430a      	orrs	r2, r1
 80003b6:	605a      	str	r2, [r3, #4]
 80003b8:	e7cd      	b.n	8000356 <DMA_DeInit+0x5a>
 80003ba:	4b16      	ldr	r3, [pc, #88]	; (8000414 <DMA_DeInit+0x118>)
 80003bc:	220f      	movs	r2, #15
 80003be:	6859      	ldr	r1, [r3, #4]
 80003c0:	430a      	orrs	r2, r1
 80003c2:	605a      	str	r2, [r3, #4]
 80003c4:	e7c7      	b.n	8000356 <DMA_DeInit+0x5a>
 80003c6:	4b13      	ldr	r3, [pc, #76]	; (8000414 <DMA_DeInit+0x118>)
 80003c8:	22f0      	movs	r2, #240	; 0xf0
 80003ca:	6859      	ldr	r1, [r3, #4]
 80003cc:	430a      	orrs	r2, r1
 80003ce:	605a      	str	r2, [r3, #4]
 80003d0:	e7c1      	b.n	8000356 <DMA_DeInit+0x5a>
 80003d2:	4b10      	ldr	r3, [pc, #64]	; (8000414 <DMA_DeInit+0x118>)
 80003d4:	e7d4      	b.n	8000380 <DMA_DeInit+0x84>
 80003d6:	4b0f      	ldr	r3, [pc, #60]	; (8000414 <DMA_DeInit+0x118>)
 80003d8:	e7d9      	b.n	800038e <DMA_DeInit+0x92>
 80003da:	46c0      	nop			; (mov r8, r8)
 80003dc:	0000fffe 	.word	0x0000fffe
 80003e0:	40026008 	.word	0x40026008
 80003e4:	4002601c 	.word	0x4002601c
 80003e8:	40026030 	.word	0x40026030
 80003ec:	40026044 	.word	0x40026044
 80003f0:	40026058 	.word	0x40026058
 80003f4:	4002606c 	.word	0x4002606c
 80003f8:	40026080 	.word	0x40026080
 80003fc:	40026408 	.word	0x40026408
 8000400:	4002641c 	.word	0x4002641c
 8000404:	40026430 	.word	0x40026430
 8000408:	40026444 	.word	0x40026444
 800040c:	40026458 	.word	0x40026458
 8000410:	40026000 	.word	0x40026000
 8000414:	40026400 	.word	0x40026400

08000418 <DMA_Init>:
 8000418:	6802      	ldr	r2, [r0, #0]
 800041a:	4b0d      	ldr	r3, [pc, #52]	; (8000450 <DMA_Init+0x38>)
 800041c:	b510      	push	{r4, lr}
 800041e:	401a      	ands	r2, r3
 8000420:	688c      	ldr	r4, [r1, #8]
 8000422:	6a0b      	ldr	r3, [r1, #32]
 8000424:	4323      	orrs	r3, r4
 8000426:	690c      	ldr	r4, [r1, #16]
 8000428:	4323      	orrs	r3, r4
 800042a:	694c      	ldr	r4, [r1, #20]
 800042c:	4323      	orrs	r3, r4
 800042e:	698c      	ldr	r4, [r1, #24]
 8000430:	4323      	orrs	r3, r4
 8000432:	69cc      	ldr	r4, [r1, #28]
 8000434:	4323      	orrs	r3, r4
 8000436:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 8000438:	4323      	orrs	r3, r4
 800043a:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800043c:	4323      	orrs	r3, r4
 800043e:	4313      	orrs	r3, r2
 8000440:	6003      	str	r3, [r0, #0]
 8000442:	68cb      	ldr	r3, [r1, #12]
 8000444:	680c      	ldr	r4, [r1, #0]
 8000446:	6043      	str	r3, [r0, #4]
 8000448:	684b      	ldr	r3, [r1, #4]
 800044a:	6084      	str	r4, [r0, #8]
 800044c:	60c3      	str	r3, [r0, #12]
 800044e:	bd10      	pop	{r4, pc}
 8000450:	ffff800f 	.word	0xffff800f

08000454 <DMA_StructInit>:
 8000454:	2300      	movs	r3, #0
 8000456:	6003      	str	r3, [r0, #0]
 8000458:	6043      	str	r3, [r0, #4]
 800045a:	6083      	str	r3, [r0, #8]
 800045c:	60c3      	str	r3, [r0, #12]
 800045e:	6103      	str	r3, [r0, #16]
 8000460:	6143      	str	r3, [r0, #20]
 8000462:	6183      	str	r3, [r0, #24]
 8000464:	61c3      	str	r3, [r0, #28]
 8000466:	6203      	str	r3, [r0, #32]
 8000468:	6243      	str	r3, [r0, #36]	; 0x24
 800046a:	6283      	str	r3, [r0, #40]	; 0x28
 800046c:	4770      	bx	lr
 800046e:	46c0      	nop			; (mov r8, r8)

08000470 <DMA_Cmd>:
 8000470:	6802      	ldr	r2, [r0, #0]
 8000472:	2900      	cmp	r1, #0
 8000474:	d103      	bne.n	800047e <DMA_Cmd+0xe>
 8000476:	4b04      	ldr	r3, [pc, #16]	; (8000488 <DMA_Cmd+0x18>)
 8000478:	4013      	ands	r3, r2
 800047a:	6003      	str	r3, [r0, #0]
 800047c:	4770      	bx	lr
 800047e:	2301      	movs	r3, #1
 8000480:	4313      	orrs	r3, r2
 8000482:	6003      	str	r3, [r0, #0]
 8000484:	e7fa      	b.n	800047c <DMA_Cmd+0xc>
 8000486:	46c0      	nop			; (mov r8, r8)
 8000488:	0000fffe 	.word	0x0000fffe

0800048c <DMA_SetCurrDataCounter>:
 800048c:	6041      	str	r1, [r0, #4]
 800048e:	4770      	bx	lr

08000490 <DMA_GetCurrDataCounter>:
 8000490:	6840      	ldr	r0, [r0, #4]
 8000492:	b280      	uxth	r0, r0
 8000494:	4770      	bx	lr
 8000496:	46c0      	nop			; (mov r8, r8)

08000498 <DMA_ITConfig>:
 8000498:	6803      	ldr	r3, [r0, #0]
 800049a:	2a00      	cmp	r2, #0
 800049c:	d102      	bne.n	80004a4 <DMA_ITConfig+0xc>
 800049e:	438b      	bics	r3, r1
 80004a0:	6003      	str	r3, [r0, #0]
 80004a2:	4770      	bx	lr
 80004a4:	4319      	orrs	r1, r3
 80004a6:	6001      	str	r1, [r0, #0]
 80004a8:	e7fb      	b.n	80004a2 <DMA_ITConfig+0xa>
 80004aa:	46c0      	nop			; (mov r8, r8)

080004ac <DMA_GetFlagStatus>:
 80004ac:	00c3      	lsls	r3, r0, #3
 80004ae:	d406      	bmi.n	80004be <DMA_GetFlagStatus+0x12>
 80004b0:	4b04      	ldr	r3, [pc, #16]	; (80004c4 <DMA_GetFlagStatus+0x18>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	4018      	ands	r0, r3
 80004b6:	1e43      	subs	r3, r0, #1
 80004b8:	4198      	sbcs	r0, r3
 80004ba:	b2c0      	uxtb	r0, r0
 80004bc:	4770      	bx	lr
 80004be:	4b02      	ldr	r3, [pc, #8]	; (80004c8 <DMA_GetFlagStatus+0x1c>)
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	e7f7      	b.n	80004b4 <DMA_GetFlagStatus+0x8>
 80004c4:	40026000 	.word	0x40026000
 80004c8:	40026400 	.word	0x40026400

080004cc <DMA_ClearFlag>:
 80004cc:	00c3      	lsls	r3, r0, #3
 80004ce:	d502      	bpl.n	80004d6 <DMA_ClearFlag+0xa>
 80004d0:	4b02      	ldr	r3, [pc, #8]	; (80004dc <DMA_ClearFlag+0x10>)
 80004d2:	6058      	str	r0, [r3, #4]
 80004d4:	4770      	bx	lr
 80004d6:	4b02      	ldr	r3, [pc, #8]	; (80004e0 <DMA_ClearFlag+0x14>)
 80004d8:	6058      	str	r0, [r3, #4]
 80004da:	e7fb      	b.n	80004d4 <DMA_ClearFlag+0x8>
 80004dc:	40026400 	.word	0x40026400
 80004e0:	40026000 	.word	0x40026000

080004e4 <DMA_GetITStatus>:
 80004e4:	00c3      	lsls	r3, r0, #3
 80004e6:	d406      	bmi.n	80004f6 <DMA_GetITStatus+0x12>
 80004e8:	4b04      	ldr	r3, [pc, #16]	; (80004fc <DMA_GetITStatus+0x18>)
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	4018      	ands	r0, r3
 80004ee:	1e43      	subs	r3, r0, #1
 80004f0:	4198      	sbcs	r0, r3
 80004f2:	b2c0      	uxtb	r0, r0
 80004f4:	4770      	bx	lr
 80004f6:	4b02      	ldr	r3, [pc, #8]	; (8000500 <DMA_GetITStatus+0x1c>)
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	e7f7      	b.n	80004ec <DMA_GetITStatus+0x8>
 80004fc:	40026000 	.word	0x40026000
 8000500:	40026400 	.word	0x40026400

08000504 <DMA_ClearITPendingBit>:
 8000504:	00c3      	lsls	r3, r0, #3
 8000506:	d502      	bpl.n	800050e <DMA_ClearITPendingBit+0xa>
 8000508:	4b02      	ldr	r3, [pc, #8]	; (8000514 <DMA_ClearITPendingBit+0x10>)
 800050a:	6058      	str	r0, [r3, #4]
 800050c:	4770      	bx	lr
 800050e:	4b02      	ldr	r3, [pc, #8]	; (8000518 <DMA_ClearITPendingBit+0x14>)
 8000510:	6058      	str	r0, [r3, #4]
 8000512:	e7fb      	b.n	800050c <DMA_ClearITPendingBit+0x8>
 8000514:	40026400 	.word	0x40026400
 8000518:	40026000 	.word	0x40026000

0800051c <EXTI_DeInit>:
 800051c:	4b04      	ldr	r3, [pc, #16]	; (8000530 <EXTI_DeInit+0x14>)
 800051e:	2200      	movs	r2, #0
 8000520:	601a      	str	r2, [r3, #0]
 8000522:	605a      	str	r2, [r3, #4]
 8000524:	609a      	str	r2, [r3, #8]
 8000526:	60da      	str	r2, [r3, #12]
 8000528:	4a02      	ldr	r2, [pc, #8]	; (8000534 <EXTI_DeInit+0x18>)
 800052a:	615a      	str	r2, [r3, #20]
 800052c:	4770      	bx	lr
 800052e:	46c0      	nop			; (mov r8, r8)
 8000530:	40010400 	.word	0x40010400
 8000534:	00ffffff 	.word	0x00ffffff

08000538 <EXTI_Init>:
 8000538:	7983      	ldrb	r3, [r0, #6]
 800053a:	b510      	push	{r4, lr}
 800053c:	2b00      	cmp	r3, #0
 800053e:	d01e      	beq.n	800057e <EXTI_Init+0x46>
 8000540:	4b16      	ldr	r3, [pc, #88]	; (800059c <EXTI_Init+0x64>)
 8000542:	6801      	ldr	r1, [r0, #0]
 8000544:	681c      	ldr	r4, [r3, #0]
 8000546:	43ca      	mvns	r2, r1
 8000548:	4014      	ands	r4, r2
 800054a:	601c      	str	r4, [r3, #0]
 800054c:	685c      	ldr	r4, [r3, #4]
 800054e:	4022      	ands	r2, r4
 8000550:	605a      	str	r2, [r3, #4]
 8000552:	7902      	ldrb	r2, [r0, #4]
 8000554:	18d2      	adds	r2, r2, r3
 8000556:	6814      	ldr	r4, [r2, #0]
 8000558:	4321      	orrs	r1, r4
 800055a:	6011      	str	r1, [r2, #0]
 800055c:	6802      	ldr	r2, [r0, #0]
 800055e:	689c      	ldr	r4, [r3, #8]
 8000560:	43d1      	mvns	r1, r2
 8000562:	400c      	ands	r4, r1
 8000564:	609c      	str	r4, [r3, #8]
 8000566:	68dc      	ldr	r4, [r3, #12]
 8000568:	4021      	ands	r1, r4
 800056a:	60d9      	str	r1, [r3, #12]
 800056c:	7941      	ldrb	r1, [r0, #5]
 800056e:	2910      	cmp	r1, #16
 8000570:	d00d      	beq.n	800058e <EXTI_Init+0x56>
 8000572:	4b0a      	ldr	r3, [pc, #40]	; (800059c <EXTI_Init+0x64>)
 8000574:	18c9      	adds	r1, r1, r3
 8000576:	680b      	ldr	r3, [r1, #0]
 8000578:	431a      	orrs	r2, r3
 800057a:	600a      	str	r2, [r1, #0]
 800057c:	e006      	b.n	800058c <EXTI_Init+0x54>
 800057e:	7903      	ldrb	r3, [r0, #4]
 8000580:	4c06      	ldr	r4, [pc, #24]	; (800059c <EXTI_Init+0x64>)
 8000582:	6801      	ldr	r1, [r0, #0]
 8000584:	191b      	adds	r3, r3, r4
 8000586:	681a      	ldr	r2, [r3, #0]
 8000588:	438a      	bics	r2, r1
 800058a:	601a      	str	r2, [r3, #0]
 800058c:	bd10      	pop	{r4, pc}
 800058e:	6899      	ldr	r1, [r3, #8]
 8000590:	4311      	orrs	r1, r2
 8000592:	6099      	str	r1, [r3, #8]
 8000594:	68d9      	ldr	r1, [r3, #12]
 8000596:	430a      	orrs	r2, r1
 8000598:	60da      	str	r2, [r3, #12]
 800059a:	e7f7      	b.n	800058c <EXTI_Init+0x54>
 800059c:	40010400 	.word	0x40010400

080005a0 <EXTI_StructInit>:
 80005a0:	2300      	movs	r3, #0
 80005a2:	220c      	movs	r2, #12
 80005a4:	6003      	str	r3, [r0, #0]
 80005a6:	7103      	strb	r3, [r0, #4]
 80005a8:	7142      	strb	r2, [r0, #5]
 80005aa:	7183      	strb	r3, [r0, #6]
 80005ac:	4770      	bx	lr
 80005ae:	46c0      	nop			; (mov r8, r8)

080005b0 <EXTI_GenerateSWInterrupt>:
 80005b0:	4b02      	ldr	r3, [pc, #8]	; (80005bc <EXTI_GenerateSWInterrupt+0xc>)
 80005b2:	691a      	ldr	r2, [r3, #16]
 80005b4:	4310      	orrs	r0, r2
 80005b6:	6118      	str	r0, [r3, #16]
 80005b8:	4770      	bx	lr
 80005ba:	46c0      	nop			; (mov r8, r8)
 80005bc:	40010400 	.word	0x40010400

080005c0 <EXTI_GetFlagStatus>:
 80005c0:	4b03      	ldr	r3, [pc, #12]	; (80005d0 <EXTI_GetFlagStatus+0x10>)
 80005c2:	695b      	ldr	r3, [r3, #20]
 80005c4:	4018      	ands	r0, r3
 80005c6:	1e43      	subs	r3, r0, #1
 80005c8:	4198      	sbcs	r0, r3
 80005ca:	b2c0      	uxtb	r0, r0
 80005cc:	4770      	bx	lr
 80005ce:	46c0      	nop			; (mov r8, r8)
 80005d0:	40010400 	.word	0x40010400

080005d4 <EXTI_ClearFlag>:
 80005d4:	4b01      	ldr	r3, [pc, #4]	; (80005dc <EXTI_ClearFlag+0x8>)
 80005d6:	6158      	str	r0, [r3, #20]
 80005d8:	4770      	bx	lr
 80005da:	46c0      	nop			; (mov r8, r8)
 80005dc:	40010400 	.word	0x40010400

080005e0 <EXTI_GetITStatus>:
 80005e0:	4b05      	ldr	r3, [pc, #20]	; (80005f8 <EXTI_GetITStatus+0x18>)
 80005e2:	6819      	ldr	r1, [r3, #0]
 80005e4:	695a      	ldr	r2, [r3, #20]
 80005e6:	2300      	movs	r3, #0
 80005e8:	4202      	tst	r2, r0
 80005ea:	d003      	beq.n	80005f4 <EXTI_GetITStatus+0x14>
 80005ec:	4008      	ands	r0, r1
 80005ee:	1e41      	subs	r1, r0, #1
 80005f0:	4188      	sbcs	r0, r1
 80005f2:	b2c3      	uxtb	r3, r0
 80005f4:	1c18      	adds	r0, r3, #0
 80005f6:	4770      	bx	lr
 80005f8:	40010400 	.word	0x40010400

080005fc <EXTI_ClearITPendingBit>:
 80005fc:	4b01      	ldr	r3, [pc, #4]	; (8000604 <EXTI_ClearITPendingBit+0x8>)
 80005fe:	6158      	str	r0, [r3, #20]
 8000600:	4770      	bx	lr
 8000602:	46c0      	nop			; (mov r8, r8)
 8000604:	40010400 	.word	0x40010400

08000608 <GPIO_DeInit>:
 8000608:	b508      	push	{r3, lr}
 800060a:	4b30      	ldr	r3, [pc, #192]	; (80006cc <GPIO_DeInit+0xc4>)
 800060c:	4298      	cmp	r0, r3
 800060e:	d01e      	beq.n	800064e <GPIO_DeInit+0x46>
 8000610:	4b2f      	ldr	r3, [pc, #188]	; (80006d0 <GPIO_DeInit+0xc8>)
 8000612:	4298      	cmp	r0, r3
 8000614:	d024      	beq.n	8000660 <GPIO_DeInit+0x58>
 8000616:	4b2f      	ldr	r3, [pc, #188]	; (80006d4 <GPIO_DeInit+0xcc>)
 8000618:	4298      	cmp	r0, r3
 800061a:	d02a      	beq.n	8000672 <GPIO_DeInit+0x6a>
 800061c:	4b2e      	ldr	r3, [pc, #184]	; (80006d8 <GPIO_DeInit+0xd0>)
 800061e:	4298      	cmp	r0, r3
 8000620:	d030      	beq.n	8000684 <GPIO_DeInit+0x7c>
 8000622:	4b2e      	ldr	r3, [pc, #184]	; (80006dc <GPIO_DeInit+0xd4>)
 8000624:	4298      	cmp	r0, r3
 8000626:	d036      	beq.n	8000696 <GPIO_DeInit+0x8e>
 8000628:	4b2d      	ldr	r3, [pc, #180]	; (80006e0 <GPIO_DeInit+0xd8>)
 800062a:	4298      	cmp	r0, r3
 800062c:	d03c      	beq.n	80006a8 <GPIO_DeInit+0xa0>
 800062e:	4b2d      	ldr	r3, [pc, #180]	; (80006e4 <GPIO_DeInit+0xdc>)
 8000630:	4298      	cmp	r0, r3
 8000632:	d042      	beq.n	80006ba <GPIO_DeInit+0xb2>
 8000634:	4b2c      	ldr	r3, [pc, #176]	; (80006e8 <GPIO_DeInit+0xe0>)
 8000636:	4298      	cmp	r0, r3
 8000638:	d000      	beq.n	800063c <GPIO_DeInit+0x34>
 800063a:	bd08      	pop	{r3, pc}
 800063c:	2020      	movs	r0, #32
 800063e:	2101      	movs	r1, #1
 8000640:	f000 fae8 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 8000644:	2020      	movs	r0, #32
 8000646:	2100      	movs	r1, #0
 8000648:	f000 fae4 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 800064c:	e7f5      	b.n	800063a <GPIO_DeInit+0x32>
 800064e:	2001      	movs	r0, #1
 8000650:	2101      	movs	r1, #1
 8000652:	f000 fadf 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 8000656:	2001      	movs	r0, #1
 8000658:	2100      	movs	r1, #0
 800065a:	f000 fadb 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 800065e:	e7ec      	b.n	800063a <GPIO_DeInit+0x32>
 8000660:	2002      	movs	r0, #2
 8000662:	2101      	movs	r1, #1
 8000664:	f000 fad6 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 8000668:	2002      	movs	r0, #2
 800066a:	2100      	movs	r1, #0
 800066c:	f000 fad2 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 8000670:	e7e3      	b.n	800063a <GPIO_DeInit+0x32>
 8000672:	2004      	movs	r0, #4
 8000674:	2101      	movs	r1, #1
 8000676:	f000 facd 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 800067a:	2004      	movs	r0, #4
 800067c:	2100      	movs	r1, #0
 800067e:	f000 fac9 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 8000682:	e7da      	b.n	800063a <GPIO_DeInit+0x32>
 8000684:	2008      	movs	r0, #8
 8000686:	2101      	movs	r1, #1
 8000688:	f000 fac4 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 800068c:	2008      	movs	r0, #8
 800068e:	2100      	movs	r1, #0
 8000690:	f000 fac0 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 8000694:	e7d1      	b.n	800063a <GPIO_DeInit+0x32>
 8000696:	2010      	movs	r0, #16
 8000698:	2101      	movs	r1, #1
 800069a:	f000 fabb 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 800069e:	2010      	movs	r0, #16
 80006a0:	2100      	movs	r1, #0
 80006a2:	f000 fab7 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 80006a6:	e7c8      	b.n	800063a <GPIO_DeInit+0x32>
 80006a8:	2040      	movs	r0, #64	; 0x40
 80006aa:	2101      	movs	r1, #1
 80006ac:	f000 fab2 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 80006b0:	2040      	movs	r0, #64	; 0x40
 80006b2:	2100      	movs	r1, #0
 80006b4:	f000 faae 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 80006b8:	e7bf      	b.n	800063a <GPIO_DeInit+0x32>
 80006ba:	2080      	movs	r0, #128	; 0x80
 80006bc:	2101      	movs	r1, #1
 80006be:	f000 faa9 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 80006c2:	2080      	movs	r0, #128	; 0x80
 80006c4:	2100      	movs	r1, #0
 80006c6:	f000 faa5 	bl	8000c14 <RCC_AHBPeriphResetCmd>
 80006ca:	e7b6      	b.n	800063a <GPIO_DeInit+0x32>
 80006cc:	40020000 	.word	0x40020000
 80006d0:	40020400 	.word	0x40020400
 80006d4:	40020800 	.word	0x40020800
 80006d8:	40020c00 	.word	0x40020c00
 80006dc:	40021000 	.word	0x40021000
 80006e0:	40021800 	.word	0x40021800
 80006e4:	40021c00 	.word	0x40021c00
 80006e8:	40021400 	.word	0x40021400

080006ec <GPIO_Init>:
 80006ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80006ee:	4644      	mov	r4, r8
 80006f0:	465f      	mov	r7, fp
 80006f2:	4656      	mov	r6, sl
 80006f4:	464d      	mov	r5, r9
 80006f6:	b4f0      	push	{r4, r5, r6, r7}
 80006f8:	468c      	mov	ip, r1
 80006fa:	680f      	ldr	r7, [r1, #0]
 80006fc:	2103      	movs	r1, #3
 80006fe:	b083      	sub	sp, #12
 8000700:	2400      	movs	r4, #0
 8000702:	2300      	movs	r3, #0
 8000704:	2601      	movs	r6, #1
 8000706:	4688      	mov	r8, r1
 8000708:	e003      	b.n	8000712 <GPIO_Init+0x26>
 800070a:	3301      	adds	r3, #1
 800070c:	3402      	adds	r4, #2
 800070e:	2b10      	cmp	r3, #16
 8000710:	d026      	beq.n	8000760 <GPIO_Init+0x74>
 8000712:	1c32      	adds	r2, r6, #0
 8000714:	409a      	lsls	r2, r3
 8000716:	1c3d      	adds	r5, r7, #0
 8000718:	4015      	ands	r5, r2
 800071a:	4295      	cmp	r5, r2
 800071c:	d1f5      	bne.n	800070a <GPIO_Init+0x1e>
 800071e:	4642      	mov	r2, r8
 8000720:	6801      	ldr	r1, [r0, #0]
 8000722:	40a2      	lsls	r2, r4
 8000724:	43d2      	mvns	r2, r2
 8000726:	4011      	ands	r1, r2
 8000728:	6001      	str	r1, [r0, #0]
 800072a:	4661      	mov	r1, ip
 800072c:	7909      	ldrb	r1, [r1, #4]
 800072e:	4693      	mov	fp, r2
 8000730:	6802      	ldr	r2, [r0, #0]
 8000732:	9101      	str	r1, [sp, #4]
 8000734:	40a1      	lsls	r1, r4
 8000736:	4311      	orrs	r1, r2
 8000738:	6001      	str	r1, [r0, #0]
 800073a:	9901      	ldr	r1, [sp, #4]
 800073c:	3901      	subs	r1, #1
 800073e:	b2c9      	uxtb	r1, r1
 8000740:	2901      	cmp	r1, #1
 8000742:	d914      	bls.n	800076e <GPIO_Init+0x82>
 8000744:	68c1      	ldr	r1, [r0, #12]
 8000746:	465a      	mov	r2, fp
 8000748:	400a      	ands	r2, r1
 800074a:	4665      	mov	r5, ip
 800074c:	60c2      	str	r2, [r0, #12]
 800074e:	79ea      	ldrb	r2, [r5, #7]
 8000750:	68c1      	ldr	r1, [r0, #12]
 8000752:	40a2      	lsls	r2, r4
 8000754:	430a      	orrs	r2, r1
 8000756:	3301      	adds	r3, #1
 8000758:	60c2      	str	r2, [r0, #12]
 800075a:	3402      	adds	r4, #2
 800075c:	2b10      	cmp	r3, #16
 800075e:	d1d8      	bne.n	8000712 <GPIO_Init+0x26>
 8000760:	b003      	add	sp, #12
 8000762:	bc3c      	pop	{r2, r3, r4, r5}
 8000764:	4690      	mov	r8, r2
 8000766:	4699      	mov	r9, r3
 8000768:	46a2      	mov	sl, r4
 800076a:	46ab      	mov	fp, r5
 800076c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800076e:	6881      	ldr	r1, [r0, #8]
 8000770:	465a      	mov	r2, fp
 8000772:	4011      	ands	r1, r2
 8000774:	4662      	mov	r2, ip
 8000776:	6081      	str	r1, [r0, #8]
 8000778:	7952      	ldrb	r2, [r2, #5]
 800077a:	6881      	ldr	r1, [r0, #8]
 800077c:	40a2      	lsls	r2, r4
 800077e:	4311      	orrs	r1, r2
 8000780:	6081      	str	r1, [r0, #8]
 8000782:	6841      	ldr	r1, [r0, #4]
 8000784:	4662      	mov	r2, ip
 8000786:	b289      	uxth	r1, r1
 8000788:	43a9      	bics	r1, r5
 800078a:	8081      	strh	r1, [r0, #4]
 800078c:	7991      	ldrb	r1, [r2, #6]
 800078e:	6845      	ldr	r5, [r0, #4]
 8000790:	4099      	lsls	r1, r3
 8000792:	4329      	orrs	r1, r5
 8000794:	b289      	uxth	r1, r1
 8000796:	8081      	strh	r1, [r0, #4]
 8000798:	e7d4      	b.n	8000744 <GPIO_Init+0x58>
 800079a:	46c0      	nop			; (mov r8, r8)

0800079c <GPIO_StructInit>:
 800079c:	4b03      	ldr	r3, [pc, #12]	; (80007ac <GPIO_StructInit+0x10>)
 800079e:	6003      	str	r3, [r0, #0]
 80007a0:	2300      	movs	r3, #0
 80007a2:	7103      	strb	r3, [r0, #4]
 80007a4:	7143      	strb	r3, [r0, #5]
 80007a6:	7183      	strb	r3, [r0, #6]
 80007a8:	71c3      	strb	r3, [r0, #7]
 80007aa:	4770      	bx	lr
 80007ac:	0000ffff 	.word	0x0000ffff

080007b0 <GPIO_PinLockConfig>:
 80007b0:	2380      	movs	r3, #128	; 0x80
 80007b2:	b082      	sub	sp, #8
 80007b4:	025b      	lsls	r3, r3, #9
 80007b6:	9301      	str	r3, [sp, #4]
 80007b8:	9b01      	ldr	r3, [sp, #4]
 80007ba:	430b      	orrs	r3, r1
 80007bc:	9301      	str	r3, [sp, #4]
 80007be:	9b01      	ldr	r3, [sp, #4]
 80007c0:	61c3      	str	r3, [r0, #28]
 80007c2:	61c1      	str	r1, [r0, #28]
 80007c4:	9b01      	ldr	r3, [sp, #4]
 80007c6:	61c3      	str	r3, [r0, #28]
 80007c8:	69c3      	ldr	r3, [r0, #28]
 80007ca:	9301      	str	r3, [sp, #4]
 80007cc:	69c3      	ldr	r3, [r0, #28]
 80007ce:	9301      	str	r3, [sp, #4]
 80007d0:	b002      	add	sp, #8
 80007d2:	4770      	bx	lr

080007d4 <GPIO_ReadInputDataBit>:
 80007d4:	6900      	ldr	r0, [r0, #16]
 80007d6:	4008      	ands	r0, r1
 80007d8:	1e43      	subs	r3, r0, #1
 80007da:	4198      	sbcs	r0, r3
 80007dc:	b2c0      	uxtb	r0, r0
 80007de:	4770      	bx	lr

080007e0 <GPIO_ReadInputData>:
 80007e0:	6900      	ldr	r0, [r0, #16]
 80007e2:	b280      	uxth	r0, r0
 80007e4:	4770      	bx	lr
 80007e6:	46c0      	nop			; (mov r8, r8)

080007e8 <GPIO_ReadOutputDataBit>:
 80007e8:	6940      	ldr	r0, [r0, #20]
 80007ea:	4008      	ands	r0, r1
 80007ec:	1e43      	subs	r3, r0, #1
 80007ee:	4198      	sbcs	r0, r3
 80007f0:	b2c0      	uxtb	r0, r0
 80007f2:	4770      	bx	lr

080007f4 <GPIO_ReadOutputData>:
 80007f4:	6940      	ldr	r0, [r0, #20]
 80007f6:	b280      	uxth	r0, r0
 80007f8:	4770      	bx	lr
 80007fa:	46c0      	nop			; (mov r8, r8)

080007fc <GPIO_SetBits>:
 80007fc:	8301      	strh	r1, [r0, #24]
 80007fe:	4770      	bx	lr

08000800 <GPIO_ResetBits>:
 8000800:	8341      	strh	r1, [r0, #26]
 8000802:	4770      	bx	lr

08000804 <GPIO_WriteBit>:
 8000804:	2a00      	cmp	r2, #0
 8000806:	d101      	bne.n	800080c <GPIO_WriteBit+0x8>
 8000808:	8341      	strh	r1, [r0, #26]
 800080a:	4770      	bx	lr
 800080c:	8301      	strh	r1, [r0, #24]
 800080e:	e7fc      	b.n	800080a <GPIO_WriteBit+0x6>

08000810 <GPIO_Write>:
 8000810:	8281      	strh	r1, [r0, #20]
 8000812:	4770      	bx	lr

08000814 <GPIO_ToggleBits>:
 8000814:	6943      	ldr	r3, [r0, #20]
 8000816:	b29b      	uxth	r3, r3
 8000818:	4059      	eors	r1, r3
 800081a:	8281      	strh	r1, [r0, #20]
 800081c:	4770      	bx	lr
 800081e:	46c0      	nop			; (mov r8, r8)

08000820 <GPIO_PinAFConfig>:
 8000820:	2307      	movs	r3, #7
 8000822:	400b      	ands	r3, r1
 8000824:	08c9      	lsrs	r1, r1, #3
 8000826:	0089      	lsls	r1, r1, #2
 8000828:	1840      	adds	r0, r0, r1
 800082a:	b510      	push	{r4, lr}
 800082c:	6a01      	ldr	r1, [r0, #32]
 800082e:	009b      	lsls	r3, r3, #2
 8000830:	240f      	movs	r4, #15
 8000832:	409c      	lsls	r4, r3
 8000834:	43a1      	bics	r1, r4
 8000836:	6201      	str	r1, [r0, #32]
 8000838:	6a01      	ldr	r1, [r0, #32]
 800083a:	409a      	lsls	r2, r3
 800083c:	1c13      	adds	r3, r2, #0
 800083e:	430b      	orrs	r3, r1
 8000840:	6203      	str	r3, [r0, #32]
 8000842:	bd10      	pop	{r4, pc}

08000844 <NVIC_PriorityGroupConfig>:
 8000844:	4b02      	ldr	r3, [pc, #8]	; (8000850 <NVIC_PriorityGroupConfig+0xc>)
 8000846:	4318      	orrs	r0, r3
 8000848:	4b02      	ldr	r3, [pc, #8]	; (8000854 <NVIC_PriorityGroupConfig+0x10>)
 800084a:	60d8      	str	r0, [r3, #12]
 800084c:	4770      	bx	lr
 800084e:	46c0      	nop			; (mov r8, r8)
 8000850:	05fa0000 	.word	0x05fa0000
 8000854:	e000ed00 	.word	0xe000ed00

08000858 <NVIC_Init>:
 8000858:	78c3      	ldrb	r3, [r0, #3]
 800085a:	2b00      	cmp	r3, #0
 800085c:	d10b      	bne.n	8000876 <NVIC_Init+0x1e>
 800085e:	7803      	ldrb	r3, [r0, #0]
 8000860:	221f      	movs	r2, #31
 8000862:	0959      	lsrs	r1, r3, #5
 8000864:	4013      	ands	r3, r2
 8000866:	2201      	movs	r2, #1
 8000868:	409a      	lsls	r2, r3
 800086a:	1c13      	adds	r3, r2, #0
 800086c:	3120      	adds	r1, #32
 800086e:	4a13      	ldr	r2, [pc, #76]	; (80008bc <NVIC_Init+0x64>)
 8000870:	0089      	lsls	r1, r1, #2
 8000872:	508b      	str	r3, [r1, r2]
 8000874:	4770      	bx	lr
 8000876:	4b12      	ldr	r3, [pc, #72]	; (80008c0 <NVIC_Init+0x68>)
 8000878:	2104      	movs	r1, #4
 800087a:	68da      	ldr	r2, [r3, #12]
 800087c:	23e0      	movs	r3, #224	; 0xe0
 800087e:	00db      	lsls	r3, r3, #3
 8000880:	4393      	bics	r3, r2
 8000882:	0a1b      	lsrs	r3, r3, #8
 8000884:	7842      	ldrb	r2, [r0, #1]
 8000886:	1ac9      	subs	r1, r1, r3
 8000888:	b2c9      	uxtb	r1, r1
 800088a:	408a      	lsls	r2, r1
 800088c:	b2d1      	uxtb	r1, r2
 800088e:	220f      	movs	r2, #15
 8000890:	411a      	asrs	r2, r3
 8000892:	1c13      	adds	r3, r2, #0
 8000894:	7882      	ldrb	r2, [r0, #2]
 8000896:	401a      	ands	r2, r3
 8000898:	430a      	orrs	r2, r1
 800089a:	7803      	ldrb	r3, [r0, #0]
 800089c:	4909      	ldr	r1, [pc, #36]	; (80008c4 <NVIC_Init+0x6c>)
 800089e:	0112      	lsls	r2, r2, #4
 80008a0:	185b      	adds	r3, r3, r1
 80008a2:	b2d2      	uxtb	r2, r2
 80008a4:	701a      	strb	r2, [r3, #0]
 80008a6:	7803      	ldrb	r3, [r0, #0]
 80008a8:	221f      	movs	r2, #31
 80008aa:	0959      	lsrs	r1, r3, #5
 80008ac:	4013      	ands	r3, r2
 80008ae:	2201      	movs	r2, #1
 80008b0:	409a      	lsls	r2, r3
 80008b2:	1c13      	adds	r3, r2, #0
 80008b4:	4a01      	ldr	r2, [pc, #4]	; (80008bc <NVIC_Init+0x64>)
 80008b6:	0089      	lsls	r1, r1, #2
 80008b8:	508b      	str	r3, [r1, r2]
 80008ba:	e7db      	b.n	8000874 <NVIC_Init+0x1c>
 80008bc:	e000e100 	.word	0xe000e100
 80008c0:	e000ed00 	.word	0xe000ed00
 80008c4:	e000e400 	.word	0xe000e400

080008c8 <NVIC_SetVectorTable>:
 80008c8:	4b02      	ldr	r3, [pc, #8]	; (80008d4 <NVIC_SetVectorTable+0xc>)
 80008ca:	4019      	ands	r1, r3
 80008cc:	4b02      	ldr	r3, [pc, #8]	; (80008d8 <NVIC_SetVectorTable+0x10>)
 80008ce:	4308      	orrs	r0, r1
 80008d0:	6098      	str	r0, [r3, #8]
 80008d2:	4770      	bx	lr
 80008d4:	1fffff80 	.word	0x1fffff80
 80008d8:	e000ed00 	.word	0xe000ed00

080008dc <NVIC_SystemLPConfig>:
 80008dc:	4b04      	ldr	r3, [pc, #16]	; (80008f0 <NVIC_SystemLPConfig+0x14>)
 80008de:	691a      	ldr	r2, [r3, #16]
 80008e0:	2900      	cmp	r1, #0
 80008e2:	d102      	bne.n	80008ea <NVIC_SystemLPConfig+0xe>
 80008e4:	4382      	bics	r2, r0
 80008e6:	611a      	str	r2, [r3, #16]
 80008e8:	4770      	bx	lr
 80008ea:	4310      	orrs	r0, r2
 80008ec:	6118      	str	r0, [r3, #16]
 80008ee:	e7fb      	b.n	80008e8 <NVIC_SystemLPConfig+0xc>
 80008f0:	e000ed00 	.word	0xe000ed00

080008f4 <SysTick_CLKSourceConfig>:
 80008f4:	4b05      	ldr	r3, [pc, #20]	; (800090c <SysTick_CLKSourceConfig+0x18>)
 80008f6:	681a      	ldr	r2, [r3, #0]
 80008f8:	2804      	cmp	r0, #4
 80008fa:	d003      	beq.n	8000904 <SysTick_CLKSourceConfig+0x10>
 80008fc:	2104      	movs	r1, #4
 80008fe:	438a      	bics	r2, r1
 8000900:	601a      	str	r2, [r3, #0]
 8000902:	4770      	bx	lr
 8000904:	4310      	orrs	r0, r2
 8000906:	6018      	str	r0, [r3, #0]
 8000908:	e7fb      	b.n	8000902 <SysTick_CLKSourceConfig+0xe>
 800090a:	46c0      	nop			; (mov r8, r8)
 800090c:	e000e010 	.word	0xe000e010

08000910 <RCC_DeInit>:
 8000910:	4b0c      	ldr	r3, [pc, #48]	; (8000944 <RCC_DeInit+0x34>)
 8000912:	2280      	movs	r2, #128	; 0x80
 8000914:	6819      	ldr	r1, [r3, #0]
 8000916:	0052      	lsls	r2, r2, #1
 8000918:	430a      	orrs	r2, r1
 800091a:	601a      	str	r2, [r3, #0]
 800091c:	6899      	ldr	r1, [r3, #8]
 800091e:	4a0a      	ldr	r2, [pc, #40]	; (8000948 <RCC_DeInit+0x38>)
 8000920:	400a      	ands	r2, r1
 8000922:	609a      	str	r2, [r3, #8]
 8000924:	6819      	ldr	r1, [r3, #0]
 8000926:	4a09      	ldr	r2, [pc, #36]	; (800094c <RCC_DeInit+0x3c>)
 8000928:	400a      	ands	r2, r1
 800092a:	601a      	str	r2, [r3, #0]
 800092c:	6819      	ldr	r1, [r3, #0]
 800092e:	4a08      	ldr	r2, [pc, #32]	; (8000950 <RCC_DeInit+0x40>)
 8000930:	400a      	ands	r2, r1
 8000932:	601a      	str	r2, [r3, #0]
 8000934:	6899      	ldr	r1, [r3, #8]
 8000936:	4a07      	ldr	r2, [pc, #28]	; (8000954 <RCC_DeInit+0x44>)
 8000938:	400a      	ands	r2, r1
 800093a:	609a      	str	r2, [r3, #8]
 800093c:	2200      	movs	r2, #0
 800093e:	60da      	str	r2, [r3, #12]
 8000940:	4770      	bx	lr
 8000942:	46c0      	nop			; (mov r8, r8)
 8000944:	40023800 	.word	0x40023800
 8000948:	88ffc00c 	.word	0x88ffc00c
 800094c:	eefefffe 	.word	0xeefefffe
 8000950:	fffbffff 	.word	0xfffbffff
 8000954:	ff02ffff 	.word	0xff02ffff

08000958 <RCC_HSEConfig>:
 8000958:	4b02      	ldr	r3, [pc, #8]	; (8000964 <RCC_HSEConfig+0xc>)
 800095a:	2200      	movs	r2, #0
 800095c:	701a      	strb	r2, [r3, #0]
 800095e:	7018      	strb	r0, [r3, #0]
 8000960:	4770      	bx	lr
 8000962:	46c0      	nop			; (mov r8, r8)
 8000964:	40023802 	.word	0x40023802

08000968 <RCC_WaitForHSEStartUp>:
 8000968:	2300      	movs	r3, #0
 800096a:	b082      	sub	sp, #8
 800096c:	9301      	str	r3, [sp, #4]
 800096e:	2280      	movs	r2, #128	; 0x80
 8000970:	23a0      	movs	r3, #160	; 0xa0
 8000972:	490b      	ldr	r1, [pc, #44]	; (80009a0 <RCC_WaitForHSEStartUp+0x38>)
 8000974:	0292      	lsls	r2, r2, #10
 8000976:	00d8      	lsls	r0, r3, #3
 8000978:	680b      	ldr	r3, [r1, #0]
 800097a:	4213      	tst	r3, r2
 800097c:	d10b      	bne.n	8000996 <RCC_WaitForHSEStartUp+0x2e>
 800097e:	9b01      	ldr	r3, [sp, #4]
 8000980:	3301      	adds	r3, #1
 8000982:	9301      	str	r3, [sp, #4]
 8000984:	9b01      	ldr	r3, [sp, #4]
 8000986:	4283      	cmp	r3, r0
 8000988:	d1f6      	bne.n	8000978 <RCC_WaitForHSEStartUp+0x10>
 800098a:	4b05      	ldr	r3, [pc, #20]	; (80009a0 <RCC_WaitForHSEStartUp+0x38>)
 800098c:	6818      	ldr	r0, [r3, #0]
 800098e:	0380      	lsls	r0, r0, #14
 8000990:	0fc0      	lsrs	r0, r0, #31
 8000992:	b002      	add	sp, #8
 8000994:	4770      	bx	lr
 8000996:	9b01      	ldr	r3, [sp, #4]
 8000998:	3301      	adds	r3, #1
 800099a:	9301      	str	r3, [sp, #4]
 800099c:	9b01      	ldr	r3, [sp, #4]
 800099e:	e7f4      	b.n	800098a <RCC_WaitForHSEStartUp+0x22>
 80009a0:	40023800 	.word	0x40023800

080009a4 <RCC_AdjustMSICalibrationValue>:
 80009a4:	4b01      	ldr	r3, [pc, #4]	; (80009ac <RCC_AdjustMSICalibrationValue+0x8>)
 80009a6:	7018      	strb	r0, [r3, #0]
 80009a8:	4770      	bx	lr
 80009aa:	46c0      	nop			; (mov r8, r8)
 80009ac:	40023807 	.word	0x40023807

080009b0 <RCC_MSIRangeConfig>:
 80009b0:	4b03      	ldr	r3, [pc, #12]	; (80009c0 <RCC_MSIRangeConfig+0x10>)
 80009b2:	4a04      	ldr	r2, [pc, #16]	; (80009c4 <RCC_MSIRangeConfig+0x14>)
 80009b4:	6859      	ldr	r1, [r3, #4]
 80009b6:	400a      	ands	r2, r1
 80009b8:	4310      	orrs	r0, r2
 80009ba:	6058      	str	r0, [r3, #4]
 80009bc:	4770      	bx	lr
 80009be:	46c0      	nop			; (mov r8, r8)
 80009c0:	40023800 	.word	0x40023800
 80009c4:	ffff1fff 	.word	0xffff1fff

080009c8 <RCC_MSICmd>:
 80009c8:	4b01      	ldr	r3, [pc, #4]	; (80009d0 <RCC_MSICmd+0x8>)
 80009ca:	6018      	str	r0, [r3, #0]
 80009cc:	4770      	bx	lr
 80009ce:	46c0      	nop			; (mov r8, r8)
 80009d0:	42470020 	.word	0x42470020

080009d4 <RCC_AdjustHSICalibrationValue>:
 80009d4:	4b03      	ldr	r3, [pc, #12]	; (80009e4 <RCC_AdjustHSICalibrationValue+0x10>)
 80009d6:	4a04      	ldr	r2, [pc, #16]	; (80009e8 <RCC_AdjustHSICalibrationValue+0x14>)
 80009d8:	6859      	ldr	r1, [r3, #4]
 80009da:	0200      	lsls	r0, r0, #8
 80009dc:	400a      	ands	r2, r1
 80009de:	4310      	orrs	r0, r2
 80009e0:	6058      	str	r0, [r3, #4]
 80009e2:	4770      	bx	lr
 80009e4:	40023800 	.word	0x40023800
 80009e8:	ffffe0ff 	.word	0xffffe0ff

080009ec <RCC_HSICmd>:
 80009ec:	4b01      	ldr	r3, [pc, #4]	; (80009f4 <RCC_HSICmd+0x8>)
 80009ee:	6018      	str	r0, [r3, #0]
 80009f0:	4770      	bx	lr
 80009f2:	46c0      	nop			; (mov r8, r8)
 80009f4:	42470000 	.word	0x42470000

080009f8 <RCC_LSEConfig>:
 80009f8:	4b02      	ldr	r3, [pc, #8]	; (8000a04 <RCC_LSEConfig+0xc>)
 80009fa:	2200      	movs	r2, #0
 80009fc:	701a      	strb	r2, [r3, #0]
 80009fe:	7018      	strb	r0, [r3, #0]
 8000a00:	4770      	bx	lr
 8000a02:	46c0      	nop			; (mov r8, r8)
 8000a04:	40023835 	.word	0x40023835

08000a08 <RCC_LSICmd>:
 8000a08:	4b01      	ldr	r3, [pc, #4]	; (8000a10 <RCC_LSICmd+0x8>)
 8000a0a:	6018      	str	r0, [r3, #0]
 8000a0c:	4770      	bx	lr
 8000a0e:	46c0      	nop			; (mov r8, r8)
 8000a10:	42470680 	.word	0x42470680

08000a14 <RCC_PLLConfig>:
 8000a14:	4310      	orrs	r0, r2
 8000a16:	4b02      	ldr	r3, [pc, #8]	; (8000a20 <RCC_PLLConfig+0xc>)
 8000a18:	4301      	orrs	r1, r0
 8000a1a:	7019      	strb	r1, [r3, #0]
 8000a1c:	4770      	bx	lr
 8000a1e:	46c0      	nop			; (mov r8, r8)
 8000a20:	4002380a 	.word	0x4002380a

08000a24 <RCC_PLLCmd>:
 8000a24:	4b01      	ldr	r3, [pc, #4]	; (8000a2c <RCC_PLLCmd+0x8>)
 8000a26:	6018      	str	r0, [r3, #0]
 8000a28:	4770      	bx	lr
 8000a2a:	46c0      	nop			; (mov r8, r8)
 8000a2c:	42470060 	.word	0x42470060

08000a30 <RCC_ClockSecuritySystemCmd>:
 8000a30:	4b01      	ldr	r3, [pc, #4]	; (8000a38 <RCC_ClockSecuritySystemCmd+0x8>)
 8000a32:	6018      	str	r0, [r3, #0]
 8000a34:	4770      	bx	lr
 8000a36:	46c0      	nop			; (mov r8, r8)
 8000a38:	42470070 	.word	0x42470070

08000a3c <RCC_LSEClockSecuritySystemCmd>:
 8000a3c:	4b01      	ldr	r3, [pc, #4]	; (8000a44 <RCC_LSEClockSecuritySystemCmd+0x8>)
 8000a3e:	6018      	str	r0, [r3, #0]
 8000a40:	4770      	bx	lr
 8000a42:	46c0      	nop			; (mov r8, r8)
 8000a44:	424706ac 	.word	0x424706ac

08000a48 <RCC_MCOConfig>:
 8000a48:	4b01      	ldr	r3, [pc, #4]	; (8000a50 <RCC_MCOConfig+0x8>)
 8000a4a:	4308      	orrs	r0, r1
 8000a4c:	7018      	strb	r0, [r3, #0]
 8000a4e:	4770      	bx	lr
 8000a50:	4002380b 	.word	0x4002380b

08000a54 <RCC_SYSCLKConfig>:
 8000a54:	4b03      	ldr	r3, [pc, #12]	; (8000a64 <RCC_SYSCLKConfig+0x10>)
 8000a56:	2103      	movs	r1, #3
 8000a58:	689a      	ldr	r2, [r3, #8]
 8000a5a:	438a      	bics	r2, r1
 8000a5c:	4310      	orrs	r0, r2
 8000a5e:	6098      	str	r0, [r3, #8]
 8000a60:	4770      	bx	lr
 8000a62:	46c0      	nop			; (mov r8, r8)
 8000a64:	40023800 	.word	0x40023800

08000a68 <RCC_GetSYSCLKSource>:
 8000a68:	4b02      	ldr	r3, [pc, #8]	; (8000a74 <RCC_GetSYSCLKSource+0xc>)
 8000a6a:	200c      	movs	r0, #12
 8000a6c:	689b      	ldr	r3, [r3, #8]
 8000a6e:	4018      	ands	r0, r3
 8000a70:	4770      	bx	lr
 8000a72:	46c0      	nop			; (mov r8, r8)
 8000a74:	40023800 	.word	0x40023800

08000a78 <RCC_HCLKConfig>:
 8000a78:	4b03      	ldr	r3, [pc, #12]	; (8000a88 <RCC_HCLKConfig+0x10>)
 8000a7a:	21f0      	movs	r1, #240	; 0xf0
 8000a7c:	689a      	ldr	r2, [r3, #8]
 8000a7e:	438a      	bics	r2, r1
 8000a80:	4310      	orrs	r0, r2
 8000a82:	6098      	str	r0, [r3, #8]
 8000a84:	4770      	bx	lr
 8000a86:	46c0      	nop			; (mov r8, r8)
 8000a88:	40023800 	.word	0x40023800

08000a8c <RCC_PCLK1Config>:
 8000a8c:	4b03      	ldr	r3, [pc, #12]	; (8000a9c <RCC_PCLK1Config+0x10>)
 8000a8e:	4a04      	ldr	r2, [pc, #16]	; (8000aa0 <RCC_PCLK1Config+0x14>)
 8000a90:	6899      	ldr	r1, [r3, #8]
 8000a92:	400a      	ands	r2, r1
 8000a94:	4310      	orrs	r0, r2
 8000a96:	6098      	str	r0, [r3, #8]
 8000a98:	4770      	bx	lr
 8000a9a:	46c0      	nop			; (mov r8, r8)
 8000a9c:	40023800 	.word	0x40023800
 8000aa0:	fffff8ff 	.word	0xfffff8ff

08000aa4 <RCC_PCLK2Config>:
 8000aa4:	4b03      	ldr	r3, [pc, #12]	; (8000ab4 <RCC_PCLK2Config+0x10>)
 8000aa6:	4a04      	ldr	r2, [pc, #16]	; (8000ab8 <RCC_PCLK2Config+0x14>)
 8000aa8:	6899      	ldr	r1, [r3, #8]
 8000aaa:	00c0      	lsls	r0, r0, #3
 8000aac:	400a      	ands	r2, r1
 8000aae:	4310      	orrs	r0, r2
 8000ab0:	6098      	str	r0, [r3, #8]
 8000ab2:	4770      	bx	lr
 8000ab4:	40023800 	.word	0x40023800
 8000ab8:	ffffc7ff 	.word	0xffffc7ff

08000abc <RCC_GetClocksFreq>:
 8000abc:	4a29      	ldr	r2, [pc, #164]	; (8000b64 <RCC_GetClocksFreq+0xa8>)
 8000abe:	b538      	push	{r3, r4, r5, lr}
 8000ac0:	6893      	ldr	r3, [r2, #8]
 8000ac2:	210c      	movs	r1, #12
 8000ac4:	1c04      	adds	r4, r0, #0
 8000ac6:	400b      	ands	r3, r1
 8000ac8:	2b04      	cmp	r3, #4
 8000aca:	d041      	beq.n	8000b50 <RCC_GetClocksFreq+0x94>
 8000acc:	d931      	bls.n	8000b32 <RCC_GetClocksFreq+0x76>
 8000ace:	2b08      	cmp	r3, #8
 8000ad0:	d014      	beq.n	8000afc <RCC_GetClocksFreq+0x40>
 8000ad2:	2b0c      	cmp	r3, #12
 8000ad4:	d139      	bne.n	8000b4a <RCC_GetClocksFreq+0x8e>
 8000ad6:	6893      	ldr	r3, [r2, #8]
 8000ad8:	4d23      	ldr	r5, [pc, #140]	; (8000b68 <RCC_GetClocksFreq+0xac>)
 8000ada:	6891      	ldr	r1, [r2, #8]
 8000adc:	029b      	lsls	r3, r3, #10
 8000ade:	0f1b      	lsrs	r3, r3, #28
 8000ae0:	5ceb      	ldrb	r3, [r5, r3]
 8000ae2:	0209      	lsls	r1, r1, #8
 8000ae4:	6892      	ldr	r2, [r2, #8]
 8000ae6:	0f89      	lsrs	r1, r1, #30
 8000ae8:	b2db      	uxtb	r3, r3
 8000aea:	3101      	adds	r1, #1
 8000aec:	03d0      	lsls	r0, r2, #15
 8000aee:	d433      	bmi.n	8000b58 <RCC_GetClocksFreq+0x9c>
 8000af0:	481e      	ldr	r0, [pc, #120]	; (8000b6c <RCC_GetClocksFreq+0xb0>)
 8000af2:	4358      	muls	r0, r3
 8000af4:	f000 ffde 	bl	8001ab4 <__aeabi_uidiv>
 8000af8:	6020      	str	r0, [r4, #0]
 8000afa:	e002      	b.n	8000b02 <RCC_GetClocksFreq+0x46>
 8000afc:	481c      	ldr	r0, [pc, #112]	; (8000b70 <RCC_GetClocksFreq+0xb4>)
 8000afe:	4d1a      	ldr	r5, [pc, #104]	; (8000b68 <RCC_GetClocksFreq+0xac>)
 8000b00:	6020      	str	r0, [r4, #0]
 8000b02:	4b18      	ldr	r3, [pc, #96]	; (8000b64 <RCC_GetClocksFreq+0xa8>)
 8000b04:	689a      	ldr	r2, [r3, #8]
 8000b06:	0612      	lsls	r2, r2, #24
 8000b08:	0f12      	lsrs	r2, r2, #28
 8000b0a:	18aa      	adds	r2, r5, r2
 8000b0c:	7b12      	ldrb	r2, [r2, #12]
 8000b0e:	40d0      	lsrs	r0, r2
 8000b10:	6060      	str	r0, [r4, #4]
 8000b12:	689a      	ldr	r2, [r3, #8]
 8000b14:	1c01      	adds	r1, r0, #0
 8000b16:	0552      	lsls	r2, r2, #21
 8000b18:	0f52      	lsrs	r2, r2, #29
 8000b1a:	18aa      	adds	r2, r5, r2
 8000b1c:	7b12      	ldrb	r2, [r2, #12]
 8000b1e:	40d1      	lsrs	r1, r2
 8000b20:	60a1      	str	r1, [r4, #8]
 8000b22:	689b      	ldr	r3, [r3, #8]
 8000b24:	049b      	lsls	r3, r3, #18
 8000b26:	0f5b      	lsrs	r3, r3, #29
 8000b28:	18ed      	adds	r5, r5, r3
 8000b2a:	7b2b      	ldrb	r3, [r5, #12]
 8000b2c:	40d8      	lsrs	r0, r3
 8000b2e:	60e0      	str	r0, [r4, #12]
 8000b30:	bd38      	pop	{r3, r4, r5, pc}
 8000b32:	2b00      	cmp	r3, #0
 8000b34:	d109      	bne.n	8000b4a <RCC_GetClocksFreq+0x8e>
 8000b36:	6853      	ldr	r3, [r2, #4]
 8000b38:	041b      	lsls	r3, r3, #16
 8000b3a:	0f5b      	lsrs	r3, r3, #29
 8000b3c:	2080      	movs	r0, #128	; 0x80
 8000b3e:	3301      	adds	r3, #1
 8000b40:	0200      	lsls	r0, r0, #8
 8000b42:	4098      	lsls	r0, r3
 8000b44:	6020      	str	r0, [r4, #0]
 8000b46:	4d08      	ldr	r5, [pc, #32]	; (8000b68 <RCC_GetClocksFreq+0xac>)
 8000b48:	e7db      	b.n	8000b02 <RCC_GetClocksFreq+0x46>
 8000b4a:	4b06      	ldr	r3, [pc, #24]	; (8000b64 <RCC_GetClocksFreq+0xa8>)
 8000b4c:	685b      	ldr	r3, [r3, #4]
 8000b4e:	e7f3      	b.n	8000b38 <RCC_GetClocksFreq+0x7c>
 8000b50:	4806      	ldr	r0, [pc, #24]	; (8000b6c <RCC_GetClocksFreq+0xb0>)
 8000b52:	4d05      	ldr	r5, [pc, #20]	; (8000b68 <RCC_GetClocksFreq+0xac>)
 8000b54:	6020      	str	r0, [r4, #0]
 8000b56:	e7d4      	b.n	8000b02 <RCC_GetClocksFreq+0x46>
 8000b58:	4805      	ldr	r0, [pc, #20]	; (8000b70 <RCC_GetClocksFreq+0xb4>)
 8000b5a:	4358      	muls	r0, r3
 8000b5c:	f000 ffaa 	bl	8001ab4 <__aeabi_uidiv>
 8000b60:	6020      	str	r0, [r4, #0]
 8000b62:	e7ce      	b.n	8000b02 <RCC_GetClocksFreq+0x46>
 8000b64:	40023800 	.word	0x40023800
 8000b68:	20000000 	.word	0x20000000
 8000b6c:	00f42400 	.word	0x00f42400
 8000b70:	007a1200 	.word	0x007a1200

08000b74 <RCC_RTCCLKConfig>:
 8000b74:	23c0      	movs	r3, #192	; 0xc0
 8000b76:	029b      	lsls	r3, r3, #10
 8000b78:	1c02      	adds	r2, r0, #0
 8000b7a:	b510      	push	{r4, lr}
 8000b7c:	401a      	ands	r2, r3
 8000b7e:	429a      	cmp	r2, r3
 8000b80:	d108      	bne.n	8000b94 <RCC_RTCCLKConfig+0x20>
 8000b82:	4b09      	ldr	r3, [pc, #36]	; (8000ba8 <RCC_RTCCLKConfig+0x34>)
 8000b84:	4909      	ldr	r1, [pc, #36]	; (8000bac <RCC_RTCCLKConfig+0x38>)
 8000b86:	681c      	ldr	r4, [r3, #0]
 8000b88:	4021      	ands	r1, r4
 8000b8a:	24c0      	movs	r4, #192	; 0xc0
 8000b8c:	05e4      	lsls	r4, r4, #23
 8000b8e:	4020      	ands	r0, r4
 8000b90:	4308      	orrs	r0, r1
 8000b92:	6018      	str	r0, [r3, #0]
 8000b94:	4b04      	ldr	r3, [pc, #16]	; (8000ba8 <RCC_RTCCLKConfig+0x34>)
 8000b96:	4906      	ldr	r1, [pc, #24]	; (8000bb0 <RCC_RTCCLKConfig+0x3c>)
 8000b98:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8000b9a:	4001      	ands	r1, r0
 8000b9c:	6359      	str	r1, [r3, #52]	; 0x34
 8000b9e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8000ba0:	430a      	orrs	r2, r1
 8000ba2:	635a      	str	r2, [r3, #52]	; 0x34
 8000ba4:	bd10      	pop	{r4, pc}
 8000ba6:	46c0      	nop			; (mov r8, r8)
 8000ba8:	40023800 	.word	0x40023800
 8000bac:	9fffffff 	.word	0x9fffffff
 8000bb0:	fffcffff 	.word	0xfffcffff

08000bb4 <RCC_RTCCLKCmd>:
 8000bb4:	4b01      	ldr	r3, [pc, #4]	; (8000bbc <RCC_RTCCLKCmd+0x8>)
 8000bb6:	6018      	str	r0, [r3, #0]
 8000bb8:	4770      	bx	lr
 8000bba:	46c0      	nop			; (mov r8, r8)
 8000bbc:	424706d8 	.word	0x424706d8

08000bc0 <RCC_RTCResetCmd>:
 8000bc0:	4b01      	ldr	r3, [pc, #4]	; (8000bc8 <RCC_RTCResetCmd+0x8>)
 8000bc2:	6018      	str	r0, [r3, #0]
 8000bc4:	4770      	bx	lr
 8000bc6:	46c0      	nop			; (mov r8, r8)
 8000bc8:	424706dc 	.word	0x424706dc

08000bcc <RCC_AHBPeriphClockCmd>:
 8000bcc:	4b04      	ldr	r3, [pc, #16]	; (8000be0 <RCC_AHBPeriphClockCmd+0x14>)
 8000bce:	69da      	ldr	r2, [r3, #28]
 8000bd0:	2900      	cmp	r1, #0
 8000bd2:	d102      	bne.n	8000bda <RCC_AHBPeriphClockCmd+0xe>
 8000bd4:	4382      	bics	r2, r0
 8000bd6:	61da      	str	r2, [r3, #28]
 8000bd8:	4770      	bx	lr
 8000bda:	4310      	orrs	r0, r2
 8000bdc:	61d8      	str	r0, [r3, #28]
 8000bde:	e7fb      	b.n	8000bd8 <RCC_AHBPeriphClockCmd+0xc>
 8000be0:	40023800 	.word	0x40023800

08000be4 <RCC_APB2PeriphClockCmd>:
 8000be4:	4b04      	ldr	r3, [pc, #16]	; (8000bf8 <RCC_APB2PeriphClockCmd+0x14>)
 8000be6:	6a1a      	ldr	r2, [r3, #32]
 8000be8:	2900      	cmp	r1, #0
 8000bea:	d102      	bne.n	8000bf2 <RCC_APB2PeriphClockCmd+0xe>
 8000bec:	4382      	bics	r2, r0
 8000bee:	621a      	str	r2, [r3, #32]
 8000bf0:	4770      	bx	lr
 8000bf2:	4310      	orrs	r0, r2
 8000bf4:	6218      	str	r0, [r3, #32]
 8000bf6:	e7fb      	b.n	8000bf0 <RCC_APB2PeriphClockCmd+0xc>
 8000bf8:	40023800 	.word	0x40023800

08000bfc <RCC_APB1PeriphClockCmd>:
 8000bfc:	4b04      	ldr	r3, [pc, #16]	; (8000c10 <RCC_APB1PeriphClockCmd+0x14>)
 8000bfe:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000c00:	2900      	cmp	r1, #0
 8000c02:	d102      	bne.n	8000c0a <RCC_APB1PeriphClockCmd+0xe>
 8000c04:	4382      	bics	r2, r0
 8000c06:	625a      	str	r2, [r3, #36]	; 0x24
 8000c08:	4770      	bx	lr
 8000c0a:	4310      	orrs	r0, r2
 8000c0c:	6258      	str	r0, [r3, #36]	; 0x24
 8000c0e:	e7fb      	b.n	8000c08 <RCC_APB1PeriphClockCmd+0xc>
 8000c10:	40023800 	.word	0x40023800

08000c14 <RCC_AHBPeriphResetCmd>:
 8000c14:	4b04      	ldr	r3, [pc, #16]	; (8000c28 <RCC_AHBPeriphResetCmd+0x14>)
 8000c16:	691a      	ldr	r2, [r3, #16]
 8000c18:	2900      	cmp	r1, #0
 8000c1a:	d102      	bne.n	8000c22 <RCC_AHBPeriphResetCmd+0xe>
 8000c1c:	4382      	bics	r2, r0
 8000c1e:	611a      	str	r2, [r3, #16]
 8000c20:	4770      	bx	lr
 8000c22:	4310      	orrs	r0, r2
 8000c24:	6118      	str	r0, [r3, #16]
 8000c26:	e7fb      	b.n	8000c20 <RCC_AHBPeriphResetCmd+0xc>
 8000c28:	40023800 	.word	0x40023800

08000c2c <RCC_APB2PeriphResetCmd>:
 8000c2c:	4b04      	ldr	r3, [pc, #16]	; (8000c40 <RCC_APB2PeriphResetCmd+0x14>)
 8000c2e:	695a      	ldr	r2, [r3, #20]
 8000c30:	2900      	cmp	r1, #0
 8000c32:	d102      	bne.n	8000c3a <RCC_APB2PeriphResetCmd+0xe>
 8000c34:	4382      	bics	r2, r0
 8000c36:	615a      	str	r2, [r3, #20]
 8000c38:	4770      	bx	lr
 8000c3a:	4310      	orrs	r0, r2
 8000c3c:	6158      	str	r0, [r3, #20]
 8000c3e:	e7fb      	b.n	8000c38 <RCC_APB2PeriphResetCmd+0xc>
 8000c40:	40023800 	.word	0x40023800

08000c44 <RCC_APB1PeriphResetCmd>:
 8000c44:	4b04      	ldr	r3, [pc, #16]	; (8000c58 <RCC_APB1PeriphResetCmd+0x14>)
 8000c46:	699a      	ldr	r2, [r3, #24]
 8000c48:	2900      	cmp	r1, #0
 8000c4a:	d102      	bne.n	8000c52 <RCC_APB1PeriphResetCmd+0xe>
 8000c4c:	4382      	bics	r2, r0
 8000c4e:	619a      	str	r2, [r3, #24]
 8000c50:	4770      	bx	lr
 8000c52:	4310      	orrs	r0, r2
 8000c54:	6198      	str	r0, [r3, #24]
 8000c56:	e7fb      	b.n	8000c50 <RCC_APB1PeriphResetCmd+0xc>
 8000c58:	40023800 	.word	0x40023800

08000c5c <RCC_AHBPeriphClockLPModeCmd>:
 8000c5c:	4b04      	ldr	r3, [pc, #16]	; (8000c70 <RCC_AHBPeriphClockLPModeCmd+0x14>)
 8000c5e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8000c60:	2900      	cmp	r1, #0
 8000c62:	d102      	bne.n	8000c6a <RCC_AHBPeriphClockLPModeCmd+0xe>
 8000c64:	4382      	bics	r2, r0
 8000c66:	629a      	str	r2, [r3, #40]	; 0x28
 8000c68:	4770      	bx	lr
 8000c6a:	4310      	orrs	r0, r2
 8000c6c:	6298      	str	r0, [r3, #40]	; 0x28
 8000c6e:	e7fb      	b.n	8000c68 <RCC_AHBPeriphClockLPModeCmd+0xc>
 8000c70:	40023800 	.word	0x40023800

08000c74 <RCC_APB2PeriphClockLPModeCmd>:
 8000c74:	4b04      	ldr	r3, [pc, #16]	; (8000c88 <RCC_APB2PeriphClockLPModeCmd+0x14>)
 8000c76:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000c78:	2900      	cmp	r1, #0
 8000c7a:	d102      	bne.n	8000c82 <RCC_APB2PeriphClockLPModeCmd+0xe>
 8000c7c:	4382      	bics	r2, r0
 8000c7e:	62da      	str	r2, [r3, #44]	; 0x2c
 8000c80:	4770      	bx	lr
 8000c82:	4310      	orrs	r0, r2
 8000c84:	62d8      	str	r0, [r3, #44]	; 0x2c
 8000c86:	e7fb      	b.n	8000c80 <RCC_APB2PeriphClockLPModeCmd+0xc>
 8000c88:	40023800 	.word	0x40023800

08000c8c <RCC_APB1PeriphClockLPModeCmd>:
 8000c8c:	4b04      	ldr	r3, [pc, #16]	; (8000ca0 <RCC_APB1PeriphClockLPModeCmd+0x14>)
 8000c8e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000c90:	2900      	cmp	r1, #0
 8000c92:	d102      	bne.n	8000c9a <RCC_APB1PeriphClockLPModeCmd+0xe>
 8000c94:	4382      	bics	r2, r0
 8000c96:	631a      	str	r2, [r3, #48]	; 0x30
 8000c98:	4770      	bx	lr
 8000c9a:	4310      	orrs	r0, r2
 8000c9c:	6318      	str	r0, [r3, #48]	; 0x30
 8000c9e:	e7fb      	b.n	8000c98 <RCC_APB1PeriphClockLPModeCmd+0xc>
 8000ca0:	40023800 	.word	0x40023800

08000ca4 <RCC_ITConfig>:
 8000ca4:	4b04      	ldr	r3, [pc, #16]	; (8000cb8 <RCC_ITConfig+0x14>)
 8000ca6:	781a      	ldrb	r2, [r3, #0]
 8000ca8:	2900      	cmp	r1, #0
 8000caa:	d102      	bne.n	8000cb2 <RCC_ITConfig+0xe>
 8000cac:	4382      	bics	r2, r0
 8000cae:	701a      	strb	r2, [r3, #0]
 8000cb0:	4770      	bx	lr
 8000cb2:	4310      	orrs	r0, r2
 8000cb4:	7018      	strb	r0, [r3, #0]
 8000cb6:	e7fb      	b.n	8000cb0 <RCC_ITConfig+0xc>
 8000cb8:	4002380d 	.word	0x4002380d

08000cbc <RCC_GetFlagStatus>:
 8000cbc:	0943      	lsrs	r3, r0, #5
 8000cbe:	2b01      	cmp	r3, #1
 8000cc0:	d008      	beq.n	8000cd4 <RCC_GetFlagStatus+0x18>
 8000cc2:	4b06      	ldr	r3, [pc, #24]	; (8000cdc <RCC_GetFlagStatus+0x20>)
 8000cc4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000cc6:	221f      	movs	r2, #31
 8000cc8:	4010      	ands	r0, r2
 8000cca:	40c3      	lsrs	r3, r0
 8000ccc:	1c18      	adds	r0, r3, #0
 8000cce:	2301      	movs	r3, #1
 8000cd0:	4018      	ands	r0, r3
 8000cd2:	4770      	bx	lr
 8000cd4:	4b01      	ldr	r3, [pc, #4]	; (8000cdc <RCC_GetFlagStatus+0x20>)
 8000cd6:	681b      	ldr	r3, [r3, #0]
 8000cd8:	e7f5      	b.n	8000cc6 <RCC_GetFlagStatus+0xa>
 8000cda:	46c0      	nop			; (mov r8, r8)
 8000cdc:	40023800 	.word	0x40023800

08000ce0 <RCC_ClearFlag>:
 8000ce0:	4b03      	ldr	r3, [pc, #12]	; (8000cf0 <RCC_ClearFlag+0x10>)
 8000ce2:	2280      	movs	r2, #128	; 0x80
 8000ce4:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8000ce6:	0452      	lsls	r2, r2, #17
 8000ce8:	430a      	orrs	r2, r1
 8000cea:	635a      	str	r2, [r3, #52]	; 0x34
 8000cec:	4770      	bx	lr
 8000cee:	46c0      	nop			; (mov r8, r8)
 8000cf0:	40023800 	.word	0x40023800

08000cf4 <RCC_GetITStatus>:
 8000cf4:	4b03      	ldr	r3, [pc, #12]	; (8000d04 <RCC_GetITStatus+0x10>)
 8000cf6:	68db      	ldr	r3, [r3, #12]
 8000cf8:	4018      	ands	r0, r3
 8000cfa:	1e43      	subs	r3, r0, #1
 8000cfc:	4198      	sbcs	r0, r3
 8000cfe:	b2c0      	uxtb	r0, r0
 8000d00:	4770      	bx	lr
 8000d02:	46c0      	nop			; (mov r8, r8)
 8000d04:	40023800 	.word	0x40023800

08000d08 <RCC_ClearITPendingBit>:
 8000d08:	4b01      	ldr	r3, [pc, #4]	; (8000d10 <RCC_ClearITPendingBit+0x8>)
 8000d0a:	7018      	strb	r0, [r3, #0]
 8000d0c:	4770      	bx	lr
 8000d0e:	46c0      	nop			; (mov r8, r8)
 8000d10:	4002380e 	.word	0x4002380e

08000d14 <SYSCFG_DeInit>:
 8000d14:	b508      	push	{r3, lr}
 8000d16:	2001      	movs	r0, #1
 8000d18:	2101      	movs	r1, #1
 8000d1a:	f7ff ff87 	bl	8000c2c <RCC_APB2PeriphResetCmd>
 8000d1e:	2001      	movs	r0, #1
 8000d20:	2100      	movs	r1, #0
 8000d22:	f7ff ff83 	bl	8000c2c <RCC_APB2PeriphResetCmd>
 8000d26:	bd08      	pop	{r3, pc}

08000d28 <SYSCFG_RIDeInit>:
 8000d28:	4b04      	ldr	r3, [pc, #16]	; (8000d3c <SYSCFG_RIDeInit+0x14>)
 8000d2a:	2200      	movs	r2, #0
 8000d2c:	601a      	str	r2, [r3, #0]
 8000d2e:	605a      	str	r2, [r3, #4]
 8000d30:	609a      	str	r2, [r3, #8]
 8000d32:	60da      	str	r2, [r3, #12]
 8000d34:	611a      	str	r2, [r3, #16]
 8000d36:	615a      	str	r2, [r3, #20]
 8000d38:	619a      	str	r2, [r3, #24]
 8000d3a:	4770      	bx	lr
 8000d3c:	40007c04 	.word	0x40007c04

08000d40 <SYSCFG_MemoryRemapConfig>:
 8000d40:	4b01      	ldr	r3, [pc, #4]	; (8000d48 <SYSCFG_MemoryRemapConfig+0x8>)
 8000d42:	6018      	str	r0, [r3, #0]
 8000d44:	4770      	bx	lr
 8000d46:	46c0      	nop			; (mov r8, r8)
 8000d48:	40010000 	.word	0x40010000

08000d4c <SYSCFG_GetBootMode>:
 8000d4c:	4b02      	ldr	r3, [pc, #8]	; (8000d58 <SYSCFG_GetBootMode+0xc>)
 8000d4e:	20c0      	movs	r0, #192	; 0xc0
 8000d50:	681b      	ldr	r3, [r3, #0]
 8000d52:	0080      	lsls	r0, r0, #2
 8000d54:	4018      	ands	r0, r3
 8000d56:	4770      	bx	lr
 8000d58:	40010000 	.word	0x40010000

08000d5c <SYSCFG_USBPuCmd>:
 8000d5c:	4b06      	ldr	r3, [pc, #24]	; (8000d78 <SYSCFG_USBPuCmd+0x1c>)
 8000d5e:	2800      	cmp	r0, #0
 8000d60:	d104      	bne.n	8000d6c <SYSCFG_USBPuCmd+0x10>
 8000d62:	685a      	ldr	r2, [r3, #4]
 8000d64:	2101      	movs	r1, #1
 8000d66:	438a      	bics	r2, r1
 8000d68:	605a      	str	r2, [r3, #4]
 8000d6a:	4770      	bx	lr
 8000d6c:	6859      	ldr	r1, [r3, #4]
 8000d6e:	2201      	movs	r2, #1
 8000d70:	430a      	orrs	r2, r1
 8000d72:	605a      	str	r2, [r3, #4]
 8000d74:	e7f9      	b.n	8000d6a <SYSCFG_USBPuCmd+0xe>
 8000d76:	46c0      	nop			; (mov r8, r8)
 8000d78:	40010000 	.word	0x40010000

08000d7c <SYSCFG_EXTILineConfig>:
 8000d7c:	2303      	movs	r3, #3
 8000d7e:	400b      	ands	r3, r1
 8000d80:	4a08      	ldr	r2, [pc, #32]	; (8000da4 <SYSCFG_EXTILineConfig+0x28>)
 8000d82:	0889      	lsrs	r1, r1, #2
 8000d84:	0089      	lsls	r1, r1, #2
 8000d86:	1889      	adds	r1, r1, r2
 8000d88:	b510      	push	{r4, lr}
 8000d8a:	688a      	ldr	r2, [r1, #8]
 8000d8c:	009b      	lsls	r3, r3, #2
 8000d8e:	240f      	movs	r4, #15
 8000d90:	409c      	lsls	r4, r3
 8000d92:	43a2      	bics	r2, r4
 8000d94:	608a      	str	r2, [r1, #8]
 8000d96:	688a      	ldr	r2, [r1, #8]
 8000d98:	4098      	lsls	r0, r3
 8000d9a:	1c03      	adds	r3, r0, #0
 8000d9c:	4313      	orrs	r3, r2
 8000d9e:	608b      	str	r3, [r1, #8]
 8000da0:	bd10      	pop	{r4, pc}
 8000da2:	46c0      	nop			; (mov r8, r8)
 8000da4:	40010000 	.word	0x40010000

08000da8 <SYSCFG_RITIMSelect>:
 8000da8:	4b03      	ldr	r3, [pc, #12]	; (8000db8 <SYSCFG_RITIMSelect+0x10>)
 8000daa:	4a04      	ldr	r2, [pc, #16]	; (8000dbc <SYSCFG_RITIMSelect+0x14>)
 8000dac:	6819      	ldr	r1, [r3, #0]
 8000dae:	400a      	ands	r2, r1
 8000db0:	4310      	orrs	r0, r2
 8000db2:	6018      	str	r0, [r3, #0]
 8000db4:	4770      	bx	lr
 8000db6:	46c0      	nop			; (mov r8, r8)
 8000db8:	40007c04 	.word	0x40007c04
 8000dbc:	fffcffff 	.word	0xfffcffff

08000dc0 <SYSCFG_RITIMInputCaptureConfig>:
 8000dc0:	4b0e      	ldr	r3, [pc, #56]	; (8000dfc <SYSCFG_RITIMInputCaptureConfig+0x3c>)
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	4303      	orrs	r3, r0
 8000dc6:	0342      	lsls	r2, r0, #13
 8000dc8:	d502      	bpl.n	8000dd0 <SYSCFG_RITIMInputCaptureConfig+0x10>
 8000dca:	220f      	movs	r2, #15
 8000dcc:	4393      	bics	r3, r2
 8000dce:	430b      	orrs	r3, r1
 8000dd0:	0302      	lsls	r2, r0, #12
 8000dd2:	d503      	bpl.n	8000ddc <SYSCFG_RITIMInputCaptureConfig+0x1c>
 8000dd4:	22f0      	movs	r2, #240	; 0xf0
 8000dd6:	4393      	bics	r3, r2
 8000dd8:	010a      	lsls	r2, r1, #4
 8000dda:	4313      	orrs	r3, r2
 8000ddc:	02c2      	lsls	r2, r0, #11
 8000dde:	d503      	bpl.n	8000de8 <SYSCFG_RITIMInputCaptureConfig+0x28>
 8000de0:	4a07      	ldr	r2, [pc, #28]	; (8000e00 <SYSCFG_RITIMInputCaptureConfig+0x40>)
 8000de2:	4013      	ands	r3, r2
 8000de4:	020a      	lsls	r2, r1, #8
 8000de6:	4313      	orrs	r3, r2
 8000de8:	0282      	lsls	r2, r0, #10
 8000dea:	d503      	bpl.n	8000df4 <SYSCFG_RITIMInputCaptureConfig+0x34>
 8000dec:	4a05      	ldr	r2, [pc, #20]	; (8000e04 <SYSCFG_RITIMInputCaptureConfig+0x44>)
 8000dee:	0309      	lsls	r1, r1, #12
 8000df0:	4013      	ands	r3, r2
 8000df2:	430b      	orrs	r3, r1
 8000df4:	4a01      	ldr	r2, [pc, #4]	; (8000dfc <SYSCFG_RITIMInputCaptureConfig+0x3c>)
 8000df6:	6013      	str	r3, [r2, #0]
 8000df8:	4770      	bx	lr
 8000dfa:	46c0      	nop			; (mov r8, r8)
 8000dfc:	40007c04 	.word	0x40007c04
 8000e00:	fffff0ff 	.word	0xfffff0ff
 8000e04:	ffff0fff 	.word	0xffff0fff

08000e08 <SYSCFG_RIResistorConfig>:
 8000e08:	4b04      	ldr	r3, [pc, #16]	; (8000e1c <SYSCFG_RIResistorConfig+0x14>)
 8000e0a:	681a      	ldr	r2, [r3, #0]
 8000e0c:	2900      	cmp	r1, #0
 8000e0e:	d102      	bne.n	8000e16 <SYSCFG_RIResistorConfig+0xe>
 8000e10:	4382      	bics	r2, r0
 8000e12:	601a      	str	r2, [r3, #0]
 8000e14:	4770      	bx	lr
 8000e16:	4310      	orrs	r0, r2
 8000e18:	6018      	str	r0, [r3, #0]
 8000e1a:	e7fb      	b.n	8000e14 <SYSCFG_RIResistorConfig+0xc>
 8000e1c:	40007c00 	.word	0x40007c00

08000e20 <SYSCFG_RIChannelSpeedConfig>:
 8000e20:	4b04      	ldr	r3, [pc, #16]	; (8000e34 <SYSCFG_RIChannelSpeedConfig+0x14>)
 8000e22:	681a      	ldr	r2, [r3, #0]
 8000e24:	2900      	cmp	r1, #0
 8000e26:	d102      	bne.n	8000e2e <SYSCFG_RIChannelSpeedConfig+0xe>
 8000e28:	4310      	orrs	r0, r2
 8000e2a:	6018      	str	r0, [r3, #0]
 8000e2c:	4770      	bx	lr
 8000e2e:	4382      	bics	r2, r0
 8000e30:	601a      	str	r2, [r3, #0]
 8000e32:	e7fb      	b.n	8000e2c <SYSCFG_RIChannelSpeedConfig+0xc>
 8000e34:	40007c00 	.word	0x40007c00

08000e38 <SYSCFG_RIIOSwitchConfig>:
 8000e38:	0fc3      	lsrs	r3, r0, #31
 8000e3a:	0040      	lsls	r0, r0, #1
 8000e3c:	0840      	lsrs	r0, r0, #1
 8000e3e:	2900      	cmp	r1, #0
 8000e40:	d006      	beq.n	8000e50 <SYSCFG_RIIOSwitchConfig+0x18>
 8000e42:	2b00      	cmp	r3, #0
 8000e44:	d00b      	beq.n	8000e5e <SYSCFG_RIIOSwitchConfig+0x26>
 8000e46:	4b0b      	ldr	r3, [pc, #44]	; (8000e74 <SYSCFG_RIIOSwitchConfig+0x3c>)
 8000e48:	685a      	ldr	r2, [r3, #4]
 8000e4a:	4310      	orrs	r0, r2
 8000e4c:	6058      	str	r0, [r3, #4]
 8000e4e:	e005      	b.n	8000e5c <SYSCFG_RIIOSwitchConfig+0x24>
 8000e50:	2b00      	cmp	r3, #0
 8000e52:	d109      	bne.n	8000e68 <SYSCFG_RIIOSwitchConfig+0x30>
 8000e54:	4b07      	ldr	r3, [pc, #28]	; (8000e74 <SYSCFG_RIIOSwitchConfig+0x3c>)
 8000e56:	689a      	ldr	r2, [r3, #8]
 8000e58:	4382      	bics	r2, r0
 8000e5a:	609a      	str	r2, [r3, #8]
 8000e5c:	4770      	bx	lr
 8000e5e:	4b05      	ldr	r3, [pc, #20]	; (8000e74 <SYSCFG_RIIOSwitchConfig+0x3c>)
 8000e60:	689a      	ldr	r2, [r3, #8]
 8000e62:	4310      	orrs	r0, r2
 8000e64:	6098      	str	r0, [r3, #8]
 8000e66:	e7f9      	b.n	8000e5c <SYSCFG_RIIOSwitchConfig+0x24>
 8000e68:	4b02      	ldr	r3, [pc, #8]	; (8000e74 <SYSCFG_RIIOSwitchConfig+0x3c>)
 8000e6a:	685a      	ldr	r2, [r3, #4]
 8000e6c:	4382      	bics	r2, r0
 8000e6e:	605a      	str	r2, [r3, #4]
 8000e70:	e7f4      	b.n	8000e5c <SYSCFG_RIIOSwitchConfig+0x24>
 8000e72:	46c0      	nop			; (mov r8, r8)
 8000e74:	40007c04 	.word	0x40007c04

08000e78 <SYSCFG_RISwitchControlModeCmd>:
 8000e78:	4b06      	ldr	r3, [pc, #24]	; (8000e94 <SYSCFG_RISwitchControlModeCmd+0x1c>)
 8000e7a:	2800      	cmp	r0, #0
 8000e7c:	d104      	bne.n	8000e88 <SYSCFG_RISwitchControlModeCmd+0x10>
 8000e7e:	685a      	ldr	r2, [r3, #4]
 8000e80:	0052      	lsls	r2, r2, #1
 8000e82:	0852      	lsrs	r2, r2, #1
 8000e84:	605a      	str	r2, [r3, #4]
 8000e86:	4770      	bx	lr
 8000e88:	6859      	ldr	r1, [r3, #4]
 8000e8a:	2280      	movs	r2, #128	; 0x80
 8000e8c:	0612      	lsls	r2, r2, #24
 8000e8e:	430a      	orrs	r2, r1
 8000e90:	605a      	str	r2, [r3, #4]
 8000e92:	e7f8      	b.n	8000e86 <SYSCFG_RISwitchControlModeCmd+0xe>
 8000e94:	40007c04 	.word	0x40007c04

08000e98 <SYSCFG_RIHysteresisConfig>:
 8000e98:	4b2d      	ldr	r3, [pc, #180]	; (8000f50 <SYSCFG_RIHysteresisConfig+0xb8>)
 8000e9a:	2801      	cmp	r0, #1
 8000e9c:	d00f      	beq.n	8000ebe <SYSCFG_RIHysteresisConfig+0x26>
 8000e9e:	2802      	cmp	r0, #2
 8000ea0:	d013      	beq.n	8000eca <SYSCFG_RIHysteresisConfig+0x32>
 8000ea2:	2803      	cmp	r0, #3
 8000ea4:	d019      	beq.n	8000eda <SYSCFG_RIHysteresisConfig+0x42>
 8000ea6:	2804      	cmp	r0, #4
 8000ea8:	d02c      	beq.n	8000f04 <SYSCFG_RIHysteresisConfig+0x6c>
 8000eaa:	2805      	cmp	r0, #5
 8000eac:	d024      	beq.n	8000ef8 <SYSCFG_RIHysteresisConfig+0x60>
 8000eae:	2806      	cmp	r0, #6
 8000eb0:	d038      	beq.n	8000f24 <SYSCFG_RIHysteresisConfig+0x8c>
 8000eb2:	2a00      	cmp	r2, #0
 8000eb4:	d132      	bne.n	8000f1c <SYSCFG_RIHysteresisConfig+0x84>
 8000eb6:	699a      	ldr	r2, [r3, #24]
 8000eb8:	4311      	orrs	r1, r2
 8000eba:	6199      	str	r1, [r3, #24]
 8000ebc:	4770      	bx	lr
 8000ebe:	2a00      	cmp	r2, #0
 8000ec0:	d011      	beq.n	8000ee6 <SYSCFG_RIHysteresisConfig+0x4e>
 8000ec2:	68da      	ldr	r2, [r3, #12]
 8000ec4:	438a      	bics	r2, r1
 8000ec6:	60da      	str	r2, [r3, #12]
 8000ec8:	e7f8      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000eca:	2a00      	cmp	r2, #0
 8000ecc:	d00f      	beq.n	8000eee <SYSCFG_RIHysteresisConfig+0x56>
 8000ece:	68da      	ldr	r2, [r3, #12]
 8000ed0:	43c9      	mvns	r1, r1
 8000ed2:	0409      	lsls	r1, r1, #16
 8000ed4:	4011      	ands	r1, r2
 8000ed6:	60d9      	str	r1, [r3, #12]
 8000ed8:	e7f0      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000eda:	2a00      	cmp	r2, #0
 8000edc:	d01a      	beq.n	8000f14 <SYSCFG_RIHysteresisConfig+0x7c>
 8000ede:	691a      	ldr	r2, [r3, #16]
 8000ee0:	438a      	bics	r2, r1
 8000ee2:	611a      	str	r2, [r3, #16]
 8000ee4:	e7ea      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000ee6:	68da      	ldr	r2, [r3, #12]
 8000ee8:	4311      	orrs	r1, r2
 8000eea:	60d9      	str	r1, [r3, #12]
 8000eec:	e7e6      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000eee:	68da      	ldr	r2, [r3, #12]
 8000ef0:	0409      	lsls	r1, r1, #16
 8000ef2:	4311      	orrs	r1, r2
 8000ef4:	60d9      	str	r1, [r3, #12]
 8000ef6:	e7e1      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000ef8:	2a00      	cmp	r2, #0
 8000efa:	d020      	beq.n	8000f3e <SYSCFG_RIHysteresisConfig+0xa6>
 8000efc:	695a      	ldr	r2, [r3, #20]
 8000efe:	438a      	bics	r2, r1
 8000f00:	615a      	str	r2, [r3, #20]
 8000f02:	e7db      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000f04:	2a00      	cmp	r2, #0
 8000f06:	d015      	beq.n	8000f34 <SYSCFG_RIHysteresisConfig+0x9c>
 8000f08:	691a      	ldr	r2, [r3, #16]
 8000f0a:	43c9      	mvns	r1, r1
 8000f0c:	0409      	lsls	r1, r1, #16
 8000f0e:	4011      	ands	r1, r2
 8000f10:	6119      	str	r1, [r3, #16]
 8000f12:	e7d3      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000f14:	691a      	ldr	r2, [r3, #16]
 8000f16:	4311      	orrs	r1, r2
 8000f18:	6119      	str	r1, [r3, #16]
 8000f1a:	e7cf      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000f1c:	699a      	ldr	r2, [r3, #24]
 8000f1e:	438a      	bics	r2, r1
 8000f20:	619a      	str	r2, [r3, #24]
 8000f22:	e7cb      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000f24:	2a00      	cmp	r2, #0
 8000f26:	d00e      	beq.n	8000f46 <SYSCFG_RIHysteresisConfig+0xae>
 8000f28:	695a      	ldr	r2, [r3, #20]
 8000f2a:	43c9      	mvns	r1, r1
 8000f2c:	0409      	lsls	r1, r1, #16
 8000f2e:	4011      	ands	r1, r2
 8000f30:	6159      	str	r1, [r3, #20]
 8000f32:	e7c3      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000f34:	691a      	ldr	r2, [r3, #16]
 8000f36:	0409      	lsls	r1, r1, #16
 8000f38:	4311      	orrs	r1, r2
 8000f3a:	6119      	str	r1, [r3, #16]
 8000f3c:	e7be      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000f3e:	695a      	ldr	r2, [r3, #20]
 8000f40:	4311      	orrs	r1, r2
 8000f42:	6159      	str	r1, [r3, #20]
 8000f44:	e7ba      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000f46:	695a      	ldr	r2, [r3, #20]
 8000f48:	0409      	lsls	r1, r1, #16
 8000f4a:	4311      	orrs	r1, r2
 8000f4c:	6159      	str	r1, [r3, #20]
 8000f4e:	e7b5      	b.n	8000ebc <SYSCFG_RIHysteresisConfig+0x24>
 8000f50:	40007c04 	.word	0x40007c04

08000f54 <TIM_DeInit>:
 8000f54:	b508      	push	{r3, lr}
 8000f56:	2380      	movs	r3, #128	; 0x80
 8000f58:	05db      	lsls	r3, r3, #23
 8000f5a:	4298      	cmp	r0, r3
 8000f5c:	d021      	beq.n	8000fa2 <TIM_DeInit+0x4e>
 8000f5e:	4b35      	ldr	r3, [pc, #212]	; (8001034 <TIM_DeInit+0xe0>)
 8000f60:	4298      	cmp	r0, r3
 8000f62:	d027      	beq.n	8000fb4 <TIM_DeInit+0x60>
 8000f64:	4b34      	ldr	r3, [pc, #208]	; (8001038 <TIM_DeInit+0xe4>)
 8000f66:	4298      	cmp	r0, r3
 8000f68:	d02d      	beq.n	8000fc6 <TIM_DeInit+0x72>
 8000f6a:	4b34      	ldr	r3, [pc, #208]	; (800103c <TIM_DeInit+0xe8>)
 8000f6c:	4298      	cmp	r0, r3
 8000f6e:	d033      	beq.n	8000fd8 <TIM_DeInit+0x84>
 8000f70:	4b33      	ldr	r3, [pc, #204]	; (8001040 <TIM_DeInit+0xec>)
 8000f72:	4298      	cmp	r0, r3
 8000f74:	d039      	beq.n	8000fea <TIM_DeInit+0x96>
 8000f76:	4b33      	ldr	r3, [pc, #204]	; (8001044 <TIM_DeInit+0xf0>)
 8000f78:	4298      	cmp	r0, r3
 8000f7a:	d03f      	beq.n	8000ffc <TIM_DeInit+0xa8>
 8000f7c:	4b32      	ldr	r3, [pc, #200]	; (8001048 <TIM_DeInit+0xf4>)
 8000f7e:	4298      	cmp	r0, r3
 8000f80:	d045      	beq.n	800100e <TIM_DeInit+0xba>
 8000f82:	4b32      	ldr	r3, [pc, #200]	; (800104c <TIM_DeInit+0xf8>)
 8000f84:	4298      	cmp	r0, r3
 8000f86:	d04b      	beq.n	8001020 <TIM_DeInit+0xcc>
 8000f88:	4b31      	ldr	r3, [pc, #196]	; (8001050 <TIM_DeInit+0xfc>)
 8000f8a:	4298      	cmp	r0, r3
 8000f8c:	d000      	beq.n	8000f90 <TIM_DeInit+0x3c>
 8000f8e:	bd08      	pop	{r3, pc}
 8000f90:	2010      	movs	r0, #16
 8000f92:	2101      	movs	r1, #1
 8000f94:	f7ff fe4a 	bl	8000c2c <RCC_APB2PeriphResetCmd>
 8000f98:	2010      	movs	r0, #16
 8000f9a:	2100      	movs	r1, #0
 8000f9c:	f7ff fe46 	bl	8000c2c <RCC_APB2PeriphResetCmd>
 8000fa0:	e7f5      	b.n	8000f8e <TIM_DeInit+0x3a>
 8000fa2:	2001      	movs	r0, #1
 8000fa4:	2101      	movs	r1, #1
 8000fa6:	f7ff fe4d 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 8000faa:	2001      	movs	r0, #1
 8000fac:	2100      	movs	r1, #0
 8000fae:	f7ff fe49 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 8000fb2:	e7ec      	b.n	8000f8e <TIM_DeInit+0x3a>
 8000fb4:	2002      	movs	r0, #2
 8000fb6:	2101      	movs	r1, #1
 8000fb8:	f7ff fe44 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 8000fbc:	2002      	movs	r0, #2
 8000fbe:	2100      	movs	r1, #0
 8000fc0:	f7ff fe40 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 8000fc4:	e7e3      	b.n	8000f8e <TIM_DeInit+0x3a>
 8000fc6:	2004      	movs	r0, #4
 8000fc8:	2101      	movs	r1, #1
 8000fca:	f7ff fe3b 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 8000fce:	2004      	movs	r0, #4
 8000fd0:	2100      	movs	r1, #0
 8000fd2:	f7ff fe37 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 8000fd6:	e7da      	b.n	8000f8e <TIM_DeInit+0x3a>
 8000fd8:	2008      	movs	r0, #8
 8000fda:	2101      	movs	r1, #1
 8000fdc:	f7ff fe32 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 8000fe0:	2008      	movs	r0, #8
 8000fe2:	2100      	movs	r1, #0
 8000fe4:	f7ff fe2e 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 8000fe8:	e7d1      	b.n	8000f8e <TIM_DeInit+0x3a>
 8000fea:	2010      	movs	r0, #16
 8000fec:	2101      	movs	r1, #1
 8000fee:	f7ff fe29 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 8000ff2:	2010      	movs	r0, #16
 8000ff4:	2100      	movs	r1, #0
 8000ff6:	f7ff fe25 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 8000ffa:	e7c8      	b.n	8000f8e <TIM_DeInit+0x3a>
 8000ffc:	2020      	movs	r0, #32
 8000ffe:	2101      	movs	r1, #1
 8001000:	f7ff fe20 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 8001004:	2020      	movs	r0, #32
 8001006:	2100      	movs	r1, #0
 8001008:	f7ff fe1c 	bl	8000c44 <RCC_APB1PeriphResetCmd>
 800100c:	e7bf      	b.n	8000f8e <TIM_DeInit+0x3a>
 800100e:	2004      	movs	r0, #4
 8001010:	2101      	movs	r1, #1
 8001012:	f7ff fe0b 	bl	8000c2c <RCC_APB2PeriphResetCmd>
 8001016:	2004      	movs	r0, #4
 8001018:	2100      	movs	r1, #0
 800101a:	f7ff fe07 	bl	8000c2c <RCC_APB2PeriphResetCmd>
 800101e:	e7b6      	b.n	8000f8e <TIM_DeInit+0x3a>
 8001020:	2008      	movs	r0, #8
 8001022:	2101      	movs	r1, #1
 8001024:	f7ff fe02 	bl	8000c2c <RCC_APB2PeriphResetCmd>
 8001028:	2008      	movs	r0, #8
 800102a:	2100      	movs	r1, #0
 800102c:	f7ff fdfe 	bl	8000c2c <RCC_APB2PeriphResetCmd>
 8001030:	e7ad      	b.n	8000f8e <TIM_DeInit+0x3a>
 8001032:	46c0      	nop			; (mov r8, r8)
 8001034:	40000400 	.word	0x40000400
 8001038:	40000800 	.word	0x40000800
 800103c:	40000c00 	.word	0x40000c00
 8001040:	40001000 	.word	0x40001000
 8001044:	40001400 	.word	0x40001400
 8001048:	40010800 	.word	0x40010800
 800104c:	40010c00 	.word	0x40010c00
 8001050:	40011000 	.word	0x40011000

08001054 <TIM_TimeBaseInit>:
 8001054:	6803      	ldr	r3, [r0, #0]
 8001056:	2280      	movs	r2, #128	; 0x80
 8001058:	b510      	push	{r4, lr}
 800105a:	b29b      	uxth	r3, r3
 800105c:	05d2      	lsls	r2, r2, #23
 800105e:	4290      	cmp	r0, r2
 8001060:	d01a      	beq.n	8001098 <TIM_TimeBaseInit+0x44>
 8001062:	4a10      	ldr	r2, [pc, #64]	; (80010a4 <TIM_TimeBaseInit+0x50>)
 8001064:	4290      	cmp	r0, r2
 8001066:	d017      	beq.n	8001098 <TIM_TimeBaseInit+0x44>
 8001068:	4a0f      	ldr	r2, [pc, #60]	; (80010a8 <TIM_TimeBaseInit+0x54>)
 800106a:	4290      	cmp	r0, r2
 800106c:	d014      	beq.n	8001098 <TIM_TimeBaseInit+0x44>
 800106e:	4a0f      	ldr	r2, [pc, #60]	; (80010ac <TIM_TimeBaseInit+0x58>)
 8001070:	4290      	cmp	r0, r2
 8001072:	d011      	beq.n	8001098 <TIM_TimeBaseInit+0x44>
 8001074:	4a0e      	ldr	r2, [pc, #56]	; (80010b0 <TIM_TimeBaseInit+0x5c>)
 8001076:	4290      	cmp	r0, r2
 8001078:	d006      	beq.n	8001088 <TIM_TimeBaseInit+0x34>
 800107a:	4a0e      	ldr	r2, [pc, #56]	; (80010b4 <TIM_TimeBaseInit+0x60>)
 800107c:	4290      	cmp	r0, r2
 800107e:	d003      	beq.n	8001088 <TIM_TimeBaseInit+0x34>
 8001080:	4c0d      	ldr	r4, [pc, #52]	; (80010b8 <TIM_TimeBaseInit+0x64>)
 8001082:	890a      	ldrh	r2, [r1, #8]
 8001084:	4023      	ands	r3, r4
 8001086:	4313      	orrs	r3, r2
 8001088:	8003      	strh	r3, [r0, #0]
 800108a:	684b      	ldr	r3, [r1, #4]
 800108c:	62c3      	str	r3, [r0, #44]	; 0x2c
 800108e:	880b      	ldrh	r3, [r1, #0]
 8001090:	8503      	strh	r3, [r0, #40]	; 0x28
 8001092:	2301      	movs	r3, #1
 8001094:	8283      	strh	r3, [r0, #20]
 8001096:	bd10      	pop	{r4, pc}
 8001098:	2270      	movs	r2, #112	; 0x70
 800109a:	4393      	bics	r3, r2
 800109c:	884a      	ldrh	r2, [r1, #2]
 800109e:	4313      	orrs	r3, r2
 80010a0:	e7e8      	b.n	8001074 <TIM_TimeBaseInit+0x20>
 80010a2:	46c0      	nop			; (mov r8, r8)
 80010a4:	40000400 	.word	0x40000400
 80010a8:	40000800 	.word	0x40000800
 80010ac:	40000c00 	.word	0x40000c00
 80010b0:	40001000 	.word	0x40001000
 80010b4:	40001400 	.word	0x40001400
 80010b8:	fffffcff 	.word	0xfffffcff

080010bc <TIM_TimeBaseStructInit>:
 80010bc:	2301      	movs	r3, #1
 80010be:	425b      	negs	r3, r3
 80010c0:	6043      	str	r3, [r0, #4]
 80010c2:	2300      	movs	r3, #0
 80010c4:	8003      	strh	r3, [r0, #0]
 80010c6:	8103      	strh	r3, [r0, #8]
 80010c8:	8043      	strh	r3, [r0, #2]
 80010ca:	4770      	bx	lr

080010cc <TIM_PrescalerConfig>:
 80010cc:	8501      	strh	r1, [r0, #40]	; 0x28
 80010ce:	8282      	strh	r2, [r0, #20]
 80010d0:	4770      	bx	lr
 80010d2:	46c0      	nop			; (mov r8, r8)

080010d4 <TIM_CounterModeConfig>:
 80010d4:	6802      	ldr	r2, [r0, #0]
 80010d6:	4b02      	ldr	r3, [pc, #8]	; (80010e0 <TIM_CounterModeConfig+0xc>)
 80010d8:	4013      	ands	r3, r2
 80010da:	4319      	orrs	r1, r3
 80010dc:	8001      	strh	r1, [r0, #0]
 80010de:	4770      	bx	lr
 80010e0:	0000ff8f 	.word	0x0000ff8f

080010e4 <TIM_SetCounter>:
 80010e4:	6241      	str	r1, [r0, #36]	; 0x24
 80010e6:	4770      	bx	lr

080010e8 <TIM_SetAutoreload>:
 80010e8:	62c1      	str	r1, [r0, #44]	; 0x2c
 80010ea:	4770      	bx	lr

080010ec <TIM_GetCounter>:
 80010ec:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80010ee:	4770      	bx	lr

080010f0 <TIM_GetPrescaler>:
 80010f0:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80010f2:	b280      	uxth	r0, r0
 80010f4:	4770      	bx	lr
 80010f6:	46c0      	nop			; (mov r8, r8)

080010f8 <TIM_UpdateDisableConfig>:
 80010f8:	2900      	cmp	r1, #0
 80010fa:	d104      	bne.n	8001106 <TIM_UpdateDisableConfig+0xe>
 80010fc:	6802      	ldr	r2, [r0, #0]
 80010fe:	4b05      	ldr	r3, [pc, #20]	; (8001114 <TIM_UpdateDisableConfig+0x1c>)
 8001100:	4013      	ands	r3, r2
 8001102:	8003      	strh	r3, [r0, #0]
 8001104:	4770      	bx	lr
 8001106:	6803      	ldr	r3, [r0, #0]
 8001108:	2202      	movs	r2, #2
 800110a:	b29b      	uxth	r3, r3
 800110c:	4313      	orrs	r3, r2
 800110e:	8003      	strh	r3, [r0, #0]
 8001110:	e7f8      	b.n	8001104 <TIM_UpdateDisableConfig+0xc>
 8001112:	46c0      	nop			; (mov r8, r8)
 8001114:	0000fffd 	.word	0x0000fffd

08001118 <TIM_UpdateRequestConfig>:
 8001118:	2900      	cmp	r1, #0
 800111a:	d104      	bne.n	8001126 <TIM_UpdateRequestConfig+0xe>
 800111c:	6802      	ldr	r2, [r0, #0]
 800111e:	4b05      	ldr	r3, [pc, #20]	; (8001134 <TIM_UpdateRequestConfig+0x1c>)
 8001120:	4013      	ands	r3, r2
 8001122:	8003      	strh	r3, [r0, #0]
 8001124:	4770      	bx	lr
 8001126:	6803      	ldr	r3, [r0, #0]
 8001128:	2204      	movs	r2, #4
 800112a:	b29b      	uxth	r3, r3
 800112c:	4313      	orrs	r3, r2
 800112e:	8003      	strh	r3, [r0, #0]
 8001130:	e7f8      	b.n	8001124 <TIM_UpdateRequestConfig+0xc>
 8001132:	46c0      	nop			; (mov r8, r8)
 8001134:	0000fffb 	.word	0x0000fffb

08001138 <TIM_ARRPreloadConfig>:
 8001138:	2900      	cmp	r1, #0
 800113a:	d104      	bne.n	8001146 <TIM_ARRPreloadConfig+0xe>
 800113c:	6802      	ldr	r2, [r0, #0]
 800113e:	4b05      	ldr	r3, [pc, #20]	; (8001154 <TIM_ARRPreloadConfig+0x1c>)
 8001140:	4013      	ands	r3, r2
 8001142:	8003      	strh	r3, [r0, #0]
 8001144:	4770      	bx	lr
 8001146:	6803      	ldr	r3, [r0, #0]
 8001148:	2280      	movs	r2, #128	; 0x80
 800114a:	b29b      	uxth	r3, r3
 800114c:	4313      	orrs	r3, r2
 800114e:	8003      	strh	r3, [r0, #0]
 8001150:	e7f8      	b.n	8001144 <TIM_ARRPreloadConfig+0xc>
 8001152:	46c0      	nop			; (mov r8, r8)
 8001154:	0000ff7f 	.word	0x0000ff7f

08001158 <TIM_SelectOnePulseMode>:
 8001158:	6802      	ldr	r2, [r0, #0]
 800115a:	4b04      	ldr	r3, [pc, #16]	; (800116c <TIM_SelectOnePulseMode+0x14>)
 800115c:	4013      	ands	r3, r2
 800115e:	8003      	strh	r3, [r0, #0]
 8001160:	6803      	ldr	r3, [r0, #0]
 8001162:	b29b      	uxth	r3, r3
 8001164:	4319      	orrs	r1, r3
 8001166:	8001      	strh	r1, [r0, #0]
 8001168:	4770      	bx	lr
 800116a:	46c0      	nop			; (mov r8, r8)
 800116c:	0000fff7 	.word	0x0000fff7

08001170 <TIM_SetClockDivision>:
 8001170:	6802      	ldr	r2, [r0, #0]
 8001172:	4b04      	ldr	r3, [pc, #16]	; (8001184 <TIM_SetClockDivision+0x14>)
 8001174:	4013      	ands	r3, r2
 8001176:	8003      	strh	r3, [r0, #0]
 8001178:	6803      	ldr	r3, [r0, #0]
 800117a:	b29b      	uxth	r3, r3
 800117c:	4319      	orrs	r1, r3
 800117e:	8001      	strh	r1, [r0, #0]
 8001180:	4770      	bx	lr
 8001182:	46c0      	nop			; (mov r8, r8)
 8001184:	0000fcff 	.word	0x0000fcff

08001188 <TIM_Cmd>:
 8001188:	2900      	cmp	r1, #0
 800118a:	d104      	bne.n	8001196 <TIM_Cmd+0xe>
 800118c:	6802      	ldr	r2, [r0, #0]
 800118e:	4b05      	ldr	r3, [pc, #20]	; (80011a4 <TIM_Cmd+0x1c>)
 8001190:	4013      	ands	r3, r2
 8001192:	8003      	strh	r3, [r0, #0]
 8001194:	4770      	bx	lr
 8001196:	6803      	ldr	r3, [r0, #0]
 8001198:	2201      	movs	r2, #1
 800119a:	b29b      	uxth	r3, r3
 800119c:	4313      	orrs	r3, r2
 800119e:	8003      	strh	r3, [r0, #0]
 80011a0:	e7f8      	b.n	8001194 <TIM_Cmd+0xc>
 80011a2:	46c0      	nop			; (mov r8, r8)
 80011a4:	0000fffe 	.word	0x0000fffe

080011a8 <TIM_OC1Init>:
 80011a8:	6a02      	ldr	r2, [r0, #32]
 80011aa:	4b0a      	ldr	r3, [pc, #40]	; (80011d4 <TIM_OC1Init+0x2c>)
 80011ac:	b530      	push	{r4, r5, lr}
 80011ae:	4013      	ands	r3, r2
 80011b0:	8403      	strh	r3, [r0, #32]
 80011b2:	6a04      	ldr	r4, [r0, #32]
 80011b4:	4b08      	ldr	r3, [pc, #32]	; (80011d8 <TIM_OC1Init+0x30>)
 80011b6:	6982      	ldr	r2, [r0, #24]
 80011b8:	884d      	ldrh	r5, [r1, #2]
 80011ba:	401a      	ands	r2, r3
 80011bc:	880b      	ldrh	r3, [r1, #0]
 80011be:	431a      	orrs	r2, r3
 80011c0:	4b06      	ldr	r3, [pc, #24]	; (80011dc <TIM_OC1Init+0x34>)
 80011c2:	401c      	ands	r4, r3
 80011c4:	890b      	ldrh	r3, [r1, #8]
 80011c6:	6849      	ldr	r1, [r1, #4]
 80011c8:	432b      	orrs	r3, r5
 80011ca:	4323      	orrs	r3, r4
 80011cc:	6341      	str	r1, [r0, #52]	; 0x34
 80011ce:	8302      	strh	r2, [r0, #24]
 80011d0:	8403      	strh	r3, [r0, #32]
 80011d2:	bd30      	pop	{r4, r5, pc}
 80011d4:	0000fffe 	.word	0x0000fffe
 80011d8:	0000ff8c 	.word	0x0000ff8c
 80011dc:	0000fffd 	.word	0x0000fffd

080011e0 <TIM_OC2Init>:
 80011e0:	6a02      	ldr	r2, [r0, #32]
 80011e2:	4b0d      	ldr	r3, [pc, #52]	; (8001218 <TIM_OC2Init+0x38>)
 80011e4:	b510      	push	{r4, lr}
 80011e6:	4013      	ands	r3, r2
 80011e8:	8403      	strh	r3, [r0, #32]
 80011ea:	6a04      	ldr	r4, [r0, #32]
 80011ec:	4b0b      	ldr	r3, [pc, #44]	; (800121c <TIM_OC2Init+0x3c>)
 80011ee:	6982      	ldr	r2, [r0, #24]
 80011f0:	401a      	ands	r2, r3
 80011f2:	880b      	ldrh	r3, [r1, #0]
 80011f4:	021b      	lsls	r3, r3, #8
 80011f6:	431a      	orrs	r2, r3
 80011f8:	4b09      	ldr	r3, [pc, #36]	; (8001220 <TIM_OC2Init+0x40>)
 80011fa:	b292      	uxth	r2, r2
 80011fc:	4023      	ands	r3, r4
 80011fe:	890c      	ldrh	r4, [r1, #8]
 8001200:	0124      	lsls	r4, r4, #4
 8001202:	4323      	orrs	r3, r4
 8001204:	884c      	ldrh	r4, [r1, #2]
 8001206:	b29b      	uxth	r3, r3
 8001208:	0124      	lsls	r4, r4, #4
 800120a:	6849      	ldr	r1, [r1, #4]
 800120c:	4323      	orrs	r3, r4
 800120e:	b29b      	uxth	r3, r3
 8001210:	6381      	str	r1, [r0, #56]	; 0x38
 8001212:	8302      	strh	r2, [r0, #24]
 8001214:	8403      	strh	r3, [r0, #32]
 8001216:	bd10      	pop	{r4, pc}
 8001218:	0000ffef 	.word	0x0000ffef
 800121c:	00008fff 	.word	0x00008fff
 8001220:	0000ffdf 	.word	0x0000ffdf

08001224 <TIM_OC3Init>:
 8001224:	6a02      	ldr	r2, [r0, #32]
 8001226:	4b0c      	ldr	r3, [pc, #48]	; (8001258 <TIM_OC3Init+0x34>)
 8001228:	b510      	push	{r4, lr}
 800122a:	4013      	ands	r3, r2
 800122c:	8403      	strh	r3, [r0, #32]
 800122e:	6a04      	ldr	r4, [r0, #32]
 8001230:	4b0a      	ldr	r3, [pc, #40]	; (800125c <TIM_OC3Init+0x38>)
 8001232:	69c2      	ldr	r2, [r0, #28]
 8001234:	401a      	ands	r2, r3
 8001236:	880b      	ldrh	r3, [r1, #0]
 8001238:	431a      	orrs	r2, r3
 800123a:	4b09      	ldr	r3, [pc, #36]	; (8001260 <TIM_OC3Init+0x3c>)
 800123c:	4023      	ands	r3, r4
 800123e:	890c      	ldrh	r4, [r1, #8]
 8001240:	0224      	lsls	r4, r4, #8
 8001242:	4323      	orrs	r3, r4
 8001244:	884c      	ldrh	r4, [r1, #2]
 8001246:	b29b      	uxth	r3, r3
 8001248:	0224      	lsls	r4, r4, #8
 800124a:	6849      	ldr	r1, [r1, #4]
 800124c:	4323      	orrs	r3, r4
 800124e:	b29b      	uxth	r3, r3
 8001250:	63c1      	str	r1, [r0, #60]	; 0x3c
 8001252:	8382      	strh	r2, [r0, #28]
 8001254:	8403      	strh	r3, [r0, #32]
 8001256:	bd10      	pop	{r4, pc}
 8001258:	0000feff 	.word	0x0000feff
 800125c:	0000ff8f 	.word	0x0000ff8f
 8001260:	0000fdff 	.word	0x0000fdff

08001264 <TIM_OC4Init>:
 8001264:	6a02      	ldr	r2, [r0, #32]
 8001266:	4b0d      	ldr	r3, [pc, #52]	; (800129c <TIM_OC4Init+0x38>)
 8001268:	b510      	push	{r4, lr}
 800126a:	4013      	ands	r3, r2
 800126c:	8403      	strh	r3, [r0, #32]
 800126e:	6a04      	ldr	r4, [r0, #32]
 8001270:	4b0b      	ldr	r3, [pc, #44]	; (80012a0 <TIM_OC4Init+0x3c>)
 8001272:	69c2      	ldr	r2, [r0, #28]
 8001274:	401a      	ands	r2, r3
 8001276:	880b      	ldrh	r3, [r1, #0]
 8001278:	021b      	lsls	r3, r3, #8
 800127a:	431a      	orrs	r2, r3
 800127c:	4b09      	ldr	r3, [pc, #36]	; (80012a4 <TIM_OC4Init+0x40>)
 800127e:	b292      	uxth	r2, r2
 8001280:	4023      	ands	r3, r4
 8001282:	890c      	ldrh	r4, [r1, #8]
 8001284:	0324      	lsls	r4, r4, #12
 8001286:	4323      	orrs	r3, r4
 8001288:	884c      	ldrh	r4, [r1, #2]
 800128a:	b29b      	uxth	r3, r3
 800128c:	0324      	lsls	r4, r4, #12
 800128e:	6849      	ldr	r1, [r1, #4]
 8001290:	4323      	orrs	r3, r4
 8001292:	b29b      	uxth	r3, r3
 8001294:	6401      	str	r1, [r0, #64]	; 0x40
 8001296:	8382      	strh	r2, [r0, #28]
 8001298:	8403      	strh	r3, [r0, #32]
 800129a:	bd10      	pop	{r4, pc}
 800129c:	0000efff 	.word	0x0000efff
 80012a0:	00008fff 	.word	0x00008fff
 80012a4:	0000dfff 	.word	0x0000dfff

080012a8 <TIM_OCStructInit>:
 80012a8:	2300      	movs	r3, #0
 80012aa:	8003      	strh	r3, [r0, #0]
 80012ac:	8043      	strh	r3, [r0, #2]
 80012ae:	6043      	str	r3, [r0, #4]
 80012b0:	8103      	strh	r3, [r0, #8]
 80012b2:	4770      	bx	lr

080012b4 <TIM_SelectOCxM>:
 80012b4:	b530      	push	{r4, r5, lr}
 80012b6:	6a03      	ldr	r3, [r0, #32]
 80012b8:	2401      	movs	r4, #1
 80012ba:	b29b      	uxth	r3, r3
 80012bc:	408c      	lsls	r4, r1
 80012be:	43a3      	bics	r3, r4
 80012c0:	1c05      	adds	r5, r0, #0
 80012c2:	8403      	strh	r3, [r0, #32]
 80012c4:	2308      	movs	r3, #8
 80012c6:	1c08      	adds	r0, r1, #0
 80012c8:	3518      	adds	r5, #24
 80012ca:	4398      	bics	r0, r3
 80012cc:	d00d      	beq.n	80012ea <TIM_SelectOCxM+0x36>
 80012ce:	3904      	subs	r1, #4
 80012d0:	b289      	uxth	r1, r1
 80012d2:	0849      	lsrs	r1, r1, #1
 80012d4:	1949      	adds	r1, r1, r5
 80012d6:	6808      	ldr	r0, [r1, #0]
 80012d8:	4b09      	ldr	r3, [pc, #36]	; (8001300 <TIM_SelectOCxM+0x4c>)
 80012da:	0212      	lsls	r2, r2, #8
 80012dc:	4003      	ands	r3, r0
 80012de:	600b      	str	r3, [r1, #0]
 80012e0:	680b      	ldr	r3, [r1, #0]
 80012e2:	b292      	uxth	r2, r2
 80012e4:	431a      	orrs	r2, r3
 80012e6:	600a      	str	r2, [r1, #0]
 80012e8:	bd30      	pop	{r4, r5, pc}
 80012ea:	0849      	lsrs	r1, r1, #1
 80012ec:	1869      	adds	r1, r5, r1
 80012ee:	680b      	ldr	r3, [r1, #0]
 80012f0:	2070      	movs	r0, #112	; 0x70
 80012f2:	4383      	bics	r3, r0
 80012f4:	600b      	str	r3, [r1, #0]
 80012f6:	680b      	ldr	r3, [r1, #0]
 80012f8:	431a      	orrs	r2, r3
 80012fa:	600a      	str	r2, [r1, #0]
 80012fc:	e7f4      	b.n	80012e8 <TIM_SelectOCxM+0x34>
 80012fe:	46c0      	nop			; (mov r8, r8)
 8001300:	ffff8fff 	.word	0xffff8fff

08001304 <TIM_SetCompare1>:
 8001304:	6341      	str	r1, [r0, #52]	; 0x34
 8001306:	4770      	bx	lr

08001308 <TIM_SetCompare2>:
 8001308:	6381      	str	r1, [r0, #56]	; 0x38
 800130a:	4770      	bx	lr

0800130c <TIM_SetCompare3>:
 800130c:	63c1      	str	r1, [r0, #60]	; 0x3c
 800130e:	4770      	bx	lr

08001310 <TIM_SetCompare4>:
 8001310:	6401      	str	r1, [r0, #64]	; 0x40
 8001312:	4770      	bx	lr

08001314 <TIM_ForcedOC1Config>:
 8001314:	6982      	ldr	r2, [r0, #24]
 8001316:	4b02      	ldr	r3, [pc, #8]	; (8001320 <TIM_ForcedOC1Config+0xc>)
 8001318:	4013      	ands	r3, r2
 800131a:	4319      	orrs	r1, r3
 800131c:	8301      	strh	r1, [r0, #24]
 800131e:	4770      	bx	lr
 8001320:	0000ff8f 	.word	0x0000ff8f

08001324 <TIM_ForcedOC2Config>:
 8001324:	6982      	ldr	r2, [r0, #24]
 8001326:	4b04      	ldr	r3, [pc, #16]	; (8001338 <TIM_ForcedOC2Config+0x14>)
 8001328:	401a      	ands	r2, r3
 800132a:	020b      	lsls	r3, r1, #8
 800132c:	1c11      	adds	r1, r2, #0
 800132e:	4319      	orrs	r1, r3
 8001330:	b289      	uxth	r1, r1
 8001332:	8301      	strh	r1, [r0, #24]
 8001334:	4770      	bx	lr
 8001336:	46c0      	nop			; (mov r8, r8)
 8001338:	00008fff 	.word	0x00008fff

0800133c <TIM_ForcedOC3Config>:
 800133c:	69c2      	ldr	r2, [r0, #28]
 800133e:	4b02      	ldr	r3, [pc, #8]	; (8001348 <TIM_ForcedOC3Config+0xc>)
 8001340:	4013      	ands	r3, r2
 8001342:	4319      	orrs	r1, r3
 8001344:	8381      	strh	r1, [r0, #28]
 8001346:	4770      	bx	lr
 8001348:	0000ff8f 	.word	0x0000ff8f

0800134c <TIM_ForcedOC4Config>:
 800134c:	69c2      	ldr	r2, [r0, #28]
 800134e:	4b04      	ldr	r3, [pc, #16]	; (8001360 <TIM_ForcedOC4Config+0x14>)
 8001350:	401a      	ands	r2, r3
 8001352:	020b      	lsls	r3, r1, #8
 8001354:	1c11      	adds	r1, r2, #0
 8001356:	4319      	orrs	r1, r3
 8001358:	b289      	uxth	r1, r1
 800135a:	8381      	strh	r1, [r0, #28]
 800135c:	4770      	bx	lr
 800135e:	46c0      	nop			; (mov r8, r8)
 8001360:	00008fff 	.word	0x00008fff

08001364 <TIM_OC1PreloadConfig>:
 8001364:	6982      	ldr	r2, [r0, #24]
 8001366:	4b02      	ldr	r3, [pc, #8]	; (8001370 <TIM_OC1PreloadConfig+0xc>)
 8001368:	4013      	ands	r3, r2
 800136a:	4319      	orrs	r1, r3
 800136c:	8301      	strh	r1, [r0, #24]
 800136e:	4770      	bx	lr
 8001370:	0000fff7 	.word	0x0000fff7

08001374 <TIM_OC2PreloadConfig>:
 8001374:	6982      	ldr	r2, [r0, #24]
 8001376:	4b04      	ldr	r3, [pc, #16]	; (8001388 <TIM_OC2PreloadConfig+0x14>)
 8001378:	401a      	ands	r2, r3
 800137a:	020b      	lsls	r3, r1, #8
 800137c:	1c11      	adds	r1, r2, #0
 800137e:	4319      	orrs	r1, r3
 8001380:	b289      	uxth	r1, r1
 8001382:	8301      	strh	r1, [r0, #24]
 8001384:	4770      	bx	lr
 8001386:	46c0      	nop			; (mov r8, r8)
 8001388:	0000f7ff 	.word	0x0000f7ff

0800138c <TIM_OC3PreloadConfig>:
 800138c:	69c2      	ldr	r2, [r0, #28]
 800138e:	4b02      	ldr	r3, [pc, #8]	; (8001398 <TIM_OC3PreloadConfig+0xc>)
 8001390:	4013      	ands	r3, r2
 8001392:	4319      	orrs	r1, r3
 8001394:	8381      	strh	r1, [r0, #28]
 8001396:	4770      	bx	lr
 8001398:	0000fff7 	.word	0x0000fff7

0800139c <TIM_OC4PreloadConfig>:
 800139c:	69c2      	ldr	r2, [r0, #28]
 800139e:	4b04      	ldr	r3, [pc, #16]	; (80013b0 <TIM_OC4PreloadConfig+0x14>)
 80013a0:	401a      	ands	r2, r3
 80013a2:	020b      	lsls	r3, r1, #8
 80013a4:	1c11      	adds	r1, r2, #0
 80013a6:	4319      	orrs	r1, r3
 80013a8:	b289      	uxth	r1, r1
 80013aa:	8381      	strh	r1, [r0, #28]
 80013ac:	4770      	bx	lr
 80013ae:	46c0      	nop			; (mov r8, r8)
 80013b0:	0000f7ff 	.word	0x0000f7ff

080013b4 <TIM_OC1FastConfig>:
 80013b4:	6982      	ldr	r2, [r0, #24]
 80013b6:	4b02      	ldr	r3, [pc, #8]	; (80013c0 <TIM_OC1FastConfig+0xc>)
 80013b8:	4013      	ands	r3, r2
 80013ba:	4319      	orrs	r1, r3
 80013bc:	8301      	strh	r1, [r0, #24]
 80013be:	4770      	bx	lr
 80013c0:	0000fffb 	.word	0x0000fffb

080013c4 <TIM_OC2FastConfig>:
 80013c4:	6982      	ldr	r2, [r0, #24]
 80013c6:	4b04      	ldr	r3, [pc, #16]	; (80013d8 <TIM_OC2FastConfig+0x14>)
 80013c8:	401a      	ands	r2, r3
 80013ca:	020b      	lsls	r3, r1, #8
 80013cc:	1c11      	adds	r1, r2, #0
 80013ce:	4319      	orrs	r1, r3
 80013d0:	b289      	uxth	r1, r1
 80013d2:	8301      	strh	r1, [r0, #24]
 80013d4:	4770      	bx	lr
 80013d6:	46c0      	nop			; (mov r8, r8)
 80013d8:	0000fbff 	.word	0x0000fbff

080013dc <TIM_OC3FastConfig>:
 80013dc:	69c2      	ldr	r2, [r0, #28]
 80013de:	4b02      	ldr	r3, [pc, #8]	; (80013e8 <TIM_OC3FastConfig+0xc>)
 80013e0:	4013      	ands	r3, r2
 80013e2:	4319      	orrs	r1, r3
 80013e4:	8381      	strh	r1, [r0, #28]
 80013e6:	4770      	bx	lr
 80013e8:	0000fffb 	.word	0x0000fffb

080013ec <TIM_OC4FastConfig>:
 80013ec:	69c2      	ldr	r2, [r0, #28]
 80013ee:	4b04      	ldr	r3, [pc, #16]	; (8001400 <TIM_OC4FastConfig+0x14>)
 80013f0:	401a      	ands	r2, r3
 80013f2:	020b      	lsls	r3, r1, #8
 80013f4:	1c11      	adds	r1, r2, #0
 80013f6:	4319      	orrs	r1, r3
 80013f8:	b289      	uxth	r1, r1
 80013fa:	8381      	strh	r1, [r0, #28]
 80013fc:	4770      	bx	lr
 80013fe:	46c0      	nop			; (mov r8, r8)
 8001400:	0000fbff 	.word	0x0000fbff

08001404 <TIM_ClearOC1Ref>:
 8001404:	6982      	ldr	r2, [r0, #24]
 8001406:	4b02      	ldr	r3, [pc, #8]	; (8001410 <TIM_ClearOC1Ref+0xc>)
 8001408:	4013      	ands	r3, r2
 800140a:	4319      	orrs	r1, r3
 800140c:	8301      	strh	r1, [r0, #24]
 800140e:	4770      	bx	lr
 8001410:	0000ff7f 	.word	0x0000ff7f

08001414 <TIM_ClearOC2Ref>:
 8001414:	6983      	ldr	r3, [r0, #24]
 8001416:	0209      	lsls	r1, r1, #8
 8001418:	045b      	lsls	r3, r3, #17
 800141a:	0c5b      	lsrs	r3, r3, #17
 800141c:	4319      	orrs	r1, r3
 800141e:	b289      	uxth	r1, r1
 8001420:	8301      	strh	r1, [r0, #24]
 8001422:	4770      	bx	lr

08001424 <TIM_ClearOC3Ref>:
 8001424:	69c2      	ldr	r2, [r0, #28]
 8001426:	4b02      	ldr	r3, [pc, #8]	; (8001430 <TIM_ClearOC3Ref+0xc>)
 8001428:	4013      	ands	r3, r2
 800142a:	4319      	orrs	r1, r3
 800142c:	8381      	strh	r1, [r0, #28]
 800142e:	4770      	bx	lr
 8001430:	0000ff7f 	.word	0x0000ff7f

08001434 <TIM_ClearOC4Ref>:
 8001434:	69c3      	ldr	r3, [r0, #28]
 8001436:	0209      	lsls	r1, r1, #8
 8001438:	045b      	lsls	r3, r3, #17
 800143a:	0c5b      	lsrs	r3, r3, #17
 800143c:	4319      	orrs	r1, r3
 800143e:	b289      	uxth	r1, r1
 8001440:	8381      	strh	r1, [r0, #28]
 8001442:	4770      	bx	lr

08001444 <TIM_OC1PolarityConfig>:
 8001444:	6a02      	ldr	r2, [r0, #32]
 8001446:	4b02      	ldr	r3, [pc, #8]	; (8001450 <TIM_OC1PolarityConfig+0xc>)
 8001448:	4013      	ands	r3, r2
 800144a:	4319      	orrs	r1, r3
 800144c:	8401      	strh	r1, [r0, #32]
 800144e:	4770      	bx	lr
 8001450:	0000fffd 	.word	0x0000fffd

08001454 <TIM_OC2PolarityConfig>:
 8001454:	6a02      	ldr	r2, [r0, #32]
 8001456:	4b04      	ldr	r3, [pc, #16]	; (8001468 <TIM_OC2PolarityConfig+0x14>)
 8001458:	401a      	ands	r2, r3
 800145a:	010b      	lsls	r3, r1, #4
 800145c:	1c11      	adds	r1, r2, #0
 800145e:	4319      	orrs	r1, r3
 8001460:	b289      	uxth	r1, r1
 8001462:	8401      	strh	r1, [r0, #32]
 8001464:	4770      	bx	lr
 8001466:	46c0      	nop			; (mov r8, r8)
 8001468:	0000ffdf 	.word	0x0000ffdf

0800146c <TIM_OC3PolarityConfig>:
 800146c:	6a02      	ldr	r2, [r0, #32]
 800146e:	4b04      	ldr	r3, [pc, #16]	; (8001480 <TIM_OC3PolarityConfig+0x14>)
 8001470:	401a      	ands	r2, r3
 8001472:	020b      	lsls	r3, r1, #8
 8001474:	1c11      	adds	r1, r2, #0
 8001476:	4319      	orrs	r1, r3
 8001478:	b289      	uxth	r1, r1
 800147a:	8401      	strh	r1, [r0, #32]
 800147c:	4770      	bx	lr
 800147e:	46c0      	nop			; (mov r8, r8)
 8001480:	0000fdff 	.word	0x0000fdff

08001484 <TIM_OC4PolarityConfig>:
 8001484:	6a02      	ldr	r2, [r0, #32]
 8001486:	4b04      	ldr	r3, [pc, #16]	; (8001498 <TIM_OC4PolarityConfig+0x14>)
 8001488:	401a      	ands	r2, r3
 800148a:	030b      	lsls	r3, r1, #12
 800148c:	1c11      	adds	r1, r2, #0
 800148e:	4319      	orrs	r1, r3
 8001490:	b289      	uxth	r1, r1
 8001492:	8401      	strh	r1, [r0, #32]
 8001494:	4770      	bx	lr
 8001496:	46c0      	nop			; (mov r8, r8)
 8001498:	0000dfff 	.word	0x0000dfff

0800149c <TIM_SelectOCREFClear>:
 800149c:	6882      	ldr	r2, [r0, #8]
 800149e:	4b04      	ldr	r3, [pc, #16]	; (80014b0 <TIM_SelectOCREFClear+0x14>)
 80014a0:	4013      	ands	r3, r2
 80014a2:	8103      	strh	r3, [r0, #8]
 80014a4:	6883      	ldr	r3, [r0, #8]
 80014a6:	b29b      	uxth	r3, r3
 80014a8:	4319      	orrs	r1, r3
 80014aa:	8101      	strh	r1, [r0, #8]
 80014ac:	4770      	bx	lr
 80014ae:	46c0      	nop			; (mov r8, r8)
 80014b0:	0000fff7 	.word	0x0000fff7

080014b4 <TIM_CCxCmd>:
 80014b4:	6a03      	ldr	r3, [r0, #32]
 80014b6:	b510      	push	{r4, lr}
 80014b8:	2401      	movs	r4, #1
 80014ba:	408c      	lsls	r4, r1
 80014bc:	b29b      	uxth	r3, r3
 80014be:	43a3      	bics	r3, r4
 80014c0:	8403      	strh	r3, [r0, #32]
 80014c2:	6a03      	ldr	r3, [r0, #32]
 80014c4:	408a      	lsls	r2, r1
 80014c6:	1c11      	adds	r1, r2, #0
 80014c8:	4319      	orrs	r1, r3
 80014ca:	b289      	uxth	r1, r1
 80014cc:	8401      	strh	r1, [r0, #32]
 80014ce:	bd10      	pop	{r4, pc}

080014d0 <TIM_ICInit>:
 80014d0:	880b      	ldrh	r3, [r1, #0]
 80014d2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014d4:	2b00      	cmp	r3, #0
 80014d6:	d02b      	beq.n	8001530 <TIM_ICInit+0x60>
 80014d8:	2b04      	cmp	r3, #4
 80014da:	d04a      	beq.n	8001572 <TIM_ICInit+0xa2>
 80014dc:	2b08      	cmp	r3, #8
 80014de:	d100      	bne.n	80014e2 <TIM_ICInit+0x12>
 80014e0:	e06d      	b.n	80015be <TIM_ICInit+0xee>
 80014e2:	6a05      	ldr	r5, [r0, #32]
 80014e4:	4a47      	ldr	r2, [pc, #284]	; (8001604 <TIM_ICInit+0x134>)
 80014e6:	884b      	ldrh	r3, [r1, #2]
 80014e8:	402a      	ands	r2, r5
 80014ea:	888e      	ldrh	r6, [r1, #4]
 80014ec:	890c      	ldrh	r4, [r1, #8]
 80014ee:	8402      	strh	r2, [r0, #32]
 80014f0:	69c7      	ldr	r7, [r0, #28]
 80014f2:	4a45      	ldr	r2, [pc, #276]	; (8001608 <TIM_ICInit+0x138>)
 80014f4:	0236      	lsls	r6, r6, #8
 80014f6:	403a      	ands	r2, r7
 80014f8:	4332      	orrs	r2, r6
 80014fa:	0324      	lsls	r4, r4, #12
 80014fc:	b292      	uxth	r2, r2
 80014fe:	6a05      	ldr	r5, [r0, #32]
 8001500:	4322      	orrs	r2, r4
 8001502:	4c42      	ldr	r4, [pc, #264]	; (800160c <TIM_ICInit+0x13c>)
 8001504:	031b      	lsls	r3, r3, #12
 8001506:	402c      	ands	r4, r5
 8001508:	431c      	orrs	r4, r3
 800150a:	2380      	movs	r3, #128	; 0x80
 800150c:	b2a4      	uxth	r4, r4
 800150e:	015b      	lsls	r3, r3, #5
 8001510:	b292      	uxth	r2, r2
 8001512:	4323      	orrs	r3, r4
 8001514:	8382      	strh	r2, [r0, #28]
 8001516:	8403      	strh	r3, [r0, #32]
 8001518:	4a3d      	ldr	r2, [pc, #244]	; (8001610 <TIM_ICInit+0x140>)
 800151a:	88cb      	ldrh	r3, [r1, #6]
 800151c:	69c1      	ldr	r1, [r0, #28]
 800151e:	021b      	lsls	r3, r3, #8
 8001520:	400a      	ands	r2, r1
 8001522:	8382      	strh	r2, [r0, #28]
 8001524:	69c2      	ldr	r2, [r0, #28]
 8001526:	b292      	uxth	r2, r2
 8001528:	4313      	orrs	r3, r2
 800152a:	b29b      	uxth	r3, r3
 800152c:	8383      	strh	r3, [r0, #28]
 800152e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001530:	6a04      	ldr	r4, [r0, #32]
 8001532:	4a38      	ldr	r2, [pc, #224]	; (8001614 <TIM_ICInit+0x144>)
 8001534:	888b      	ldrh	r3, [r1, #4]
 8001536:	4022      	ands	r2, r4
 8001538:	884d      	ldrh	r5, [r1, #2]
 800153a:	890e      	ldrh	r6, [r1, #8]
 800153c:	8402      	strh	r2, [r0, #32]
 800153e:	6987      	ldr	r7, [r0, #24]
 8001540:	4a35      	ldr	r2, [pc, #212]	; (8001618 <TIM_ICInit+0x148>)
 8001542:	0136      	lsls	r6, r6, #4
 8001544:	403a      	ands	r2, r7
 8001546:	4332      	orrs	r2, r6
 8001548:	b292      	uxth	r2, r2
 800154a:	6a04      	ldr	r4, [r0, #32]
 800154c:	431a      	orrs	r2, r3
 800154e:	4b33      	ldr	r3, [pc, #204]	; (800161c <TIM_ICInit+0x14c>)
 8001550:	8302      	strh	r2, [r0, #24]
 8001552:	401c      	ands	r4, r3
 8001554:	2301      	movs	r3, #1
 8001556:	432b      	orrs	r3, r5
 8001558:	4323      	orrs	r3, r4
 800155a:	b29b      	uxth	r3, r3
 800155c:	8403      	strh	r3, [r0, #32]
 800155e:	88ca      	ldrh	r2, [r1, #6]
 8001560:	4b2f      	ldr	r3, [pc, #188]	; (8001620 <TIM_ICInit+0x150>)
 8001562:	6981      	ldr	r1, [r0, #24]
 8001564:	400b      	ands	r3, r1
 8001566:	8303      	strh	r3, [r0, #24]
 8001568:	6983      	ldr	r3, [r0, #24]
 800156a:	b29b      	uxth	r3, r3
 800156c:	4313      	orrs	r3, r2
 800156e:	8303      	strh	r3, [r0, #24]
 8001570:	e7dd      	b.n	800152e <TIM_ICInit+0x5e>
 8001572:	6a05      	ldr	r5, [r0, #32]
 8001574:	4a2b      	ldr	r2, [pc, #172]	; (8001624 <TIM_ICInit+0x154>)
 8001576:	884c      	ldrh	r4, [r1, #2]
 8001578:	402a      	ands	r2, r5
 800157a:	888b      	ldrh	r3, [r1, #4]
 800157c:	890e      	ldrh	r6, [r1, #8]
 800157e:	8402      	strh	r2, [r0, #32]
 8001580:	6987      	ldr	r7, [r0, #24]
 8001582:	4a21      	ldr	r2, [pc, #132]	; (8001608 <TIM_ICInit+0x138>)
 8001584:	0336      	lsls	r6, r6, #12
 8001586:	403a      	ands	r2, r7
 8001588:	4332      	orrs	r2, r6
 800158a:	021b      	lsls	r3, r3, #8
 800158c:	b292      	uxth	r2, r2
 800158e:	6a05      	ldr	r5, [r0, #32]
 8001590:	431a      	orrs	r2, r3
 8001592:	4b25      	ldr	r3, [pc, #148]	; (8001628 <TIM_ICInit+0x158>)
 8001594:	0124      	lsls	r4, r4, #4
 8001596:	402b      	ands	r3, r5
 8001598:	4323      	orrs	r3, r4
 800159a:	b29b      	uxth	r3, r3
 800159c:	2410      	movs	r4, #16
 800159e:	b292      	uxth	r2, r2
 80015a0:	4323      	orrs	r3, r4
 80015a2:	8302      	strh	r2, [r0, #24]
 80015a4:	8403      	strh	r3, [r0, #32]
 80015a6:	4a1a      	ldr	r2, [pc, #104]	; (8001610 <TIM_ICInit+0x140>)
 80015a8:	88cb      	ldrh	r3, [r1, #6]
 80015aa:	6981      	ldr	r1, [r0, #24]
 80015ac:	021b      	lsls	r3, r3, #8
 80015ae:	400a      	ands	r2, r1
 80015b0:	8302      	strh	r2, [r0, #24]
 80015b2:	6982      	ldr	r2, [r0, #24]
 80015b4:	b292      	uxth	r2, r2
 80015b6:	4313      	orrs	r3, r2
 80015b8:	b29b      	uxth	r3, r3
 80015ba:	8303      	strh	r3, [r0, #24]
 80015bc:	e7b7      	b.n	800152e <TIM_ICInit+0x5e>
 80015be:	6a05      	ldr	r5, [r0, #32]
 80015c0:	4a1a      	ldr	r2, [pc, #104]	; (800162c <TIM_ICInit+0x15c>)
 80015c2:	888c      	ldrh	r4, [r1, #4]
 80015c4:	402a      	ands	r2, r5
 80015c6:	884b      	ldrh	r3, [r1, #2]
 80015c8:	890e      	ldrh	r6, [r1, #8]
 80015ca:	8402      	strh	r2, [r0, #32]
 80015cc:	69c7      	ldr	r7, [r0, #28]
 80015ce:	4a12      	ldr	r2, [pc, #72]	; (8001618 <TIM_ICInit+0x148>)
 80015d0:	0136      	lsls	r6, r6, #4
 80015d2:	403a      	ands	r2, r7
 80015d4:	4332      	orrs	r2, r6
 80015d6:	b292      	uxth	r2, r2
 80015d8:	6a05      	ldr	r5, [r0, #32]
 80015da:	4322      	orrs	r2, r4
 80015dc:	4c14      	ldr	r4, [pc, #80]	; (8001630 <TIM_ICInit+0x160>)
 80015de:	021b      	lsls	r3, r3, #8
 80015e0:	402c      	ands	r4, r5
 80015e2:	431c      	orrs	r4, r3
 80015e4:	2380      	movs	r3, #128	; 0x80
 80015e6:	b2a4      	uxth	r4, r4
 80015e8:	005b      	lsls	r3, r3, #1
 80015ea:	4323      	orrs	r3, r4
 80015ec:	8382      	strh	r2, [r0, #28]
 80015ee:	8403      	strh	r3, [r0, #32]
 80015f0:	88ca      	ldrh	r2, [r1, #6]
 80015f2:	4b0b      	ldr	r3, [pc, #44]	; (8001620 <TIM_ICInit+0x150>)
 80015f4:	69c1      	ldr	r1, [r0, #28]
 80015f6:	400b      	ands	r3, r1
 80015f8:	8383      	strh	r3, [r0, #28]
 80015fa:	69c3      	ldr	r3, [r0, #28]
 80015fc:	b29b      	uxth	r3, r3
 80015fe:	4313      	orrs	r3, r2
 8001600:	8383      	strh	r3, [r0, #28]
 8001602:	e794      	b.n	800152e <TIM_ICInit+0x5e>
 8001604:	0000efff 	.word	0x0000efff
 8001608:	00000cff 	.word	0x00000cff
 800160c:	00005fff 	.word	0x00005fff
 8001610:	0000f3ff 	.word	0x0000f3ff
 8001614:	0000fffe 	.word	0x0000fffe
 8001618:	0000ff0c 	.word	0x0000ff0c
 800161c:	0000fff5 	.word	0x0000fff5
 8001620:	0000fff3 	.word	0x0000fff3
 8001624:	0000ffef 	.word	0x0000ffef
 8001628:	0000ff5f 	.word	0x0000ff5f
 800162c:	0000feff 	.word	0x0000feff
 8001630:	0000f5ff 	.word	0x0000f5ff

08001634 <TIM_ICStructInit>:
 8001634:	2300      	movs	r3, #0
 8001636:	2201      	movs	r2, #1
 8001638:	8003      	strh	r3, [r0, #0]
 800163a:	8043      	strh	r3, [r0, #2]
 800163c:	8082      	strh	r2, [r0, #4]
 800163e:	80c3      	strh	r3, [r0, #6]
 8001640:	8103      	strh	r3, [r0, #8]
 8001642:	4770      	bx	lr

08001644 <TIM_PWMIConfig>:
 8001644:	884b      	ldrh	r3, [r1, #2]
 8001646:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001648:	425c      	negs	r4, r3
 800164a:	415c      	adcs	r4, r3
 800164c:	0062      	lsls	r2, r4, #1
 800164e:	4657      	mov	r7, sl
 8001650:	4692      	mov	sl, r2
 8001652:	888a      	ldrh	r2, [r1, #4]
 8001654:	464e      	mov	r6, r9
 8001656:	4645      	mov	r5, r8
 8001658:	b4e0      	push	{r5, r6, r7}
 800165a:	1e55      	subs	r5, r2, #1
 800165c:	1e6e      	subs	r6, r5, #1
 800165e:	41b5      	sbcs	r5, r6
 8001660:	2602      	movs	r6, #2
 8001662:	1b75      	subs	r5, r6, r5
 8001664:	880e      	ldrh	r6, [r1, #0]
 8001666:	2e00      	cmp	r6, #0
 8001668:	d04e      	beq.n	8001708 <TIM_PWMIConfig+0xc4>
 800166a:	6a07      	ldr	r7, [r0, #32]
 800166c:	4e4f      	ldr	r6, [pc, #316]	; (80017ac <TIM_PWMIConfig+0x168>)
 800166e:	46bc      	mov	ip, r7
 8001670:	1c37      	adds	r7, r6, #0
 8001672:	4666      	mov	r6, ip
 8001674:	4037      	ands	r7, r6
 8001676:	890c      	ldrh	r4, [r1, #8]
 8001678:	8407      	strh	r7, [r0, #32]
 800167a:	6986      	ldr	r6, [r0, #24]
 800167c:	6a07      	ldr	r7, [r0, #32]
 800167e:	46b0      	mov	r8, r6
 8001680:	4e4b      	ldr	r6, [pc, #300]	; (80017b0 <TIM_PWMIConfig+0x16c>)
 8001682:	46bc      	mov	ip, r7
 8001684:	4647      	mov	r7, r8
 8001686:	4037      	ands	r7, r6
 8001688:	46b8      	mov	r8, r7
 800168a:	4646      	mov	r6, r8
 800168c:	0327      	lsls	r7, r4, #12
 800168e:	4337      	orrs	r7, r6
 8001690:	b2be      	uxth	r6, r7
 8001692:	4f48      	ldr	r7, [pc, #288]	; (80017b4 <TIM_PWMIConfig+0x170>)
 8001694:	0212      	lsls	r2, r2, #8
 8001696:	4332      	orrs	r2, r6
 8001698:	011e      	lsls	r6, r3, #4
 800169a:	1c3b      	adds	r3, r7, #0
 800169c:	4667      	mov	r7, ip
 800169e:	403b      	ands	r3, r7
 80016a0:	4333      	orrs	r3, r6
 80016a2:	b29b      	uxth	r3, r3
 80016a4:	2610      	movs	r6, #16
 80016a6:	4333      	orrs	r3, r6
 80016a8:	b292      	uxth	r2, r2
 80016aa:	8302      	strh	r2, [r0, #24]
 80016ac:	8403      	strh	r3, [r0, #32]
 80016ae:	4a42      	ldr	r2, [pc, #264]	; (80017b8 <TIM_PWMIConfig+0x174>)
 80016b0:	88cb      	ldrh	r3, [r1, #6]
 80016b2:	6981      	ldr	r1, [r0, #24]
 80016b4:	4657      	mov	r7, sl
 80016b6:	400a      	ands	r2, r1
 80016b8:	8302      	strh	r2, [r0, #24]
 80016ba:	6982      	ldr	r2, [r0, #24]
 80016bc:	0219      	lsls	r1, r3, #8
 80016be:	b292      	uxth	r2, r2
 80016c0:	430a      	orrs	r2, r1
 80016c2:	b292      	uxth	r2, r2
 80016c4:	8302      	strh	r2, [r0, #24]
 80016c6:	6a01      	ldr	r1, [r0, #32]
 80016c8:	4a3c      	ldr	r2, [pc, #240]	; (80017bc <TIM_PWMIConfig+0x178>)
 80016ca:	400a      	ands	r2, r1
 80016cc:	8402      	strh	r2, [r0, #32]
 80016ce:	6986      	ldr	r6, [r0, #24]
 80016d0:	0122      	lsls	r2, r4, #4
 80016d2:	4c3b      	ldr	r4, [pc, #236]	; (80017c0 <TIM_PWMIConfig+0x17c>)
 80016d4:	6a01      	ldr	r1, [r0, #32]
 80016d6:	4034      	ands	r4, r6
 80016d8:	4314      	orrs	r4, r2
 80016da:	4a3a      	ldr	r2, [pc, #232]	; (80017c4 <TIM_PWMIConfig+0x180>)
 80016dc:	b2a4      	uxth	r4, r4
 80016de:	400a      	ands	r2, r1
 80016e0:	2101      	movs	r1, #1
 80016e2:	430a      	orrs	r2, r1
 80016e4:	4325      	orrs	r5, r4
 80016e6:	4317      	orrs	r7, r2
 80016e8:	b2ad      	uxth	r5, r5
 80016ea:	8305      	strh	r5, [r0, #24]
 80016ec:	8407      	strh	r7, [r0, #32]
 80016ee:	6981      	ldr	r1, [r0, #24]
 80016f0:	4a35      	ldr	r2, [pc, #212]	; (80017c8 <TIM_PWMIConfig+0x184>)
 80016f2:	400a      	ands	r2, r1
 80016f4:	8302      	strh	r2, [r0, #24]
 80016f6:	6982      	ldr	r2, [r0, #24]
 80016f8:	b292      	uxth	r2, r2
 80016fa:	4313      	orrs	r3, r2
 80016fc:	8303      	strh	r3, [r0, #24]
 80016fe:	bc1c      	pop	{r2, r3, r4}
 8001700:	4690      	mov	r8, r2
 8001702:	4699      	mov	r9, r3
 8001704:	46a2      	mov	sl, r4
 8001706:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001708:	890e      	ldrh	r6, [r1, #8]
 800170a:	6a07      	ldr	r7, [r0, #32]
 800170c:	46b2      	mov	sl, r6
 800170e:	4e2b      	ldr	r6, [pc, #172]	; (80017bc <TIM_PWMIConfig+0x178>)
 8001710:	46bc      	mov	ip, r7
 8001712:	1c37      	adds	r7, r6, #0
 8001714:	4666      	mov	r6, ip
 8001716:	4037      	ands	r7, r6
 8001718:	8407      	strh	r7, [r0, #32]
 800171a:	6986      	ldr	r6, [r0, #24]
 800171c:	6a07      	ldr	r7, [r0, #32]
 800171e:	46b0      	mov	r8, r6
 8001720:	4e27      	ldr	r6, [pc, #156]	; (80017c0 <TIM_PWMIConfig+0x17c>)
 8001722:	46bc      	mov	ip, r7
 8001724:	4647      	mov	r7, r8
 8001726:	4037      	ands	r7, r6
 8001728:	46b8      	mov	r8, r7
 800172a:	4657      	mov	r7, sl
 800172c:	4646      	mov	r6, r8
 800172e:	013f      	lsls	r7, r7, #4
 8001730:	4337      	orrs	r7, r6
 8001732:	b2bf      	uxth	r7, r7
 8001734:	433a      	orrs	r2, r7
 8001736:	2601      	movs	r6, #1
 8001738:	4f22      	ldr	r7, [pc, #136]	; (80017c4 <TIM_PWMIConfig+0x180>)
 800173a:	4690      	mov	r8, r2
 800173c:	4662      	mov	r2, ip
 800173e:	46b4      	mov	ip, r6
 8001740:	4017      	ands	r7, r2
 8001742:	4662      	mov	r2, ip
 8001744:	4313      	orrs	r3, r2
 8001746:	433b      	orrs	r3, r7
 8001748:	b29b      	uxth	r3, r3
 800174a:	4646      	mov	r6, r8
 800174c:	8306      	strh	r6, [r0, #24]
 800174e:	8403      	strh	r3, [r0, #32]
 8001750:	4a1d      	ldr	r2, [pc, #116]	; (80017c8 <TIM_PWMIConfig+0x184>)
 8001752:	88cb      	ldrh	r3, [r1, #6]
 8001754:	6981      	ldr	r1, [r0, #24]
 8001756:	4656      	mov	r6, sl
 8001758:	400a      	ands	r2, r1
 800175a:	8302      	strh	r2, [r0, #24]
 800175c:	6982      	ldr	r2, [r0, #24]
 800175e:	022d      	lsls	r5, r5, #8
 8001760:	b292      	uxth	r2, r2
 8001762:	431a      	orrs	r2, r3
 8001764:	8302      	strh	r2, [r0, #24]
 8001766:	6a01      	ldr	r1, [r0, #32]
 8001768:	4a10      	ldr	r2, [pc, #64]	; (80017ac <TIM_PWMIConfig+0x168>)
 800176a:	021b      	lsls	r3, r3, #8
 800176c:	400a      	ands	r2, r1
 800176e:	8402      	strh	r2, [r0, #32]
 8001770:	6987      	ldr	r7, [r0, #24]
 8001772:	4a0f      	ldr	r2, [pc, #60]	; (80017b0 <TIM_PWMIConfig+0x16c>)
 8001774:	6a01      	ldr	r1, [r0, #32]
 8001776:	4017      	ands	r7, r2
 8001778:	0332      	lsls	r2, r6, #12
 800177a:	1c3e      	adds	r6, r7, #0
 800177c:	4316      	orrs	r6, r2
 800177e:	4a0d      	ldr	r2, [pc, #52]	; (80017b4 <TIM_PWMIConfig+0x170>)
 8001780:	b2b6      	uxth	r6, r6
 8001782:	4011      	ands	r1, r2
 8001784:	2210      	movs	r2, #16
 8001786:	4311      	orrs	r1, r2
 8001788:	4335      	orrs	r5, r6
 800178a:	0162      	lsls	r2, r4, #5
 800178c:	1c0c      	adds	r4, r1, #0
 800178e:	4314      	orrs	r4, r2
 8001790:	b2ad      	uxth	r5, r5
 8001792:	8305      	strh	r5, [r0, #24]
 8001794:	8404      	strh	r4, [r0, #32]
 8001796:	6981      	ldr	r1, [r0, #24]
 8001798:	4a07      	ldr	r2, [pc, #28]	; (80017b8 <TIM_PWMIConfig+0x174>)
 800179a:	400a      	ands	r2, r1
 800179c:	8302      	strh	r2, [r0, #24]
 800179e:	6982      	ldr	r2, [r0, #24]
 80017a0:	b292      	uxth	r2, r2
 80017a2:	4313      	orrs	r3, r2
 80017a4:	b29b      	uxth	r3, r3
 80017a6:	8303      	strh	r3, [r0, #24]
 80017a8:	e7a9      	b.n	80016fe <TIM_PWMIConfig+0xba>
 80017aa:	46c0      	nop			; (mov r8, r8)
 80017ac:	0000ffef 	.word	0x0000ffef
 80017b0:	00000cff 	.word	0x00000cff
 80017b4:	0000ff5f 	.word	0x0000ff5f
 80017b8:	0000f3ff 	.word	0x0000f3ff
 80017bc:	0000fffe 	.word	0x0000fffe
 80017c0:	0000ff0c 	.word	0x0000ff0c
 80017c4:	0000fff5 	.word	0x0000fff5
 80017c8:	0000fff3 	.word	0x0000fff3

080017cc <TIM_GetCapture1>:
 80017cc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80017ce:	4770      	bx	lr

080017d0 <TIM_GetCapture2>:
 80017d0:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80017d2:	4770      	bx	lr

080017d4 <TIM_GetCapture3>:
 80017d4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80017d6:	4770      	bx	lr

080017d8 <TIM_GetCapture4>:
 80017d8:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80017da:	4770      	bx	lr

080017dc <TIM_SetIC1Prescaler>:
 80017dc:	6982      	ldr	r2, [r0, #24]
 80017de:	4b04      	ldr	r3, [pc, #16]	; (80017f0 <TIM_SetIC1Prescaler+0x14>)
 80017e0:	4013      	ands	r3, r2
 80017e2:	8303      	strh	r3, [r0, #24]
 80017e4:	6983      	ldr	r3, [r0, #24]
 80017e6:	b29b      	uxth	r3, r3
 80017e8:	4319      	orrs	r1, r3
 80017ea:	8301      	strh	r1, [r0, #24]
 80017ec:	4770      	bx	lr
 80017ee:	46c0      	nop			; (mov r8, r8)
 80017f0:	0000fff3 	.word	0x0000fff3

080017f4 <TIM_SetIC2Prescaler>:
 80017f4:	6982      	ldr	r2, [r0, #24]
 80017f6:	4b05      	ldr	r3, [pc, #20]	; (800180c <TIM_SetIC2Prescaler+0x18>)
 80017f8:	0209      	lsls	r1, r1, #8
 80017fa:	4013      	ands	r3, r2
 80017fc:	8303      	strh	r3, [r0, #24]
 80017fe:	6983      	ldr	r3, [r0, #24]
 8001800:	b29b      	uxth	r3, r3
 8001802:	4319      	orrs	r1, r3
 8001804:	b289      	uxth	r1, r1
 8001806:	8301      	strh	r1, [r0, #24]
 8001808:	4770      	bx	lr
 800180a:	46c0      	nop			; (mov r8, r8)
 800180c:	0000f3ff 	.word	0x0000f3ff

08001810 <TIM_SetIC3Prescaler>:
 8001810:	69c2      	ldr	r2, [r0, #28]
 8001812:	4b04      	ldr	r3, [pc, #16]	; (8001824 <TIM_SetIC3Prescaler+0x14>)
 8001814:	4013      	ands	r3, r2
 8001816:	8383      	strh	r3, [r0, #28]
 8001818:	69c3      	ldr	r3, [r0, #28]
 800181a:	b29b      	uxth	r3, r3
 800181c:	4319      	orrs	r1, r3
 800181e:	8381      	strh	r1, [r0, #28]
 8001820:	4770      	bx	lr
 8001822:	46c0      	nop			; (mov r8, r8)
 8001824:	0000fff3 	.word	0x0000fff3

08001828 <TIM_SetIC4Prescaler>:
 8001828:	69c2      	ldr	r2, [r0, #28]
 800182a:	4b05      	ldr	r3, [pc, #20]	; (8001840 <TIM_SetIC4Prescaler+0x18>)
 800182c:	0209      	lsls	r1, r1, #8
 800182e:	4013      	ands	r3, r2
 8001830:	8383      	strh	r3, [r0, #28]
 8001832:	69c3      	ldr	r3, [r0, #28]
 8001834:	b29b      	uxth	r3, r3
 8001836:	4319      	orrs	r1, r3
 8001838:	b289      	uxth	r1, r1
 800183a:	8381      	strh	r1, [r0, #28]
 800183c:	4770      	bx	lr
 800183e:	46c0      	nop			; (mov r8, r8)
 8001840:	0000f3ff 	.word	0x0000f3ff

08001844 <TIM_ITConfig>:
 8001844:	68c3      	ldr	r3, [r0, #12]
 8001846:	b29b      	uxth	r3, r3
 8001848:	2a00      	cmp	r2, #0
 800184a:	d102      	bne.n	8001852 <TIM_ITConfig+0xe>
 800184c:	438b      	bics	r3, r1
 800184e:	8183      	strh	r3, [r0, #12]
 8001850:	4770      	bx	lr
 8001852:	4319      	orrs	r1, r3
 8001854:	8181      	strh	r1, [r0, #12]
 8001856:	e7fb      	b.n	8001850 <TIM_ITConfig+0xc>

08001858 <TIM_GenerateEvent>:
 8001858:	8281      	strh	r1, [r0, #20]
 800185a:	4770      	bx	lr

0800185c <TIM_GetFlagStatus>:
 800185c:	6900      	ldr	r0, [r0, #16]
 800185e:	4008      	ands	r0, r1
 8001860:	1e43      	subs	r3, r0, #1
 8001862:	4198      	sbcs	r0, r3
 8001864:	b2c0      	uxtb	r0, r0
 8001866:	4770      	bx	lr

08001868 <TIM_ClearFlag>:
 8001868:	43c9      	mvns	r1, r1
 800186a:	b289      	uxth	r1, r1
 800186c:	8201      	strh	r1, [r0, #16]
 800186e:	4770      	bx	lr

08001870 <TIM_GetITStatus>:
 8001870:	6903      	ldr	r3, [r0, #16]
 8001872:	68c0      	ldr	r0, [r0, #12]
 8001874:	b282      	uxth	r2, r0
 8001876:	2000      	movs	r0, #0
 8001878:	420b      	tst	r3, r1
 800187a:	d003      	beq.n	8001884 <TIM_GetITStatus+0x14>
 800187c:	4011      	ands	r1, r2
 800187e:	1e4a      	subs	r2, r1, #1
 8001880:	4191      	sbcs	r1, r2
 8001882:	b2c8      	uxtb	r0, r1
 8001884:	4770      	bx	lr
 8001886:	46c0      	nop			; (mov r8, r8)

08001888 <TIM_ClearITPendingBit>:
 8001888:	43c9      	mvns	r1, r1
 800188a:	b289      	uxth	r1, r1
 800188c:	8201      	strh	r1, [r0, #16]
 800188e:	4770      	bx	lr

08001890 <TIM_DMAConfig>:
 8001890:	4311      	orrs	r1, r2
 8001892:	2348      	movs	r3, #72	; 0x48
 8001894:	52c1      	strh	r1, [r0, r3]
 8001896:	4770      	bx	lr

08001898 <TIM_DMACmd>:
 8001898:	68c3      	ldr	r3, [r0, #12]
 800189a:	b29b      	uxth	r3, r3
 800189c:	2a00      	cmp	r2, #0
 800189e:	d102      	bne.n	80018a6 <TIM_DMACmd+0xe>
 80018a0:	438b      	bics	r3, r1
 80018a2:	8183      	strh	r3, [r0, #12]
 80018a4:	4770      	bx	lr
 80018a6:	4319      	orrs	r1, r3
 80018a8:	8181      	strh	r1, [r0, #12]
 80018aa:	e7fb      	b.n	80018a4 <TIM_DMACmd+0xc>

080018ac <TIM_SelectCCDMA>:
 80018ac:	2900      	cmp	r1, #0
 80018ae:	d104      	bne.n	80018ba <TIM_SelectCCDMA+0xe>
 80018b0:	6842      	ldr	r2, [r0, #4]
 80018b2:	4b05      	ldr	r3, [pc, #20]	; (80018c8 <TIM_SelectCCDMA+0x1c>)
 80018b4:	4013      	ands	r3, r2
 80018b6:	8083      	strh	r3, [r0, #4]
 80018b8:	4770      	bx	lr
 80018ba:	6843      	ldr	r3, [r0, #4]
 80018bc:	2208      	movs	r2, #8
 80018be:	b29b      	uxth	r3, r3
 80018c0:	4313      	orrs	r3, r2
 80018c2:	8083      	strh	r3, [r0, #4]
 80018c4:	e7f8      	b.n	80018b8 <TIM_SelectCCDMA+0xc>
 80018c6:	46c0      	nop			; (mov r8, r8)
 80018c8:	0000fff7 	.word	0x0000fff7

080018cc <TIM_InternalClockConfig>:
 80018cc:	6882      	ldr	r2, [r0, #8]
 80018ce:	4b02      	ldr	r3, [pc, #8]	; (80018d8 <TIM_InternalClockConfig+0xc>)
 80018d0:	4013      	ands	r3, r2
 80018d2:	8103      	strh	r3, [r0, #8]
 80018d4:	4770      	bx	lr
 80018d6:	46c0      	nop			; (mov r8, r8)
 80018d8:	0000fff8 	.word	0x0000fff8

080018dc <TIM_ITRxExternalClockConfig>:
 80018dc:	6882      	ldr	r2, [r0, #8]
 80018de:	4b05      	ldr	r3, [pc, #20]	; (80018f4 <TIM_ITRxExternalClockConfig+0x18>)
 80018e0:	4013      	ands	r3, r2
 80018e2:	4319      	orrs	r1, r3
 80018e4:	8101      	strh	r1, [r0, #8]
 80018e6:	6883      	ldr	r3, [r0, #8]
 80018e8:	2207      	movs	r2, #7
 80018ea:	b29b      	uxth	r3, r3
 80018ec:	4313      	orrs	r3, r2
 80018ee:	8103      	strh	r3, [r0, #8]
 80018f0:	4770      	bx	lr
 80018f2:	46c0      	nop			; (mov r8, r8)
 80018f4:	0000ff8f 	.word	0x0000ff8f

080018f8 <TIM_TIxExternalClockConfig>:
 80018f8:	b570      	push	{r4, r5, r6, lr}
 80018fa:	6a05      	ldr	r5, [r0, #32]
 80018fc:	2960      	cmp	r1, #96	; 0x60
 80018fe:	d01e      	beq.n	800193e <TIM_TIxExternalClockConfig+0x46>
 8001900:	4c1b      	ldr	r4, [pc, #108]	; (8001970 <TIM_TIxExternalClockConfig+0x78>)
 8001902:	011b      	lsls	r3, r3, #4
 8001904:	402c      	ands	r4, r5
 8001906:	8404      	strh	r4, [r0, #32]
 8001908:	6985      	ldr	r5, [r0, #24]
 800190a:	4c1a      	ldr	r4, [pc, #104]	; (8001974 <TIM_TIxExternalClockConfig+0x7c>)
 800190c:	6a06      	ldr	r6, [r0, #32]
 800190e:	4025      	ands	r5, r4
 8001910:	2401      	movs	r4, #1
 8001912:	4325      	orrs	r5, r4
 8001914:	b2ad      	uxth	r5, r5
 8001916:	432b      	orrs	r3, r5
 8001918:	4d17      	ldr	r5, [pc, #92]	; (8001978 <TIM_TIxExternalClockConfig+0x80>)
 800191a:	b29b      	uxth	r3, r3
 800191c:	4035      	ands	r5, r6
 800191e:	432c      	orrs	r4, r5
 8001920:	b2a4      	uxth	r4, r4
 8001922:	4322      	orrs	r2, r4
 8001924:	8303      	strh	r3, [r0, #24]
 8001926:	8402      	strh	r2, [r0, #32]
 8001928:	6882      	ldr	r2, [r0, #8]
 800192a:	4b14      	ldr	r3, [pc, #80]	; (800197c <TIM_TIxExternalClockConfig+0x84>)
 800192c:	4013      	ands	r3, r2
 800192e:	4319      	orrs	r1, r3
 8001930:	8101      	strh	r1, [r0, #8]
 8001932:	6883      	ldr	r3, [r0, #8]
 8001934:	2207      	movs	r2, #7
 8001936:	b29b      	uxth	r3, r3
 8001938:	4313      	orrs	r3, r2
 800193a:	8103      	strh	r3, [r0, #8]
 800193c:	bd70      	pop	{r4, r5, r6, pc}
 800193e:	4c10      	ldr	r4, [pc, #64]	; (8001980 <TIM_TIxExternalClockConfig+0x88>)
 8001940:	402c      	ands	r4, r5
 8001942:	8404      	strh	r4, [r0, #32]
 8001944:	6986      	ldr	r6, [r0, #24]
 8001946:	4c0f      	ldr	r4, [pc, #60]	; (8001984 <TIM_TIxExternalClockConfig+0x8c>)
 8001948:	6a05      	ldr	r5, [r0, #32]
 800194a:	4026      	ands	r6, r4
 800194c:	2480      	movs	r4, #128	; 0x80
 800194e:	0064      	lsls	r4, r4, #1
 8001950:	4326      	orrs	r6, r4
 8001952:	031c      	lsls	r4, r3, #12
 8001954:	1c33      	adds	r3, r6, #0
 8001956:	4323      	orrs	r3, r4
 8001958:	4c0b      	ldr	r4, [pc, #44]	; (8001988 <TIM_TIxExternalClockConfig+0x90>)
 800195a:	b29b      	uxth	r3, r3
 800195c:	4025      	ands	r5, r4
 800195e:	2410      	movs	r4, #16
 8001960:	4325      	orrs	r5, r4
 8001962:	0114      	lsls	r4, r2, #4
 8001964:	1c2a      	adds	r2, r5, #0
 8001966:	4322      	orrs	r2, r4
 8001968:	b292      	uxth	r2, r2
 800196a:	8303      	strh	r3, [r0, #24]
 800196c:	8402      	strh	r2, [r0, #32]
 800196e:	e7db      	b.n	8001928 <TIM_TIxExternalClockConfig+0x30>
 8001970:	0000fffe 	.word	0x0000fffe
 8001974:	0000ff0c 	.word	0x0000ff0c
 8001978:	0000fff5 	.word	0x0000fff5
 800197c:	0000ff8f 	.word	0x0000ff8f
 8001980:	0000ffef 	.word	0x0000ffef
 8001984:	00000cff 	.word	0x00000cff
 8001988:	0000ff5f 	.word	0x0000ff5f

0800198c <TIM_ETRClockMode1Config>:
 800198c:	b510      	push	{r4, lr}
 800198e:	021b      	lsls	r3, r3, #8
 8001990:	6884      	ldr	r4, [r0, #8]
 8001992:	431a      	orrs	r2, r3
 8001994:	23ff      	movs	r3, #255	; 0xff
 8001996:	401c      	ands	r4, r3
 8001998:	4322      	orrs	r2, r4
 800199a:	b292      	uxth	r2, r2
 800199c:	4311      	orrs	r1, r2
 800199e:	8101      	strh	r1, [r0, #8]
 80019a0:	6882      	ldr	r2, [r0, #8]
 80019a2:	4b03      	ldr	r3, [pc, #12]	; (80019b0 <TIM_ETRClockMode1Config+0x24>)
 80019a4:	4013      	ands	r3, r2
 80019a6:	2277      	movs	r2, #119	; 0x77
 80019a8:	4313      	orrs	r3, r2
 80019aa:	8103      	strh	r3, [r0, #8]
 80019ac:	bd10      	pop	{r4, pc}
 80019ae:	46c0      	nop			; (mov r8, r8)
 80019b0:	0000ff88 	.word	0x0000ff88

080019b4 <TIM_ETRClockMode2Config>:
 80019b4:	b510      	push	{r4, lr}
 80019b6:	021b      	lsls	r3, r3, #8
 80019b8:	6884      	ldr	r4, [r0, #8]
 80019ba:	431a      	orrs	r2, r3
 80019bc:	23ff      	movs	r3, #255	; 0xff
 80019be:	401c      	ands	r4, r3
 80019c0:	4322      	orrs	r2, r4
 80019c2:	b292      	uxth	r2, r2
 80019c4:	4311      	orrs	r1, r2
 80019c6:	8101      	strh	r1, [r0, #8]
 80019c8:	6882      	ldr	r2, [r0, #8]
 80019ca:	2380      	movs	r3, #128	; 0x80
 80019cc:	b292      	uxth	r2, r2
 80019ce:	01db      	lsls	r3, r3, #7
 80019d0:	4313      	orrs	r3, r2
 80019d2:	8103      	strh	r3, [r0, #8]
 80019d4:	bd10      	pop	{r4, pc}
 80019d6:	46c0      	nop			; (mov r8, r8)

080019d8 <TIM_SelectInputTrigger>:
 80019d8:	6882      	ldr	r2, [r0, #8]
 80019da:	4b02      	ldr	r3, [pc, #8]	; (80019e4 <TIM_SelectInputTrigger+0xc>)
 80019dc:	4013      	ands	r3, r2
 80019de:	4319      	orrs	r1, r3
 80019e0:	8101      	strh	r1, [r0, #8]
 80019e2:	4770      	bx	lr
 80019e4:	0000ff8f 	.word	0x0000ff8f

080019e8 <TIM_SelectOutputTrigger>:
 80019e8:	6842      	ldr	r2, [r0, #4]
 80019ea:	4b04      	ldr	r3, [pc, #16]	; (80019fc <TIM_SelectOutputTrigger+0x14>)
 80019ec:	4013      	ands	r3, r2
 80019ee:	8083      	strh	r3, [r0, #4]
 80019f0:	6843      	ldr	r3, [r0, #4]
 80019f2:	b29b      	uxth	r3, r3
 80019f4:	4319      	orrs	r1, r3
 80019f6:	8081      	strh	r1, [r0, #4]
 80019f8:	4770      	bx	lr
 80019fa:	46c0      	nop			; (mov r8, r8)
 80019fc:	0000ff8f 	.word	0x0000ff8f

08001a00 <TIM_SelectSlaveMode>:
 8001a00:	6882      	ldr	r2, [r0, #8]
 8001a02:	4b04      	ldr	r3, [pc, #16]	; (8001a14 <TIM_SelectSlaveMode+0x14>)
 8001a04:	4013      	ands	r3, r2
 8001a06:	8103      	strh	r3, [r0, #8]
 8001a08:	6883      	ldr	r3, [r0, #8]
 8001a0a:	b29b      	uxth	r3, r3
 8001a0c:	4319      	orrs	r1, r3
 8001a0e:	8101      	strh	r1, [r0, #8]
 8001a10:	4770      	bx	lr
 8001a12:	46c0      	nop			; (mov r8, r8)
 8001a14:	0000fff8 	.word	0x0000fff8

08001a18 <TIM_SelectMasterSlaveMode>:
 8001a18:	6882      	ldr	r2, [r0, #8]
 8001a1a:	4b04      	ldr	r3, [pc, #16]	; (8001a2c <TIM_SelectMasterSlaveMode+0x14>)
 8001a1c:	4013      	ands	r3, r2
 8001a1e:	8103      	strh	r3, [r0, #8]
 8001a20:	6883      	ldr	r3, [r0, #8]
 8001a22:	b29b      	uxth	r3, r3
 8001a24:	4319      	orrs	r1, r3
 8001a26:	8101      	strh	r1, [r0, #8]
 8001a28:	4770      	bx	lr
 8001a2a:	46c0      	nop			; (mov r8, r8)
 8001a2c:	0000ff7f 	.word	0x0000ff7f

08001a30 <TIM_ETRConfig>:
 8001a30:	b530      	push	{r4, r5, lr}
 8001a32:	6885      	ldr	r5, [r0, #8]
 8001a34:	24ff      	movs	r4, #255	; 0xff
 8001a36:	402c      	ands	r4, r5
 8001a38:	4321      	orrs	r1, r4
 8001a3a:	430a      	orrs	r2, r1
 8001a3c:	021b      	lsls	r3, r3, #8
 8001a3e:	431a      	orrs	r2, r3
 8001a40:	b292      	uxth	r2, r2
 8001a42:	8102      	strh	r2, [r0, #8]
 8001a44:	bd30      	pop	{r4, r5, pc}
 8001a46:	46c0      	nop			; (mov r8, r8)

08001a48 <TIM_EncoderInterfaceConfig>:
 8001a48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a4a:	6887      	ldr	r7, [r0, #8]
 8001a4c:	4c09      	ldr	r4, [pc, #36]	; (8001a74 <TIM_EncoderInterfaceConfig+0x2c>)
 8001a4e:	6985      	ldr	r5, [r0, #24]
 8001a50:	403c      	ands	r4, r7
 8001a52:	4321      	orrs	r1, r4
 8001a54:	4c08      	ldr	r4, [pc, #32]	; (8001a78 <TIM_EncoderInterfaceConfig+0x30>)
 8001a56:	6a06      	ldr	r6, [r0, #32]
 8001a58:	402c      	ands	r4, r5
 8001a5a:	2502      	movs	r5, #2
 8001a5c:	35ff      	adds	r5, #255	; 0xff
 8001a5e:	432c      	orrs	r4, r5
 8001a60:	4d06      	ldr	r5, [pc, #24]	; (8001a7c <TIM_EncoderInterfaceConfig+0x34>)
 8001a62:	011b      	lsls	r3, r3, #4
 8001a64:	4035      	ands	r5, r6
 8001a66:	432a      	orrs	r2, r5
 8001a68:	431a      	orrs	r2, r3
 8001a6a:	b292      	uxth	r2, r2
 8001a6c:	8101      	strh	r1, [r0, #8]
 8001a6e:	8304      	strh	r4, [r0, #24]
 8001a70:	8402      	strh	r2, [r0, #32]
 8001a72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a74:	0000fff8 	.word	0x0000fff8
 8001a78:	0000fcfc 	.word	0x0000fcfc
 8001a7c:	0000ffdd 	.word	0x0000ffdd

08001a80 <TIM_SelectHallSensor>:
 8001a80:	2900      	cmp	r1, #0
 8001a82:	d104      	bne.n	8001a8e <TIM_SelectHallSensor+0xe>
 8001a84:	6842      	ldr	r2, [r0, #4]
 8001a86:	4b05      	ldr	r3, [pc, #20]	; (8001a9c <TIM_SelectHallSensor+0x1c>)
 8001a88:	4013      	ands	r3, r2
 8001a8a:	8083      	strh	r3, [r0, #4]
 8001a8c:	4770      	bx	lr
 8001a8e:	6843      	ldr	r3, [r0, #4]
 8001a90:	2280      	movs	r2, #128	; 0x80
 8001a92:	b29b      	uxth	r3, r3
 8001a94:	4313      	orrs	r3, r2
 8001a96:	8083      	strh	r3, [r0, #4]
 8001a98:	e7f8      	b.n	8001a8c <TIM_SelectHallSensor+0xc>
 8001a9a:	46c0      	nop			; (mov r8, r8)
 8001a9c:	0000ff7f 	.word	0x0000ff7f

08001aa0 <TIM_RemapConfig>:
 8001aa0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8001aa2:	0c0b      	lsrs	r3, r1, #16
 8001aa4:	401a      	ands	r2, r3
 8001aa6:	2350      	movs	r3, #80	; 0x50
 8001aa8:	52c2      	strh	r2, [r0, r3]
 8001aaa:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8001aac:	4311      	orrs	r1, r2
 8001aae:	b289      	uxth	r1, r1
 8001ab0:	52c1      	strh	r1, [r0, r3]
 8001ab2:	4770      	bx	lr

08001ab4 <__aeabi_uidiv>:
 8001ab4:	2900      	cmp	r1, #0
 8001ab6:	d034      	beq.n	8001b22 <.udivsi3_skip_div0_test+0x6a>

08001ab8 <.udivsi3_skip_div0_test>:
 8001ab8:	2301      	movs	r3, #1
 8001aba:	2200      	movs	r2, #0
 8001abc:	b410      	push	{r4}
 8001abe:	4288      	cmp	r0, r1
 8001ac0:	d32c      	bcc.n	8001b1c <.udivsi3_skip_div0_test+0x64>
 8001ac2:	2401      	movs	r4, #1
 8001ac4:	0724      	lsls	r4, r4, #28
 8001ac6:	42a1      	cmp	r1, r4
 8001ac8:	d204      	bcs.n	8001ad4 <.udivsi3_skip_div0_test+0x1c>
 8001aca:	4281      	cmp	r1, r0
 8001acc:	d202      	bcs.n	8001ad4 <.udivsi3_skip_div0_test+0x1c>
 8001ace:	0109      	lsls	r1, r1, #4
 8001ad0:	011b      	lsls	r3, r3, #4
 8001ad2:	e7f8      	b.n	8001ac6 <.udivsi3_skip_div0_test+0xe>
 8001ad4:	00e4      	lsls	r4, r4, #3
 8001ad6:	42a1      	cmp	r1, r4
 8001ad8:	d204      	bcs.n	8001ae4 <.udivsi3_skip_div0_test+0x2c>
 8001ada:	4281      	cmp	r1, r0
 8001adc:	d202      	bcs.n	8001ae4 <.udivsi3_skip_div0_test+0x2c>
 8001ade:	0049      	lsls	r1, r1, #1
 8001ae0:	005b      	lsls	r3, r3, #1
 8001ae2:	e7f8      	b.n	8001ad6 <.udivsi3_skip_div0_test+0x1e>
 8001ae4:	4288      	cmp	r0, r1
 8001ae6:	d301      	bcc.n	8001aec <.udivsi3_skip_div0_test+0x34>
 8001ae8:	1a40      	subs	r0, r0, r1
 8001aea:	431a      	orrs	r2, r3
 8001aec:	084c      	lsrs	r4, r1, #1
 8001aee:	42a0      	cmp	r0, r4
 8001af0:	d302      	bcc.n	8001af8 <.udivsi3_skip_div0_test+0x40>
 8001af2:	1b00      	subs	r0, r0, r4
 8001af4:	085c      	lsrs	r4, r3, #1
 8001af6:	4322      	orrs	r2, r4
 8001af8:	088c      	lsrs	r4, r1, #2
 8001afa:	42a0      	cmp	r0, r4
 8001afc:	d302      	bcc.n	8001b04 <.udivsi3_skip_div0_test+0x4c>
 8001afe:	1b00      	subs	r0, r0, r4
 8001b00:	089c      	lsrs	r4, r3, #2
 8001b02:	4322      	orrs	r2, r4
 8001b04:	08cc      	lsrs	r4, r1, #3
 8001b06:	42a0      	cmp	r0, r4
 8001b08:	d302      	bcc.n	8001b10 <.udivsi3_skip_div0_test+0x58>
 8001b0a:	1b00      	subs	r0, r0, r4
 8001b0c:	08dc      	lsrs	r4, r3, #3
 8001b0e:	4322      	orrs	r2, r4
 8001b10:	2800      	cmp	r0, #0
 8001b12:	d003      	beq.n	8001b1c <.udivsi3_skip_div0_test+0x64>
 8001b14:	091b      	lsrs	r3, r3, #4
 8001b16:	d001      	beq.n	8001b1c <.udivsi3_skip_div0_test+0x64>
 8001b18:	0909      	lsrs	r1, r1, #4
 8001b1a:	e7e3      	b.n	8001ae4 <.udivsi3_skip_div0_test+0x2c>
 8001b1c:	1c10      	adds	r0, r2, #0
 8001b1e:	bc10      	pop	{r4}
 8001b20:	4770      	bx	lr
 8001b22:	2800      	cmp	r0, #0
 8001b24:	d001      	beq.n	8001b2a <.udivsi3_skip_div0_test+0x72>
 8001b26:	2000      	movs	r0, #0
 8001b28:	43c0      	mvns	r0, r0
 8001b2a:	b407      	push	{r0, r1, r2}
 8001b2c:	4802      	ldr	r0, [pc, #8]	; (8001b38 <.udivsi3_skip_div0_test+0x80>)
 8001b2e:	a102      	add	r1, pc, #8	; (adr r1, 8001b38 <.udivsi3_skip_div0_test+0x80>)
 8001b30:	1840      	adds	r0, r0, r1
 8001b32:	9002      	str	r0, [sp, #8]
 8001b34:	bd03      	pop	{r0, r1, pc}
 8001b36:	46c0      	nop			; (mov r8, r8)
 8001b38:	00000019 	.word	0x00000019

08001b3c <__aeabi_uidivmod>:
 8001b3c:	2900      	cmp	r1, #0
 8001b3e:	d0f0      	beq.n	8001b22 <.udivsi3_skip_div0_test+0x6a>
 8001b40:	b503      	push	{r0, r1, lr}
 8001b42:	f7ff ffb9 	bl	8001ab8 <.udivsi3_skip_div0_test>
 8001b46:	bc0e      	pop	{r1, r2, r3}
 8001b48:	4342      	muls	r2, r0
 8001b4a:	1a89      	subs	r1, r1, r2
 8001b4c:	4718      	bx	r3
 8001b4e:	46c0      	nop			; (mov r8, r8)

08001b50 <__aeabi_idiv0>:
 8001b50:	4770      	bx	lr
 8001b52:	46c0      	nop			; (mov r8, r8)

08001b54 <debugLights>:
    }
  }

}

void debugLights(){
 8001b54:	b510      	push	{r4, lr}

  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);
 8001b56:	2101      	movs	r1, #1
 8001b58:	2002      	movs	r0, #2
 8001b5a:	f7ff f837 	bl	8000bcc <RCC_AHBPeriphClockCmd>

  GPIO_StructInit(&GPIO_InitStructure);
 8001b5e:	4c07      	ldr	r4, [pc, #28]	; (8001b7c <debugLights+0x28>)
 8001b60:	1c20      	adds	r0, r4, #0
 8001b62:	f7fe fe1b 	bl	800079c <GPIO_StructInit>
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7; // green led
 8001b66:	2380      	movs	r3, #128	; 0x80
 8001b68:	6023      	str	r3, [r4, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
 8001b6a:	4805      	ldr	r0, [pc, #20]	; (8001b80 <debugLights+0x2c>)

  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);

  GPIO_StructInit(&GPIO_InitStructure);
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7; // green led
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8001b6c:	2301      	movs	r3, #1
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
 8001b6e:	1c21      	adds	r1, r4, #0

  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);

  GPIO_StructInit(&GPIO_InitStructure);
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7; // green led
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8001b70:	7123      	strb	r3, [r4, #4]
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
 8001b72:	7163      	strb	r3, [r4, #5]
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8001b74:	71e3      	strb	r3, [r4, #7]
  GPIO_Init(GPIOB, &GPIO_InitStructure);
 8001b76:	f7fe fdb9 	bl	80006ec <GPIO_Init>

}
 8001b7a:	bd10      	pop	{r4, pc}
 8001b7c:	20000040 	.word	0x20000040
 8001b80:	40020400 	.word	0x40020400

08001b84 <TIM2_config>:

void TIM2_config(){

  /* TIM2 Configuration ------------------------------------------------------*/
  /* TIM2 Periph clock enable */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
 8001b84:	2001      	movs	r0, #1
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
  GPIO_Init(GPIOB, &GPIO_InitStructure);

}

void TIM2_config(){
 8001b86:	b538      	push	{r3, r4, r5, lr}

  /* TIM2 Configuration ------------------------------------------------------*/
  /* TIM2 Periph clock enable */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
 8001b88:	1c01      	adds	r1, r0, #0
 8001b8a:	f7ff f837 	bl	8000bfc <RCC_APB1PeriphClockCmd>
  /* Time base configuration */
  TIM_TimeBaseStructInit(&TIM_TimeBaseStructure); 
 8001b8e:	4c0c      	ldr	r4, [pc, #48]	; (8001bc0 <TIM2_config+0x3c>)
  TIM_TimeBaseStructure.TIM_Period = 255;          
  TIM_TimeBaseStructure.TIM_Prescaler = 0;       
  TIM_TimeBaseStructure.TIM_ClockDivision = 0;    
  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  
  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 8001b90:	2580      	movs	r5, #128	; 0x80

  /* TIM2 Configuration ------------------------------------------------------*/
  /* TIM2 Periph clock enable */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
  /* Time base configuration */
  TIM_TimeBaseStructInit(&TIM_TimeBaseStructure); 
 8001b92:	1c20      	adds	r0, r4, #0
 8001b94:	f7ff fa92 	bl	80010bc <TIM_TimeBaseStructInit>
  TIM_TimeBaseStructure.TIM_Period = 255;          
  TIM_TimeBaseStructure.TIM_Prescaler = 0;       
  TIM_TimeBaseStructure.TIM_ClockDivision = 0;    
  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  
  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 8001b98:	05ed      	lsls	r5, r5, #23
  /* TIM2 Configuration ------------------------------------------------------*/
  /* TIM2 Periph clock enable */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
  /* Time base configuration */
  TIM_TimeBaseStructInit(&TIM_TimeBaseStructure); 
  TIM_TimeBaseStructure.TIM_Period = 255;          
 8001b9a:	23ff      	movs	r3, #255	; 0xff
  TIM_TimeBaseStructure.TIM_Prescaler = 0;       
  TIM_TimeBaseStructure.TIM_ClockDivision = 0;    
  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  
  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 8001b9c:	1c28      	adds	r0, r5, #0
  /* TIM2 Configuration ------------------------------------------------------*/
  /* TIM2 Periph clock enable */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
  /* Time base configuration */
  TIM_TimeBaseStructInit(&TIM_TimeBaseStructure); 
  TIM_TimeBaseStructure.TIM_Period = 255;          
 8001b9e:	6063      	str	r3, [r4, #4]
  TIM_TimeBaseStructure.TIM_Prescaler = 0;       
  TIM_TimeBaseStructure.TIM_ClockDivision = 0;    
  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  
  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 8001ba0:	1c21      	adds	r1, r4, #0
  /* TIM2 Periph clock enable */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
  /* Time base configuration */
  TIM_TimeBaseStructInit(&TIM_TimeBaseStructure); 
  TIM_TimeBaseStructure.TIM_Period = 255;          
  TIM_TimeBaseStructure.TIM_Prescaler = 0;       
 8001ba2:	2300      	movs	r3, #0
 8001ba4:	8023      	strh	r3, [r4, #0]
  TIM_TimeBaseStructure.TIM_ClockDivision = 0;    
 8001ba6:	8123      	strh	r3, [r4, #8]
  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  
 8001ba8:	8063      	strh	r3, [r4, #2]
  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 8001baa:	f7ff fa53 	bl	8001054 <TIM_TimeBaseInit>

  /* TIM2 TRGO selection */
  TIM_SelectOutputTrigger(TIM2, TIM_TRGOSource_Update);
 8001bae:	1c28      	adds	r0, r5, #0
 8001bb0:	2120      	movs	r1, #32
 8001bb2:	f7ff ff19 	bl	80019e8 <TIM_SelectOutputTrigger>
  
  /* TIM2 enable counter */
  TIM_Cmd(TIM2, ENABLE);
 8001bb6:	1c28      	adds	r0, r5, #0
 8001bb8:	2101      	movs	r1, #1
 8001bba:	f7ff fae5 	bl	8001188 <TIM_Cmd>
  
}
 8001bbe:	bd38      	pop	{r3, r4, r5, pc}
 8001bc0:	20000024 	.word	0x20000024

08001bc4 <EXTI15_10_Config>:

//configure line pa12 as interrupt
void EXTI15_10_Config(void)
{
  /* Enable GPIOx clock */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 8001bc4:	2001      	movs	r0, #1
  
}

//configure line pa12 as interrupt
void EXTI15_10_Config(void)
{
 8001bc6:	b538      	push	{r3, r4, r5, lr}
  /* Enable GPIOx clock */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 8001bc8:	1c01      	adds	r1, r0, #0
 8001bca:	f7fe ffff 	bl	8000bcc <RCC_AHBPeriphClockCmd>
  /* Configure PA12 pin as input floating */
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
 8001bce:	2580      	movs	r5, #128	; 0x80
void EXTI15_10_Config(void)
{
  /* Enable GPIOx clock */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
  /* Configure PA12 pin as input floating */
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8001bd0:	4911      	ldr	r1, [pc, #68]	; (8001c18 <EXTI15_10_Config+0x54>)
 8001bd2:	2400      	movs	r4, #0
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
 8001bd4:	016d      	lsls	r5, r5, #5
  GPIO_Init(GPIOA, &GPIO_InitStructure);
 8001bd6:	4811      	ldr	r0, [pc, #68]	; (8001c1c <EXTI15_10_Config+0x58>)
  /* Enable GPIOx clock */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
  /* Configure PA12 pin as input floating */
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
 8001bd8:	600d      	str	r5, [r1, #0]
void EXTI15_10_Config(void)
{
  /* Enable GPIOx clock */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
  /* Configure PA12 pin as input floating */
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8001bda:	710c      	strb	r4, [r1, #4]
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 8001bdc:	71cc      	strb	r4, [r1, #7]
  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
  GPIO_Init(GPIOA, &GPIO_InitStructure);
 8001bde:	f7fe fd85 	bl	80006ec <GPIO_Init>

  /* Enable SYSCFG clock */
  RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
 8001be2:	2001      	movs	r0, #1
 8001be4:	1c01      	adds	r1, r0, #0
 8001be6:	f7fe fffd 	bl	8000be4 <RCC_APB2PeriphClockCmd>
  /* Config PA5 pin as interrupt and connect it to EXTI_Line12*/
  SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA, EXTI_PinSource12);
 8001bea:	210c      	movs	r1, #12
 8001bec:	1c20      	adds	r0, r4, #0
 8001bee:	f7ff f8c5 	bl	8000d7c <SYSCFG_EXTILineConfig>

  EXTI_InitStructure.EXTI_Line = EXTI_Line12;
 8001bf2:	480b      	ldr	r0, [pc, #44]	; (8001c20 <EXTI15_10_Config+0x5c>)
  EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
  EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;  
 8001bf4:	230c      	movs	r3, #12
  RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
  /* Config PA5 pin as interrupt and connect it to EXTI_Line12*/
  SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA, EXTI_PinSource12);

  EXTI_InitStructure.EXTI_Line = EXTI_Line12;
  EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 8001bf6:	7104      	strb	r4, [r0, #4]
  EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;  
  EXTI_InitStructure.EXTI_LineCmd = ENABLE;
 8001bf8:	2401      	movs	r4, #1
  /* Enable SYSCFG clock */
  RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
  /* Config PA5 pin as interrupt and connect it to EXTI_Line12*/
  SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA, EXTI_PinSource12);

  EXTI_InitStructure.EXTI_Line = EXTI_Line12;
 8001bfa:	6005      	str	r5, [r0, #0]
  EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
  EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;  
 8001bfc:	7143      	strb	r3, [r0, #5]
  EXTI_InitStructure.EXTI_LineCmd = ENABLE;
 8001bfe:	7184      	strb	r4, [r0, #6]
  EXTI_Init(&EXTI_InitStructure);
 8001c00:	f7fe fc9a 	bl	8000538 <EXTI_Init>

  NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;
 8001c04:	4807      	ldr	r0, [pc, #28]	; (8001c24 <EXTI15_10_Config+0x60>)
 8001c06:	2328      	movs	r3, #40	; 0x28
 8001c08:	7003      	strb	r3, [r0, #0]
  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0F;
 8001c0a:	230f      	movs	r3, #15
 8001c0c:	7043      	strb	r3, [r0, #1]
  NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0F;
 8001c0e:	7083      	strb	r3, [r0, #2]
  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8001c10:	70c4      	strb	r4, [r0, #3]
  NVIC_Init(&NVIC_InitStructure);
 8001c12:	f7fe fe21 	bl	8000858 <NVIC_Init>
}
 8001c16:	bd38      	pop	{r3, r4, r5, pc}
 8001c18:	20000040 	.word	0x20000040
 8001c1c:	40020000 	.word	0x40020000
 8001c20:	2000004c 	.word	0x2000004c
 8001c24:	20000048 	.word	0x20000048

08001c28 <DAC_PreConfig>:
  *                           enable DAC clock, enable DMA1 clock
  * @param  None
  * @retval None
  */
void DAC_PreConfig(void)
{
 8001c28:	b507      	push	{r0, r1, r2, lr}
  GPIO_InitTypeDef GPIO_InitStructure;

  /* DMA1 clock enable (to be used with DAC) */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1, ENABLE);
 8001c2a:	2080      	movs	r0, #128	; 0x80
 8001c2c:	0440      	lsls	r0, r0, #17
 8001c2e:	2101      	movs	r1, #1
 8001c30:	f7fe ffcc 	bl	8000bcc <RCC_AHBPeriphClockCmd>

  /* DAC Periph clock enable */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE);
 8001c34:	2080      	movs	r0, #128	; 0x80
 8001c36:	0580      	lsls	r0, r0, #22
 8001c38:	2101      	movs	r1, #1
 8001c3a:	f7fe ffdf 	bl	8000bfc <RCC_APB1PeriphClockCmd>

  /* GPIOA clock enable */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 8001c3e:	2001      	movs	r0, #1
 8001c40:	1c01      	adds	r1, r0, #0
 8001c42:	f7fe ffc3 	bl	8000bcc <RCC_AHBPeriphClockCmd>
  /* Configure PA.04 (DAC_OUT1), PA.05 (DAC_OUT2) as analog */
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_4 | GPIO_Pin_5;
 8001c46:	2330      	movs	r3, #48	; 0x30
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 8001c48:	466a      	mov	r2, sp
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE);

  /* GPIOA clock enable */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
  /* Configure PA.04 (DAC_OUT1), PA.05 (DAC_OUT2) as analog */
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_4 | GPIO_Pin_5;
 8001c4a:	9300      	str	r3, [sp, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 8001c4c:	2303      	movs	r3, #3
 8001c4e:	7113      	strb	r3, [r2, #4]
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
  GPIO_Init(GPIOA, &GPIO_InitStructure);
 8001c50:	4803      	ldr	r0, [pc, #12]	; (8001c60 <DAC_PreConfig+0x38>)
  /* GPIOA clock enable */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
  /* Configure PA.04 (DAC_OUT1), PA.05 (DAC_OUT2) as analog */
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_4 | GPIO_Pin_5;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 8001c52:	2300      	movs	r3, #0
  GPIO_Init(GPIOA, &GPIO_InitStructure);
 8001c54:	4669      	mov	r1, sp
  /* GPIOA clock enable */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
  /* Configure PA.04 (DAC_OUT1), PA.05 (DAC_OUT2) as analog */
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_4 | GPIO_Pin_5;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 8001c56:	71d3      	strb	r3, [r2, #7]
  GPIO_Init(GPIOA, &GPIO_InitStructure);
 8001c58:	f7fe fd48 	bl	80006ec <GPIO_Init>
}
 8001c5c:	bd07      	pop	{r0, r1, r2, pc}
 8001c5e:	46c0      	nop			; (mov r8, r8)
 8001c60:	40020000 	.word	0x40020000

08001c64 <main>:
void DAC_PreConfig(void);
void EXTI15_10_Config(void);
void TIM2_config(void);

int main(void)
{
 8001c64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
       To reconfigure the default setting of SystemInit() function, refer to
       system_stm32l1xx.c file
     */     

  /* Preconfiguration before using DAC----------------------------------------*/
  TIM2_config(); 
 8001c66:	f7ff ff8d 	bl	8001b84 <TIM2_config>
  debugLights();
 8001c6a:	f7ff ff73 	bl	8001b54 <debugLights>
  EXTI15_10_Config();
 8001c6e:	f7ff ffa9 	bl	8001bc4 <EXTI15_10_Config>
  DAC_PreConfig();
 8001c72:	f7ff ffd9 	bl	8001c28 <DAC_PreConfig>
  

  while (1)
  {
    /* If the wave form is changed */
    if (WaveChange == 1)
 8001c76:	4a4c      	ldr	r2, [pc, #304]	; (8001da8 <main+0x144>)
 8001c78:	7816      	ldrb	r6, [r2, #0]
 8001c7a:	b2f6      	uxtb	r6, r6
 8001c7c:	2e01      	cmp	r6, #1
 8001c7e:	d1fa      	bne.n	8001c76 <main+0x12>
    {  
      /* Switch the selected waves forms according the Button status */
      if (SelectedWavesForm == 1)
 8001c80:	4b4a      	ldr	r3, [pc, #296]	; (8001dac <main+0x148>)
 8001c82:	4d4b      	ldr	r5, [pc, #300]	; (8001db0 <main+0x14c>)
 8001c84:	781f      	ldrb	r7, [r3, #0]
 8001c86:	b2ff      	uxtb	r7, r7
 8001c88:	2f01      	cmp	r7, #1
 8001c8a:	d154      	bne.n	8001d36 <main+0xd2>
          /* The sine wave and the escalator wave has been selected */
          /* Sine Wave generator ---------------------------------------------*/
          DAC_DeInit(); 
          /* DAC channel1 and channel2 Configuration */
          DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_None;
 8001c8c:	2600      	movs	r6, #0
      /* Switch the selected waves forms according the Button status */
      if (SelectedWavesForm == 1)
      {
          /* The sine wave and the escalator wave has been selected */
          /* Sine Wave generator ---------------------------------------------*/
          DAC_DeInit(); 
 8001c8e:	f7fe fa3d 	bl	800010c <DAC_DeInit>
          /* DAC channel1 and channel2 Configuration */
          DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;
 8001c92:	2324      	movs	r3, #36	; 0x24
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_None;
          DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;

          DMA_DeInit(DMA1_Channel3); 
 8001c94:	4847      	ldr	r0, [pc, #284]	; (8001db4 <main+0x150>)
      {
          /* The sine wave and the escalator wave has been selected */
          /* Sine Wave generator ---------------------------------------------*/
          DAC_DeInit(); 
          /* DAC channel1 and channel2 Configuration */
          DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;
 8001c96:	602b      	str	r3, [r5, #0]
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_None;
 8001c98:	606e      	str	r6, [r5, #4]
          DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 8001c9a:	60ee      	str	r6, [r5, #12]

          DMA_DeInit(DMA1_Channel3); 
 8001c9c:	f7fe fb2e 	bl	80002fc <DMA_DeInit>
          DMA_InitStructure.DMA_PeripheralBaseAddr = DAC_DHR12R2_Address;
 8001ca0:	4c45      	ldr	r4, [pc, #276]	; (8001db8 <main+0x154>)
 8001ca2:	4b46      	ldr	r3, [pc, #280]	; (8001dbc <main+0x158>)
          DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)&Sine12bit;
          DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
 8001ca4:	2210      	movs	r2, #16
          DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_None;
          DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;

          DMA_DeInit(DMA1_Channel3); 
          DMA_InitStructure.DMA_PeripheralBaseAddr = DAC_DHR12R2_Address;
 8001ca6:	6023      	str	r3, [r4, #0]
          DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)&Sine12bit;
 8001ca8:	4b45      	ldr	r3, [pc, #276]	; (8001dc0 <main+0x15c>)
          DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
 8001caa:	60a2      	str	r2, [r4, #8]
          DMA_InitStructure.DMA_BufferSize = 32;
          DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
          DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
 8001cac:	2280      	movs	r2, #128	; 0x80
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_None;
          DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;

          DMA_DeInit(DMA1_Channel3); 
          DMA_InitStructure.DMA_PeripheralBaseAddr = DAC_DHR12R2_Address;
          DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)&Sine12bit;
 8001cae:	6063      	str	r3, [r4, #4]
          DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
          DMA_InitStructure.DMA_BufferSize = 32;
          DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
          DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
 8001cb0:	6162      	str	r2, [r4, #20]

          DMA_DeInit(DMA1_Channel3); 
          DMA_InitStructure.DMA_PeripheralBaseAddr = DAC_DHR12R2_Address;
          DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)&Sine12bit;
          DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
          DMA_InitStructure.DMA_BufferSize = 32;
 8001cb2:	2320      	movs	r3, #32
          DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
          DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
          DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
 8001cb4:	0052      	lsls	r2, r2, #1

          DMA_DeInit(DMA1_Channel3); 
          DMA_InitStructure.DMA_PeripheralBaseAddr = DAC_DHR12R2_Address;
          DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)&Sine12bit;
          DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
          DMA_InitStructure.DMA_BufferSize = 32;
 8001cb6:	60e3      	str	r3, [r4, #12]
          DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
          DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
          DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
 8001cb8:	61a2      	str	r2, [r4, #24]
          DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
          DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
 8001cba:	6223      	str	r3, [r4, #32]
          DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
          DMA_InitStructure.DMA_BufferSize = 32;
          DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
          DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
          DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
          DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
 8001cbc:	2280      	movs	r2, #128	; 0x80
          DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
          DMA_InitStructure.DMA_Priority = DMA_Priority_High;
 8001cbe:	2380      	movs	r3, #128	; 0x80
          DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
          DMA_InitStructure.DMA_BufferSize = 32;
          DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
          DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
          DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
          DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
 8001cc0:	00d2      	lsls	r2, r2, #3
          DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
          DMA_InitStructure.DMA_Priority = DMA_Priority_High;
 8001cc2:	019b      	lsls	r3, r3, #6
          DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
          DMA_Init(DMA1_Channel3, &DMA_InitStructure);
 8001cc4:	1c21      	adds	r1, r4, #0
 8001cc6:	483b      	ldr	r0, [pc, #236]	; (8001db4 <main+0x150>)
          DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
          DMA_InitStructure.DMA_BufferSize = 32;
          DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
          DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
          DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
          DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
 8001cc8:	61e2      	str	r2, [r4, #28]
          DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
          DMA_InitStructure.DMA_Priority = DMA_Priority_High;
 8001cca:	6263      	str	r3, [r4, #36]	; 0x24
          DMA_DeInit(DMA1_Channel3); 
          DMA_InitStructure.DMA_PeripheralBaseAddr = DAC_DHR12R2_Address;
          DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)&Sine12bit;
          DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;
          DMA_InitStructure.DMA_BufferSize = 32;
          DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 8001ccc:	6126      	str	r6, [r4, #16]
          DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
          DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
          DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
          DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
          DMA_InitStructure.DMA_Priority = DMA_Priority_High;
          DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
 8001cce:	62a6      	str	r6, [r4, #40]	; 0x28
          DMA_Init(DMA1_Channel3, &DMA_InitStructure);
 8001cd0:	f7fe fba2 	bl	8000418 <DMA_Init>

          /* Enable DMA1 Channel3 */
          DMA_Cmd(DMA1_Channel3, ENABLE);
 8001cd4:	1c39      	adds	r1, r7, #0
 8001cd6:	4837      	ldr	r0, [pc, #220]	; (8001db4 <main+0x150>)
 8001cd8:	f7fe fbca 	bl	8000470 <DMA_Cmd>

            /* DAC Channel2 Init */
          DAC_Init(DAC_Channel_2, &DAC_InitStructure);
 8001cdc:	1c29      	adds	r1, r5, #0
 8001cde:	2010      	movs	r0, #16
 8001ce0:	f7fe fa20 	bl	8000124 <DAC_Init>

          /* Enable DAC Channel2 */
          DAC_Cmd(DAC_Channel_2, ENABLE);
 8001ce4:	1c39      	adds	r1, r7, #0
 8001ce6:	2010      	movs	r0, #16
 8001ce8:	f7fe fa3a 	bl	8000160 <DAC_Cmd>

          /* Enable DMA for DAC Channel2 */
          DAC_DMACmd(DAC_Channel_2, ENABLE);
 8001cec:	1c39      	adds	r1, r7, #0
 8001cee:	2010      	movs	r0, #16
 8001cf0:	f7fe faba 	bl	8000268 <DAC_DMACmd>
          
          /* Escalator Wave generator ----------------------------------------*/

          /* DAC channel1 Configuration */
          DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
          DAC_Init(DAC_Channel_1, &DAC_InitStructure);
 8001cf4:	1c29      	adds	r1, r5, #0
 8001cf6:	1c30      	adds	r0, r6, #0
          DAC_DMACmd(DAC_Channel_2, ENABLE);
          
          /* Escalator Wave generator ----------------------------------------*/

          /* DAC channel1 Configuration */
          DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 8001cf8:	60ee      	str	r6, [r5, #12]
          DAC_Init(DAC_Channel_1, &DAC_InitStructure);
 8001cfa:	f7fe fa13 	bl	8000124 <DAC_Init>
  
          /* DMA1 channel2 configuration */
          DMA_DeInit(DMA1_Channel2);
 8001cfe:	4831      	ldr	r0, [pc, #196]	; (8001dc4 <main+0x160>)
 8001d00:	f7fe fafc 	bl	80002fc <DMA_DeInit>
  
          DMA_InitStructure.DMA_PeripheralBaseAddr = DAC_DHR8R1_Address;
 8001d04:	4b30      	ldr	r3, [pc, #192]	; (8001dc8 <main+0x164>)
          DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)&Escalator8bit;
          DMA_InitStructure.DMA_BufferSize = 6;
          DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
          DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
          DMA_Init(DMA1_Channel2, &DMA_InitStructure);
 8001d06:	1c21      	adds	r1, r4, #0
          DAC_Init(DAC_Channel_1, &DAC_InitStructure);
  
          /* DMA1 channel2 configuration */
          DMA_DeInit(DMA1_Channel2);
  
          DMA_InitStructure.DMA_PeripheralBaseAddr = DAC_DHR8R1_Address;
 8001d08:	6023      	str	r3, [r4, #0]
          DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)&Escalator8bit;
 8001d0a:	4b30      	ldr	r3, [pc, #192]	; (8001dcc <main+0x168>)
          DMA_InitStructure.DMA_BufferSize = 6;
          DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
          DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
          DMA_Init(DMA1_Channel2, &DMA_InitStructure);
 8001d0c:	482d      	ldr	r0, [pc, #180]	; (8001dc4 <main+0x160>)
  
          /* DMA1 channel2 configuration */
          DMA_DeInit(DMA1_Channel2);
  
          DMA_InitStructure.DMA_PeripheralBaseAddr = DAC_DHR8R1_Address;
          DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)&Escalator8bit;
 8001d0e:	6063      	str	r3, [r4, #4]
          DMA_InitStructure.DMA_BufferSize = 6;
 8001d10:	2306      	movs	r3, #6
 8001d12:	60e3      	str	r3, [r4, #12]
          DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 8001d14:	61a6      	str	r6, [r4, #24]
          DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 8001d16:	61e6      	str	r6, [r4, #28]
          DMA_Init(DMA1_Channel2, &DMA_InitStructure);
 8001d18:	f7fe fb7e 	bl	8000418 <DMA_Init>
    
          /* Enable DMA1 Channel2 */
          DMA_Cmd(DMA1_Channel2, ENABLE);
 8001d1c:	1c39      	adds	r1, r7, #0
 8001d1e:	4829      	ldr	r0, [pc, #164]	; (8001dc4 <main+0x160>)
 8001d20:	f7fe fba6 	bl	8000470 <DMA_Cmd>
    
          /* Enable DAC Channel1: Once the DAC channel1 is enabled, PA.05 is 
             automatically connected to the DAC converter. */
          DAC_Cmd(DAC_Channel_1, ENABLE);
 8001d24:	1c30      	adds	r0, r6, #0
 8001d26:	1c39      	adds	r1, r7, #0
 8001d28:	f7fe fa1a 	bl	8000160 <DAC_Cmd>

          /* Enable DMA for DAC Channel1 */
          DAC_DMACmd(DAC_Channel_1, ENABLE);
 8001d2c:	1c30      	adds	r0, r6, #0
 8001d2e:	1c39      	adds	r1, r7, #0
 8001d30:	f7fe fa9a 	bl	8000268 <DAC_DMACmd>
 8001d34:	e030      	b.n	8001d98 <main+0x134>
          /* The triangle wave and the noise wave has been selected */
       else
       {
          /* Noise Wave generator --------------------------------------------*/
          /* DAC channel1 Configuration */
          DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;
 8001d36:	2324      	movs	r3, #36	; 0x24
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_Noise;
          DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bits8_0;
          DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 8001d38:	2400      	movs	r4, #0
          /* The triangle wave and the noise wave has been selected */
       else
       {
          /* Noise Wave generator --------------------------------------------*/
          /* DAC channel1 Configuration */
          DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;
 8001d3a:	602b      	str	r3, [r5, #0]
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_Noise;
          DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bits8_0;
 8001d3c:	2380      	movs	r3, #128	; 0x80
 8001d3e:	011b      	lsls	r3, r3, #4
       else
       {
          /* Noise Wave generator --------------------------------------------*/
          /* DAC channel1 Configuration */
          DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_Noise;
 8001d40:	2740      	movs	r7, #64	; 0x40
          DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bits8_0;
          DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
          DAC_Init(DAC_Channel_1, &DAC_InitStructure);
 8001d42:	1c20      	adds	r0, r4, #0
 8001d44:	1c29      	adds	r1, r5, #0
       {
          /* Noise Wave generator --------------------------------------------*/
          /* DAC channel1 Configuration */
          DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_Noise;
          DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bits8_0;
 8001d46:	60ab      	str	r3, [r5, #8]
       else
       {
          /* Noise Wave generator --------------------------------------------*/
          /* DAC channel1 Configuration */
          DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_Noise;
 8001d48:	606f      	str	r7, [r5, #4]
          DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bits8_0;
          DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 8001d4a:	60ec      	str	r4, [r5, #12]
          DAC_Init(DAC_Channel_1, &DAC_InitStructure);
 8001d4c:	f7fe f9ea 	bl	8000124 <DAC_Init>

          /* Enable DAC Channel1: Once the DAC channel1 is enabled, PA.04 is 
             automatically connected to the DAC converter. */
          DAC_Cmd(DAC_Channel_1, ENABLE);
 8001d50:	1c20      	adds	r0, r4, #0
 8001d52:	1c31      	adds	r1, r6, #0
 8001d54:	f7fe fa04 	bl	8000160 <DAC_Cmd>

          /* Set DAC Channel1 DHR12L register */
          DAC_SetChannel1Data(DAC_Align_12b_L, 0x7FF0);
 8001d58:	2004      	movs	r0, #4
 8001d5a:	491d      	ldr	r1, [pc, #116]	; (8001dd0 <main+0x16c>)
 8001d5c:	f7fe fa44 	bl	80001e8 <DAC_SetChannel1Data>
    
          /* Enable DAC channel1 wave generator */
          DAC_WaveGenerationCmd(DAC_Channel_1, DAC_Wave_Noise , ENABLE);
 8001d60:	1c20      	adds	r0, r4, #0
 8001d62:	1c39      	adds	r1, r7, #0
 8001d64:	1c32      	adds	r2, r6, #0
 8001d66:	f7fe fa2f 	bl	80001c8 <DAC_WaveGenerationCmd>
          
          /* Triangle Wave generator -----------------------------------------*/
          DAC_DeInit();
 8001d6a:	f7fe f9cf 	bl	800010c <DAC_DeInit>
          
          /* DAC channel2 Configuration */
          DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_Triangle;
 8001d6e:	2380      	movs	r3, #128	; 0x80
 8001d70:	606b      	str	r3, [r5, #4]
          DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = DAC_TriangleAmplitude_1023;
 8001d72:	2390      	movs	r3, #144	; 0x90
          
          /* Triangle Wave generator -----------------------------------------*/
          DAC_DeInit();
          
          /* DAC channel2 Configuration */
          DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;
 8001d74:	2224      	movs	r2, #36	; 0x24
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_Triangle;
          DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = DAC_TriangleAmplitude_1023;
 8001d76:	011b      	lsls	r3, r3, #4
          DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
          DAC_Init(DAC_Channel_2, &DAC_InitStructure);
 8001d78:	2010      	movs	r0, #16
 8001d7a:	1c29      	adds	r1, r5, #0
          
          /* Triangle Wave generator -----------------------------------------*/
          DAC_DeInit();
          
          /* DAC channel2 Configuration */
          DAC_InitStructure.DAC_Trigger = DAC_Trigger_T2_TRGO;
 8001d7c:	602a      	str	r2, [r5, #0]
          DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_Triangle;
          DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = DAC_TriangleAmplitude_1023;
 8001d7e:	60ab      	str	r3, [r5, #8]
          DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 8001d80:	60ec      	str	r4, [r5, #12]
          DAC_Init(DAC_Channel_2, &DAC_InitStructure);
 8001d82:	f7fe f9cf 	bl	8000124 <DAC_Init>

          /* Enable DAC Channel2: Once the DAC channel2 is enabled, PA.05 is 
             automatically connected to the DAC converter. */
          DAC_Cmd(DAC_Channel_2, ENABLE);
 8001d86:	2010      	movs	r0, #16
 8001d88:	1c31      	adds	r1, r6, #0
 8001d8a:	f7fe f9e9 	bl	8000160 <DAC_Cmd>

          /* Set DAC channel2 DHR12RD register */
          DAC_SetChannel2Data(DAC_Align_12b_R, 0x100);
 8001d8e:	2180      	movs	r1, #128	; 0x80
 8001d90:	1c20      	adds	r0, r4, #0
 8001d92:	0049      	lsls	r1, r1, #1
 8001d94:	f7fe fa38 	bl	8000208 <DAC_SetChannel2Data>
      }
      WaveChange = !WaveChange;
 8001d98:	4a03      	ldr	r2, [pc, #12]	; (8001da8 <main+0x144>)
 8001d9a:	7813      	ldrb	r3, [r2, #0]
 8001d9c:	425a      	negs	r2, r3
 8001d9e:	4153      	adcs	r3, r2
 8001da0:	4a01      	ldr	r2, [pc, #4]	; (8001da8 <main+0x144>)
 8001da2:	b2db      	uxtb	r3, r3
 8001da4:	7013      	strb	r3, [r2, #0]
 8001da6:	e766      	b.n	8001c76 <main+0x12>
 8001da8:	2000001c 	.word	0x2000001c
 8001dac:	2000001d 	.word	0x2000001d
 8001db0:	20000030 	.word	0x20000030
 8001db4:	40026030 	.word	0x40026030
 8001db8:	20000054 	.word	0x20000054
 8001dbc:	40007414 	.word	0x40007414
 8001dc0:	08001fd8 	.word	0x08001fd8
 8001dc4:	4002601c 	.word	0x4002601c
 8001dc8:	40007410 	.word	0x40007410
 8001dcc:	08002018 	.word	0x08002018
 8001dd0:	00007ff0 	.word	0x00007ff0

08001dd4 <EXTI15_10_IRQHandler>:
}


void EXTI15_10_IRQHandler(void){

  if(EXTI_GetITStatus(EXTI_Line12) != RESET)
 8001dd4:	2080      	movs	r0, #128	; 0x80
  GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
  GPIO_Init(GPIOA, &GPIO_InitStructure);
}


void EXTI15_10_IRQHandler(void){
 8001dd6:	b508      	push	{r3, lr}

  if(EXTI_GetITStatus(EXTI_Line12) != RESET)
 8001dd8:	0140      	lsls	r0, r0, #5
 8001dda:	f7fe fc01 	bl	80005e0 <EXTI_GetITStatus>
 8001dde:	2800      	cmp	r0, #0
 8001de0:	d019      	beq.n	8001e16 <EXTI15_10_IRQHandler+0x42>
  { 
    /* Change the wave */
    WaveChange = !WaveChange;
 8001de2:	4b0d      	ldr	r3, [pc, #52]	; (8001e18 <EXTI15_10_IRQHandler+0x44>)
 8001de4:	781a      	ldrb	r2, [r3, #0]
 8001de6:	4251      	negs	r1, r2
 8001de8:	414a      	adcs	r2, r1
 8001dea:	b2d2      	uxtb	r2, r2
 8001dec:	701a      	strb	r2, [r3, #0]
    
    lightState = !lightState;
 8001dee:	4b0b      	ldr	r3, [pc, #44]	; (8001e1c <EXTI15_10_IRQHandler+0x48>)
 8001df0:	6818      	ldr	r0, [r3, #0]
 8001df2:	4242      	negs	r2, r0
 8001df4:	4142      	adcs	r2, r0
 8001df6:	b2d2      	uxtb	r2, r2
    GPIO_WriteBit(GPIOB, GPIO_Pin_7, lightState? Bit_SET : Bit_RESET);
 8001df8:	4809      	ldr	r0, [pc, #36]	; (8001e20 <EXTI15_10_IRQHandler+0x4c>)
 8001dfa:	2180      	movs	r1, #128	; 0x80
  if(EXTI_GetITStatus(EXTI_Line12) != RESET)
  { 
    /* Change the wave */
    WaveChange = !WaveChange;
    
    lightState = !lightState;
 8001dfc:	601a      	str	r2, [r3, #0]
    GPIO_WriteBit(GPIOB, GPIO_Pin_7, lightState? Bit_SET : Bit_RESET);
 8001dfe:	f7fe fd01 	bl	8000804 <GPIO_WriteBit>

     //Change the selected waves forms 
    SelectedWavesForm = !SelectedWavesForm;
 8001e02:	4b08      	ldr	r3, [pc, #32]	; (8001e24 <EXTI15_10_IRQHandler+0x50>)

    /* Clear the Right Button EXTI line pending bit */
    EXTI_ClearITPendingBit(EXTI_Line12);
 8001e04:	2080      	movs	r0, #128	; 0x80
    
    lightState = !lightState;
    GPIO_WriteBit(GPIOB, GPIO_Pin_7, lightState? Bit_SET : Bit_RESET);

     //Change the selected waves forms 
    SelectedWavesForm = !SelectedWavesForm;
 8001e06:	781a      	ldrb	r2, [r3, #0]

    /* Clear the Right Button EXTI line pending bit */
    EXTI_ClearITPendingBit(EXTI_Line12);
 8001e08:	0140      	lsls	r0, r0, #5
    
    lightState = !lightState;
    GPIO_WriteBit(GPIOB, GPIO_Pin_7, lightState? Bit_SET : Bit_RESET);

     //Change the selected waves forms 
    SelectedWavesForm = !SelectedWavesForm;
 8001e0a:	4251      	negs	r1, r2
 8001e0c:	414a      	adcs	r2, r1
 8001e0e:	b2d2      	uxtb	r2, r2
 8001e10:	701a      	strb	r2, [r3, #0]

    /* Clear the Right Button EXTI line pending bit */
    EXTI_ClearITPendingBit(EXTI_Line12);
 8001e12:	f7fe fbf3 	bl	80005fc <EXTI_ClearITPendingBit>
  }
}
 8001e16:	bd08      	pop	{r3, pc}
 8001e18:	2000001c 	.word	0x2000001c
 8001e1c:	20000020 	.word	0x20000020
 8001e20:	40020400 	.word	0x40020400
 8001e24:	2000001d 	.word	0x2000001d

08001e28 <SystemInit>:
  * @retval None
  */
void SystemInit (void)
{
  /*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100;
 8001e28:	4b3c      	ldr	r3, [pc, #240]	; (8001f1c <SystemInit+0xf4>)
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001e2a:	b537      	push	{r0, r1, r2, r4, r5, lr}
  /*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100;
 8001e2c:	6819      	ldr	r1, [r3, #0]
 8001e2e:	2280      	movs	r2, #128	; 0x80
 8001e30:	0052      	lsls	r2, r2, #1
 8001e32:	430a      	orrs	r2, r1
 8001e34:	601a      	str	r2, [r3, #0]

  /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
  RCC->CFGR &= (uint32_t)0x88FFC00C;
 8001e36:	6899      	ldr	r1, [r3, #8]
 8001e38:	4a39      	ldr	r2, [pc, #228]	; (8001f20 <SystemInit+0xf8>)
 8001e3a:	400a      	ands	r2, r1
 8001e3c:	609a      	str	r2, [r3, #8]
  
  /*!< Reset HSION, HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xEEFEFFFE;
 8001e3e:	6819      	ldr	r1, [r3, #0]
 8001e40:	4a38      	ldr	r2, [pc, #224]	; (8001f24 <SystemInit+0xfc>)
 8001e42:	400a      	ands	r2, r1
 8001e44:	601a      	str	r2, [r3, #0]

  /*!< Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8001e46:	6819      	ldr	r1, [r3, #0]
 8001e48:	4a37      	ldr	r2, [pc, #220]	; (8001f28 <SystemInit+0x100>)
 8001e4a:	400a      	ands	r2, r1
 8001e4c:	601a      	str	r2, [r3, #0]

  /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
  RCC->CFGR &= (uint32_t)0xFF02FFFF;
 8001e4e:	689a      	ldr	r2, [r3, #8]
 8001e50:	4936      	ldr	r1, [pc, #216]	; (8001f2c <SystemInit+0x104>)
 8001e52:	400a      	ands	r2, r1
 8001e54:	609a      	str	r2, [r3, #8]

  /*!< Disable all interrupts */
  RCC->CIR = 0x00000000;
 8001e56:	2200      	movs	r2, #0
 8001e58:	60da      	str	r2, [r3, #12]
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 8001e5a:	9200      	str	r2, [sp, #0]
 8001e5c:	9201      	str	r2, [sp, #4]
  
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/
  /* Enable HSE */
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 8001e5e:	6818      	ldr	r0, [r3, #0]
 8001e60:	2280      	movs	r2, #128	; 0x80
 8001e62:	0252      	lsls	r2, r2, #9
 8001e64:	4302      	orrs	r2, r0
 8001e66:	601a      	str	r2, [r3, #0]
 8001e68:	1c08      	adds	r0, r1, #0
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
 8001e6a:	6819      	ldr	r1, [r3, #0]
 8001e6c:	2280      	movs	r2, #128	; 0x80
 8001e6e:	0292      	lsls	r2, r2, #10
 8001e70:	4011      	ands	r1, r2
 8001e72:	9101      	str	r1, [sp, #4]
    StartUpCounter++;
 8001e74:	9900      	ldr	r1, [sp, #0]
 8001e76:	3101      	adds	r1, #1
 8001e78:	9100      	str	r1, [sp, #0]
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 8001e7a:	9901      	ldr	r1, [sp, #4]
 8001e7c:	2900      	cmp	r1, #0
 8001e7e:	d104      	bne.n	8001e8a <SystemInit+0x62>
 8001e80:	9c00      	ldr	r4, [sp, #0]
 8001e82:	21a0      	movs	r1, #160	; 0xa0
 8001e84:	01c9      	lsls	r1, r1, #7
 8001e86:	428c      	cmp	r4, r1
 8001e88:	d1ef      	bne.n	8001e6a <SystemInit+0x42>

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 8001e8a:	6819      	ldr	r1, [r3, #0]
 8001e8c:	400a      	ands	r2, r1
 8001e8e:	d000      	beq.n	8001e92 <SystemInit+0x6a>
  {
    HSEStatus = (uint32_t)0x01;
 8001e90:	2201      	movs	r2, #1
  }
  else
  {
    HSEStatus = (uint32_t)0x00;
 8001e92:	9201      	str	r2, [sp, #4]
  }
  
  if (HSEStatus == (uint32_t)0x01)
 8001e94:	9901      	ldr	r1, [sp, #4]
 8001e96:	2901      	cmp	r1, #1
 8001e98:	d004      	beq.n	8001ea4 <SystemInit+0x7c>
  SetSysClock();

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 8001e9a:	4b25      	ldr	r3, [pc, #148]	; (8001f30 <SystemInit+0x108>)
 8001e9c:	2280      	movs	r2, #128	; 0x80
 8001e9e:	0512      	lsls	r2, r2, #20
 8001ea0:	609a      	str	r2, [r3, #8]
#endif
}
 8001ea2:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
  }
  
  if (HSEStatus == (uint32_t)0x01)
  {
    /* Enable 64-bit access */
    FLASH->ACR |= FLASH_ACR_ACC64;
 8001ea4:	4a23      	ldr	r2, [pc, #140]	; (8001f34 <SystemInit+0x10c>)
 8001ea6:	2504      	movs	r5, #4
 8001ea8:	6814      	ldr	r4, [r2, #0]
 8001eaa:	432c      	orrs	r4, r5
 8001eac:	6014      	str	r4, [r2, #0]
    
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTEN;
 8001eae:	6814      	ldr	r4, [r2, #0]
 8001eb0:	2502      	movs	r5, #2
 8001eb2:	432c      	orrs	r4, r5
 8001eb4:	6014      	str	r4, [r2, #0]

    /* Flash 1 wait state */
    FLASH->ACR |= FLASH_ACR_LATENCY;
 8001eb6:	6814      	ldr	r4, [r2, #0]
 8001eb8:	4321      	orrs	r1, r4
 8001eba:	6011      	str	r1, [r2, #0]
    
    /* Power enable */
    RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 8001ebc:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001ebe:	2280      	movs	r2, #128	; 0x80
 8001ec0:	0552      	lsls	r2, r2, #21
 8001ec2:	430a      	orrs	r2, r1
 8001ec4:	625a      	str	r2, [r3, #36]	; 0x24
  
    /* Select the Voltage Range 1 (1.8 V) */
    PWR->CR = PWR_CR_VOS_0;
 8001ec6:	2180      	movs	r1, #128	; 0x80
 8001ec8:	4a1b      	ldr	r2, [pc, #108]	; (8001f38 <SystemInit+0x110>)
 8001eca:	0109      	lsls	r1, r1, #4
 8001ecc:	6011      	str	r1, [r2, #0]
  
    /* Wait Until the Voltage Regulator is ready */
    while((PWR->CSR & PWR_CSR_VOSF) != RESET)
 8001ece:	6851      	ldr	r1, [r2, #4]
 8001ed0:	06cc      	lsls	r4, r1, #27
 8001ed2:	d4fc      	bmi.n	8001ece <SystemInit+0xa6>
    {
    }
        
    /* HCLK = SYSCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 8001ed4:	689a      	ldr	r2, [r3, #8]
 8001ed6:	609a      	str	r2, [r3, #8]
  
    /* PCLK2 = HCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 8001ed8:	689a      	ldr	r2, [r3, #8]
 8001eda:	609a      	str	r2, [r3, #8]
    
    /* PCLK1 = HCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 8001edc:	689a      	ldr	r2, [r3, #8]
 8001ede:	609a      	str	r2, [r3, #8]
    
    /*  PLL configuration */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL |
 8001ee0:	6899      	ldr	r1, [r3, #8]
                                        RCC_CFGR_PLLDIV));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMUL12 | RCC_CFGR_PLLDIV3);
 8001ee2:	2291      	movs	r2, #145	; 0x91
    
    /* PCLK1 = HCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
    
    /*  PLL configuration */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL |
 8001ee4:	4001      	ands	r1, r0
 8001ee6:	6099      	str	r1, [r3, #8]
                                        RCC_CFGR_PLLDIV));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMUL12 | RCC_CFGR_PLLDIV3);
 8001ee8:	6899      	ldr	r1, [r3, #8]
 8001eea:	0412      	lsls	r2, r2, #16
 8001eec:	430a      	orrs	r2, r1
 8001eee:	609a      	str	r2, [r3, #8]

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
 8001ef0:	6819      	ldr	r1, [r3, #0]
 8001ef2:	2280      	movs	r2, #128	; 0x80
 8001ef4:	0452      	lsls	r2, r2, #17
 8001ef6:	430a      	orrs	r2, r1
 8001ef8:	601a      	str	r2, [r3, #0]

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 8001efa:	6819      	ldr	r1, [r3, #0]
 8001efc:	4a07      	ldr	r2, [pc, #28]	; (8001f1c <SystemInit+0xf4>)
 8001efe:	0188      	lsls	r0, r1, #6
 8001f00:	d5fb      	bpl.n	8001efa <SystemInit+0xd2>
    {
    }
        
    /* Select PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 8001f02:	6890      	ldr	r0, [r2, #8]
 8001f04:	2103      	movs	r1, #3
 8001f06:	4388      	bics	r0, r1
 8001f08:	6090      	str	r0, [r2, #8]
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
 8001f0a:	6890      	ldr	r0, [r2, #8]
 8001f0c:	4301      	orrs	r1, r0
 8001f0e:	6091      	str	r1, [r2, #8]

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 8001f10:	6899      	ldr	r1, [r3, #8]
 8001f12:	220c      	movs	r2, #12
 8001f14:	400a      	ands	r2, r1
 8001f16:	2a0c      	cmp	r2, #12
 8001f18:	d1fa      	bne.n	8001f10 <SystemInit+0xe8>
 8001f1a:	e7be      	b.n	8001e9a <SystemInit+0x72>
 8001f1c:	40023800 	.word	0x40023800
 8001f20:	88ffc00c 	.word	0x88ffc00c
 8001f24:	eefefffe 	.word	0xeefefffe
 8001f28:	fffbffff 	.word	0xfffbffff
 8001f2c:	ff02ffff 	.word	0xff02ffff
 8001f30:	e000ed00 	.word	0xe000ed00
 8001f34:	40023c00 	.word	0x40023c00
 8001f38:	40007000 	.word	0x40007000

08001f3c <Reset_Handler>:
.weak Reset_Handler
.type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
movs r1, #0
 8001f3c:	2100      	movs	r1, #0
b LoopCopyDataInit
 8001f3e:	f000 b804 	b.w	8001f4a <LoopCopyDataInit>

08001f42 <CopyDataInit>:

CopyDataInit:
ldr r3, =_sidata
 8001f42:	4b0d      	ldr	r3, [pc, #52]	; (8001f78 <LoopFillZerobss+0x16>)
ldr r3, [r3, r1]
 8001f44:	585b      	ldr	r3, [r3, r1]
str r3, [r0, r1]
 8001f46:	5043      	str	r3, [r0, r1]
adds r1, r1, #4
 8001f48:	3104      	adds	r1, #4

08001f4a <LoopCopyDataInit>:

LoopCopyDataInit:
ldr r0, =_sdata
 8001f4a:	480c      	ldr	r0, [pc, #48]	; (8001f7c <LoopFillZerobss+0x1a>)
ldr r3, =_edata
 8001f4c:	4b0c      	ldr	r3, [pc, #48]	; (8001f80 <LoopFillZerobss+0x1e>)
adds r2, r0, r1
 8001f4e:	1842      	adds	r2, r0, r1
cmp r2, r3
 8001f50:	429a      	cmp	r2, r3
bcc CopyDataInit
 8001f52:	f4ff aff6 	bcc.w	8001f42 <CopyDataInit>
ldr r2, =_sbss
 8001f56:	4a0b      	ldr	r2, [pc, #44]	; (8001f84 <LoopFillZerobss+0x22>)
b LoopFillZerobss
 8001f58:	f000 b803 	b.w	8001f62 <LoopFillZerobss>

08001f5c <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
movs r3, #0
 8001f5c:	2300      	movs	r3, #0
str r3, [r2], #4
 8001f5e:	f842 3b04 	str.w	r3, [r2], #4

08001f62 <LoopFillZerobss>:

LoopFillZerobss:
ldr r3, = _ebss
 8001f62:	4b09      	ldr	r3, [pc, #36]	; (8001f88 <LoopFillZerobss+0x26>)
cmp r2, r3
 8001f64:	429a      	cmp	r2, r3
bcc FillZerobss
 8001f66:	f4ff aff9 	bcc.w	8001f5c <FillZerobss>

/* Call the clock system intitialization function.*/
bl SystemInit
 8001f6a:	f7ff ff5d 	bl	8001e28 <SystemInit>
/* Call static constructors */
bl __libc_init_array
 8001f6e:	f000 f80f 	bl	8001f90 <__libc_init_array>
/* Call the application's entry point.*/
bl main
 8001f72:	f7ff fe77 	bl	8001c64 <main>
bx lr
 8001f76:	4770      	bx	lr
/* Copy the data segment initializers from flash to SRAM */
movs r1, #0
b LoopCopyDataInit

CopyDataInit:
ldr r3, =_sidata
 8001f78:	08002038 	.word	0x08002038
ldr r3, [r3, r1]
str r3, [r0, r1]
adds r1, r1, #4

LoopCopyDataInit:
ldr r0, =_sdata
 8001f7c:	20000000 	.word	0x20000000
ldr r3, =_edata
 8001f80:	20000020 	.word	0x20000020
adds r2, r0, r1
cmp r2, r3
bcc CopyDataInit
ldr r2, =_sbss
 8001f84:	20000020 	.word	0x20000020
FillZerobss:
movs r3, #0
str r3, [r2], #4

LoopFillZerobss:
ldr r3, = _ebss
 8001f88:	20000080 	.word	0x20000080

08001f8c <ADC1_IRQHandler>:
* @retval : None
*/
.section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
b Infinite_Loop
 8001f8c:	f7ff bffe 	b.w	8001f8c <ADC1_IRQHandler>

08001f90 <__libc_init_array>:
 8001f90:	b570      	push	{r4, r5, r6, lr}
 8001f92:	4e0d      	ldr	r6, [pc, #52]	; (8001fc8 <__libc_init_array+0x38>)
 8001f94:	4d0d      	ldr	r5, [pc, #52]	; (8001fcc <__libc_init_array+0x3c>)
 8001f96:	2400      	movs	r4, #0
 8001f98:	1bad      	subs	r5, r5, r6
 8001f9a:	10ad      	asrs	r5, r5, #2
 8001f9c:	d005      	beq.n	8001faa <__libc_init_array+0x1a>
 8001f9e:	00a3      	lsls	r3, r4, #2
 8001fa0:	58f3      	ldr	r3, [r6, r3]
 8001fa2:	3401      	adds	r4, #1
 8001fa4:	4798      	blx	r3
 8001fa6:	42a5      	cmp	r5, r4
 8001fa8:	d1f9      	bne.n	8001f9e <__libc_init_array+0xe>
 8001faa:	f000 f839 	bl	8002020 <_init>
 8001fae:	4e08      	ldr	r6, [pc, #32]	; (8001fd0 <__libc_init_array+0x40>)
 8001fb0:	4d08      	ldr	r5, [pc, #32]	; (8001fd4 <__libc_init_array+0x44>)
 8001fb2:	2400      	movs	r4, #0
 8001fb4:	1bad      	subs	r5, r5, r6
 8001fb6:	10ad      	asrs	r5, r5, #2
 8001fb8:	d005      	beq.n	8001fc6 <__libc_init_array+0x36>
 8001fba:	00a3      	lsls	r3, r4, #2
 8001fbc:	58f3      	ldr	r3, [r6, r3]
 8001fbe:	3401      	adds	r4, #1
 8001fc0:	4798      	blx	r3
 8001fc2:	42a5      	cmp	r5, r4
 8001fc4:	d1f9      	bne.n	8001fba <__libc_init_array+0x2a>
 8001fc6:	bd70      	pop	{r4, r5, r6, pc}
	...

08001fd8 <Sine12bit>:
 8001fd8:	07ff 098f 0b0f 0c71 0daa 0ea6 0f63 0fd8     ......q.....c...
 8001fe8:	0fff 0fd8 0f63 0ea6 0da7 0c71 0b0f 098f     ....c.....q.....
 8001ff8:	07ff 066f 04ef 038d 0257 0158 009b 0026     ..o.....W.X...&.
 8002008:	0000 0026 009b 0158 0257 038d 04ef 066f     ..&...X.W.....o.

08002018 <Escalator8bit>:
 8002018:	3300 9966 ffcc 0000                         .3f.....

08002020 <_init>:
 8002020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002022:	46c0      	nop			; (mov r8, r8)
 8002024:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002026:	bc08      	pop	{r3}
 8002028:	469e      	mov	lr, r3
 800202a:	4770      	bx	lr

0800202c <_fini>:
 800202c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800202e:	46c0      	nop			; (mov r8, r8)
 8002030:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002032:	bc08      	pop	{r3}
 8002034:	469e      	mov	lr, r3
 8002036:	4770      	bx	lr
