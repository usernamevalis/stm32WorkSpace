
main.elf:     file format elf32-littlearm

SYMBOL TABLE:
08000000 l    d  .isr_vector	00000000 .isr_vector
0800010c l    d  .text	00000000 .text
20000000 l    d  .data	00000000 .data
20000020 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 /var/folders/8f/zhq2rlhx6sl47y8ztwk74bcr0000gn/T//ccEK3Ato.o
f108f85f l       *ABS*	00000000 BootRAM
08001572 l       .text	00000000 LoopCopyDataInit
0800156a l       .text	00000000 CopyDataInit
0800158a l       .text	00000000 LoopFillZerobss
08001584 l       .text	00000000 FillZerobss
080015b4 l       .text	00000000 Infinite_Loop
00000000 l    df *ABS*	00000000 stm32l1xx_gpio.c
00000000 l    df *ABS*	00000000 stm32l1xx_rcc.c
20000000 l     O .data	00000009 PLLMulTable
2000000c l     O .data	00000010 APBAHBPrescTable
00000000 l    df *ABS*	00000000 stm32l1xx_tim.c
00000000 l    df *ABS*	00000000 _udivsi3.o
080012b0 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 system_stm32l1xx.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 /Users/nathanogates/Copy/Development/embedded/redux/gcc-arm/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crti.o
00000000 l    df *ABS*	00000000 /Users/nathanogates/Copy/Development/embedded/redux/gcc-arm/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crtn.o
00000000 l    df *ABS*	00000000 
20000044 l       .bss	00000000 __exidx_end
00000000 l       *UND*	00000000 __fini_array_end
00000000 l       *UND*	00000000 malloc
00000000 l       *UND*	00000000 __bss_start__
20000044 l       .bss	00000000 __exidx_start
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 __fini_array_start
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __libc_fini
00000000 l       *UND*	00000000 __stack
00000000 l       *UND*	00000000 _exit
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __register_frame_info
00000000 l       *UND*	00000000 free
080008b4 g     F .text	00000010 TIM_TimeBaseStructInit
080015b4  w    F .text	00000004 RTC_Alarm_IRQHandler
080015b4  w    F .text	00000004 EXTI2_IRQHandler
08000424 g     F .text	0000000c RCC_HSICmd
08000b1c g     F .text	00000018 TIM_ForcedOC2Config
0800045c g     F .text	0000000c RCC_PLLCmd
080015b4  w    F .text	00000004 DebugMon_Handler
08000b00 g     F .text	00000004 TIM_SetCompare2
0800064c g     F .text	00000018 RCC_AHBPeriphResetCmd
08000324 g     F .text	00000024 GPIO_PinAFConfig
08000740 g     F .text	0000000c RCC_ClearITPendingBit
080002ec g     F .text	0000000c GPIO_ReadOutputDataBit
08000cac g     F .text	0000001c TIM_CCxCmd
08001020 g     F .text	0000001c TIM_SetIC4Prescaler
080015b4  w    F .text	00000004 HardFault_Handler
080015b4  w    F .text	00000004 TIM10_IRQHandler
080015b4  w    F .text	00000004 USB_HP_IRQHandler
080015b4  w    F .text	00000004 TIM6_IRQHandler
08000b5c g     F .text	00000010 TIM_OC1PreloadConfig
080015b4  w    F .text	00000004 SysTick_Handler
08000480 g     F .text	0000000c RCC_MCOConfig
20000024 g     O .bss	0000000c TIM_TimeBaseStructure
080015b4  w    F .text	00000004 PVD_IRQHandler
08001618 g       .text	00000000 _sidata
080015b4  w    F .text	00000004 PendSV_Handler
080015b4  w    F .text	00000004 NMI_Handler
080015b4  w    F .text	00000004 EXTI3_IRQHandler
080011ac g     F .text	00000022 TIM_ETRClockMode2Config
080006dc g     F .text	00000018 RCC_ITConfig
08000b0c g     F .text	00000010 TIM_ForcedOC1Config
08001090 g     F .text	00000014 TIM_DMACmd
08001184 g     F .text	00000028 TIM_ETRClockMode1Config
08000694 g     F .text	00000018 RCC_AHBPeriphClockLPModeCmd
08001008 g     F .text	00000018 TIM_SetIC3Prescaler
08000c1c g     F .text	00000010 TIM_ClearOC3Ref
08001618 g       .text	00000000 _etext
20000020 g       .bss	00000000 _sbss
0800048c g     F .text	00000014 RCC_SYSCLKConfig
080003a0 g     F .text	0000003c RCC_WaitForHSEStartUp
08000468 g     F .text	0000000c RCC_ClockSecuritySystemCmd
080015b4  w    F .text	00000004 EXTI0_IRQHandler
080015b4  w    F .text	00000004 I2C2_EV_IRQHandler
08000718 g     F .text	00000014 RCC_ClearFlag
08000980 g     F .text	00000020 TIM_Cmd
08000b94 g     F .text	00000018 TIM_OC4PreloadConfig
2000001c g     O .data	00000004 SystemCoreClock
08000390 g     F .text	00000010 RCC_HSEConfig
080012ac g     F .text	00000088 .hidden __udivsi3
08001060 g     F .text	00000008 TIM_ClearFlag
08000318 g     F .text	0000000a GPIO_ToggleBits
08001080 g     F .text	00000008 TIM_ClearITPendingBit
080015b4  w    F .text	00000004 UsageFault_Handler
080008e4 g     F .text	00000004 TIM_GetCounter
0800061c g     F .text	00000018 RCC_APB2PeriphClockCmd
08000fcc g     F .text	00000004 TIM_GetCapture3
080001f0 g     F .text	000000ae GPIO_Init
0800044c g     F .text	00000010 RCC_PLLConfig
20000000 g       .data	00000000 _sdata
080015b4  w    F .text	00000004 SPI1_IRQHandler
08000fc4 g     F .text	00000004 TIM_GetCapture1
08000c94 g     F .text	00000018 TIM_SelectOCREFClear
08000314 g     F .text	00000004 GPIO_Write
080002f8 g     F .text	00000006 GPIO_ReadOutputData
08000a1c g     F .text	00000040 TIM_OC3Init
08000430 g     F .text	00000010 RCC_LSEConfig
080005ec g     F .text	0000000c RCC_RTCCLKCmd
0800074c g     F .text	00000100 TIM_DeInit
08000634 g     F .text	00000018 RCC_APB1PeriphClockCmd
0800072c g     F .text	00000014 RCC_GetITStatus
080015b4  w    F .text	00000004 USB_FS_WKUP_IRQHandler
080015b8 g     F .text	00000048 __libc_init_array
08001054 g     F .text	0000000c TIM_GetFlagStatus
08000604 g     F .text	00000018 RCC_AHBPeriphClockCmd
080015b4  w    F .text	00000004 DMA1_Channel4_IRQHandler
08000bd4 g     F .text	00000010 TIM_OC3FastConfig
080015b4  w    F .text	00000004 ADC1_IRQHandler
080010a4 g     F .text	00000020 TIM_SelectCCDMA
08001600 g     F .text	00000000 _init
08000968 g     F .text	00000018 TIM_SetClockDivision
080015b4  w    F .text	00000004 USART3_IRQHandler
20000044 g       .bss	00000000 _ebss
080015b4  w    F .text	00000004 DMA1_Channel7_IRQHandler
080009a0 g     F .text	00000038 TIM_OC1Init
08000b84 g     F .text	00000010 TIM_OC3PreloadConfig
08001564  w    F .text	0000003c Reset_Handler
080002e4 g     F .text	00000006 GPIO_ReadInputData
080008e0 g     F .text	00000004 TIM_SetAutoreload
080015b4  w    F .text	00000004 LCD_IRQHandler
080006f4 g     F .text	00000024 RCC_GetFlagStatus
08000300 g     F .text	00000004 GPIO_SetBits
080015b4  w    F .text	00000004 TIM4_IRQHandler
080004a0 g     F .text	00000010 RCC_GetSYSCLKSource
08000930 g     F .text	00000020 TIM_ARRPreloadConfig
08000308 g     F .text	0000000c GPIO_WriteBit
080015b4  w    F .text	00000004 I2C1_EV_IRQHandler
08001068 g     F .text	00000016 TIM_GetITStatus
080004f4 g     F .text	000000b8 RCC_GetClocksFreq
080015b4  w    F .text	00000004 DMA1_Channel6_IRQHandler
08000aac g     F .text	00000050 TIM_SelectOCxM
080006ac g     F .text	00000018 RCC_APB2PeriphClockLPModeCmd
08001298 g     F .text	00000014 TIM_RemapConfig
080015b4  w    F .text	00000004 TIM3_IRQHandler
080015b4  w    F .text	00000004 RCC_IRQHandler
20000020 g       .bss	00000000 _bss
080015b4  w    F .text	00000004 DMA1_Channel1_IRQHandler
08000bac g     F .text	00000010 TIM_OC1FastConfig
080015b4 g       .text	00000004 Default_Handler
08000b6c g     F .text	00000018 TIM_OC2PreloadConfig
080005ac g     F .text	00000040 RCC_RTCCLKConfig
080011d0 g     F .text	00000010 TIM_SelectInputTrigger
080015b4  w    F .text	00000004 EXTI15_10_IRQHandler
0800103c g     F .text	00000014 TIM_ITConfig
080009d8 g     F .text	00000044 TIM_OC2Init
080008c4 g     F .text	00000006 TIM_PrescalerConfig
08000304 g     F .text	00000004 GPIO_ResetBits
08000c7c g     F .text	00000018 TIM_OC4PolarityConfig
080011e0 g     F .text	00000018 TIM_SelectOutputTrigger
080015b4  w    F .text	00000004 TIM7_IRQHandler
08000b04 g     F .text	00000004 TIM_SetCompare3
08000a5c g     F .text	00000044 TIM_OC4Init
08001278 g     F .text	00000020 TIM_SelectHallSensor
20000030 g     O .bss	0000000c TIM_OCInitStructure
08001348  w    F .text	00000002 .hidden __aeabi_ldiv0
080015b4  w    F .text	00000004 EXTI9_5_IRQHandler
080003e8 g     F .text	00000018 RCC_MSIRangeConfig
080015b4  w    F .text	00000004 TIM9_IRQHandler
080015b4  w    F .text	00000004 TAMPER_STAMP_IRQHandler
080015b4  w    F .text	00000004 RTC_WKUP_IRQHandler
080006c4 g     F .text	00000018 RCC_APB1PeriphClockLPModeCmd
08000fd4 g     F .text	00000018 TIM_SetIC1Prescaler
08000b44 g     F .text	00000018 TIM_ForcedOC4Config
080015b4  w    F .text	00000004 SPI2_IRQHandler
080015b4  w    F .text	00000004 MemManage_Handler
0800040c g     F .text	00000018 RCC_AdjustHSICalibrationValue
08001368 g     F .text	000000e8 main
080010d4 g     F .text	0000001c TIM_ITRxExternalClockConfig
08000c64 g     F .text	00000018 TIM_OC3PolarityConfig
080012ac g     F .text	00000000 .hidden __aeabi_uidiv
080015b4  w    F .text	00000004 SVC_Handler
00000000  w      *UND*	00000000 __init_array_end
080010c4 g     F .text	00000010 TIM_InternalClockConfig
08000c3c g     F .text	00000010 TIM_OC1PolarityConfig
08000bbc g     F .text	00000018 TIM_OC2FastConfig
080004c4 g     F .text	00000018 RCC_PCLK1Config
080008dc g     F .text	00000004 TIM_SetCounter
080015b4  w    F .text	00000004 DMA1_Channel5_IRQHandler
080015b4  w    F .text	00000004 USB_LP_IRQHandler
080015b4  w    F .text	00000004 EXTI4_IRQHandler
20000020 g     O .bss	00000002 PrescalerValue
080004dc g     F .text	00000018 RCC_PCLK2Config
08000b08 g     F .text	00000004 TIM_SetCompare4
08000fc8 g     F .text	00000004 TIM_GetCapture2
2000003c g     O .bss	00000008 GPIO_InitStructure
080008e8 g     F .text	00000006 TIM_GetPrescaler
08000c0c g     F .text	00000010 TIM_ClearOC2Ref
08001450 g     F .text	00000114 SystemInit
0800134c g     F .text	0000001c delay
08000cc8 g     F .text	00000164 TIM_ICInit
0800010c g     F .text	000000e4 GPIO_DeInit
0800160c g     F .text	00000000 _fini
08000348 g     F .text	00000048 RCC_DeInit
08000e2c g     F .text	00000010 TIM_ICStructInit
08000e3c g     F .text	00000188 TIM_PWMIConfig
080015b4  w    F .text	00000004 DMA1_Channel3_IRQHandler
080015b4  w    F .text	00000004 COMP_IRQHandler
00000000  w      *UND*	00000000 __preinit_array_end
08000bfc g     F .text	00000010 TIM_ClearOC1Ref
080015b4  w    F .text	00000004 WWDG_IRQHandler
08000474 g     F .text	0000000c RCC_LSEClockSecuritySystemCmd
0800067c g     F .text	00000018 RCC_APB1PeriphResetCmd
20000000 g       .data	00000000 _data
080015b4  w    F .text	00000004 TIM2_IRQHandler
08000910 g     F .text	00000020 TIM_UpdateRequestConfig
08000b34 g     F .text	00000010 TIM_ForcedOC3Config
080010f0 g     F .text	00000094 TIM_TIxExternalClockConfig
080002a0 g     F .text	00000014 GPIO_StructInit
08000aa0 g     F .text	0000000c TIM_OCStructInit
20002000 g       *ABS*	00000000 _estack
080015b4  w    F .text	00000004 DAC_IRQHandler
08001334 g     F .text	00000012 .hidden __aeabi_uidivmod
080015b4  w    F .text	00000004 EXTI1_IRQHandler
08001210 g     F .text	00000018 TIM_SelectMasterSlaveMode
20000020 g       .data	00000000 _edata
080005f8 g     F .text	0000000c RCC_RTCResetCmd
08000fd0 g     F .text	00000004 TIM_GetCapture4
0800084c g     F .text	00000068 TIM_TimeBaseInit
080015b4  w    F .text	00000004 TIM11_IRQHandler
080015b4  w    F .text	00000004 USART2_IRQHandler
08000000 g     O .isr_vector	00000000 g_pfnVectors
08000400 g     F .text	0000000c RCC_MSICmd
08001088 g     F .text	00000008 TIM_DMAConfig
080015b4  w    F .text	00000004 I2C2_ER_IRQHandler
080015b4  w    F .text	00000004 DMA1_Channel2_IRQHandler
08001050 g     F .text	00000004 TIM_GenerateEvent
00000000  w      *UND*	00000000 __init_array_start
08001348  w    F .text	00000002 .hidden __aeabi_idiv0
080015b4  w    F .text	00000004 FLASH_IRQHandler
080002b4 g     F .text	00000024 GPIO_PinLockConfig
080015b4  w    F .text	00000004 BusFault_Handler
080015b4  w    F .text	00000004 USART1_IRQHandler
08000440 g     F .text	0000000c RCC_LSICmd
08000fec g     F .text	0000001c TIM_SetIC2Prescaler
08001228 g     F .text	00000016 TIM_ETRConfig
08000664 g     F .text	00000018 RCC_APB2PeriphResetCmd
080011f8 g     F .text	00000018 TIM_SelectSlaveMode
080015b4  w    F .text	00000004 I2C1_ER_IRQHandler
08000c2c g     F .text	00000010 TIM_ClearOC4Ref
08000950 g     F .text	00000018 TIM_SelectOnePulseMode
08001240 g     F .text	00000038 TIM_EncoderInterfaceConfig
080003dc g     F .text	0000000c RCC_AdjustMSICalibrationValue
00000000  w      *UND*	00000000 __preinit_array_start
08000afc g     F .text	00000004 TIM_SetCompare1
08000c4c g     F .text	00000018 TIM_OC2PolarityConfig
080008f0 g     F .text	00000020 TIM_UpdateDisableConfig
080002d8 g     F .text	0000000c GPIO_ReadInputDataBit
08000be4 g     F .text	00000018 TIM_OC4FastConfig
080004b0 g     F .text	00000014 RCC_HCLKConfig
080008cc g     F .text	00000010 TIM_CounterModeConfig



Disassembly of section .text:

0800010c <GPIO_DeInit>:
 800010c:	b508      	push	{r3, lr}
 800010e:	4b30      	ldr	r3, [pc, #192]	; (80001d0 <GPIO_DeInit+0xc4>)
 8000110:	4298      	cmp	r0, r3
 8000112:	d01e      	beq.n	8000152 <GPIO_DeInit+0x46>
 8000114:	4b2f      	ldr	r3, [pc, #188]	; (80001d4 <GPIO_DeInit+0xc8>)
 8000116:	4298      	cmp	r0, r3
 8000118:	d024      	beq.n	8000164 <GPIO_DeInit+0x58>
 800011a:	4b2f      	ldr	r3, [pc, #188]	; (80001d8 <GPIO_DeInit+0xcc>)
 800011c:	4298      	cmp	r0, r3
 800011e:	d02a      	beq.n	8000176 <GPIO_DeInit+0x6a>
 8000120:	4b2e      	ldr	r3, [pc, #184]	; (80001dc <GPIO_DeInit+0xd0>)
 8000122:	4298      	cmp	r0, r3
 8000124:	d030      	beq.n	8000188 <GPIO_DeInit+0x7c>
 8000126:	4b2e      	ldr	r3, [pc, #184]	; (80001e0 <GPIO_DeInit+0xd4>)
 8000128:	4298      	cmp	r0, r3
 800012a:	d036      	beq.n	800019a <GPIO_DeInit+0x8e>
 800012c:	4b2d      	ldr	r3, [pc, #180]	; (80001e4 <GPIO_DeInit+0xd8>)
 800012e:	4298      	cmp	r0, r3
 8000130:	d03c      	beq.n	80001ac <GPIO_DeInit+0xa0>
 8000132:	4b2d      	ldr	r3, [pc, #180]	; (80001e8 <GPIO_DeInit+0xdc>)
 8000134:	4298      	cmp	r0, r3
 8000136:	d042      	beq.n	80001be <GPIO_DeInit+0xb2>
 8000138:	4b2c      	ldr	r3, [pc, #176]	; (80001ec <GPIO_DeInit+0xe0>)
 800013a:	4298      	cmp	r0, r3
 800013c:	d000      	beq.n	8000140 <GPIO_DeInit+0x34>
 800013e:	bd08      	pop	{r3, pc}
 8000140:	2020      	movs	r0, #32
 8000142:	2101      	movs	r1, #1
 8000144:	f000 fa82 	bl	800064c <RCC_AHBPeriphResetCmd>
 8000148:	2020      	movs	r0, #32
 800014a:	2100      	movs	r1, #0
 800014c:	f000 fa7e 	bl	800064c <RCC_AHBPeriphResetCmd>
 8000150:	e7f5      	b.n	800013e <GPIO_DeInit+0x32>
 8000152:	2001      	movs	r0, #1
 8000154:	2101      	movs	r1, #1
 8000156:	f000 fa79 	bl	800064c <RCC_AHBPeriphResetCmd>
 800015a:	2001      	movs	r0, #1
 800015c:	2100      	movs	r1, #0
 800015e:	f000 fa75 	bl	800064c <RCC_AHBPeriphResetCmd>
 8000162:	e7ec      	b.n	800013e <GPIO_DeInit+0x32>
 8000164:	2002      	movs	r0, #2
 8000166:	2101      	movs	r1, #1
 8000168:	f000 fa70 	bl	800064c <RCC_AHBPeriphResetCmd>
 800016c:	2002      	movs	r0, #2
 800016e:	2100      	movs	r1, #0
 8000170:	f000 fa6c 	bl	800064c <RCC_AHBPeriphResetCmd>
 8000174:	e7e3      	b.n	800013e <GPIO_DeInit+0x32>
 8000176:	2004      	movs	r0, #4
 8000178:	2101      	movs	r1, #1
 800017a:	f000 fa67 	bl	800064c <RCC_AHBPeriphResetCmd>
 800017e:	2004      	movs	r0, #4
 8000180:	2100      	movs	r1, #0
 8000182:	f000 fa63 	bl	800064c <RCC_AHBPeriphResetCmd>
 8000186:	e7da      	b.n	800013e <GPIO_DeInit+0x32>
 8000188:	2008      	movs	r0, #8
 800018a:	2101      	movs	r1, #1
 800018c:	f000 fa5e 	bl	800064c <RCC_AHBPeriphResetCmd>
 8000190:	2008      	movs	r0, #8
 8000192:	2100      	movs	r1, #0
 8000194:	f000 fa5a 	bl	800064c <RCC_AHBPeriphResetCmd>
 8000198:	e7d1      	b.n	800013e <GPIO_DeInit+0x32>
 800019a:	2010      	movs	r0, #16
 800019c:	2101      	movs	r1, #1
 800019e:	f000 fa55 	bl	800064c <RCC_AHBPeriphResetCmd>
 80001a2:	2010      	movs	r0, #16
 80001a4:	2100      	movs	r1, #0
 80001a6:	f000 fa51 	bl	800064c <RCC_AHBPeriphResetCmd>
 80001aa:	e7c8      	b.n	800013e <GPIO_DeInit+0x32>
 80001ac:	2040      	movs	r0, #64	; 0x40
 80001ae:	2101      	movs	r1, #1
 80001b0:	f000 fa4c 	bl	800064c <RCC_AHBPeriphResetCmd>
 80001b4:	2040      	movs	r0, #64	; 0x40
 80001b6:	2100      	movs	r1, #0
 80001b8:	f000 fa48 	bl	800064c <RCC_AHBPeriphResetCmd>
 80001bc:	e7bf      	b.n	800013e <GPIO_DeInit+0x32>
 80001be:	2080      	movs	r0, #128	; 0x80
 80001c0:	2101      	movs	r1, #1
 80001c2:	f000 fa43 	bl	800064c <RCC_AHBPeriphResetCmd>
 80001c6:	2080      	movs	r0, #128	; 0x80
 80001c8:	2100      	movs	r1, #0
 80001ca:	f000 fa3f 	bl	800064c <RCC_AHBPeriphResetCmd>
 80001ce:	e7b6      	b.n	800013e <GPIO_DeInit+0x32>
 80001d0:	40020000 	.word	0x40020000
 80001d4:	40020400 	.word	0x40020400
 80001d8:	40020800 	.word	0x40020800
 80001dc:	40020c00 	.word	0x40020c00
 80001e0:	40021000 	.word	0x40021000
 80001e4:	40021800 	.word	0x40021800
 80001e8:	40021c00 	.word	0x40021c00
 80001ec:	40021400 	.word	0x40021400

080001f0 <GPIO_Init>:
 80001f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80001f2:	4644      	mov	r4, r8
 80001f4:	465f      	mov	r7, fp
 80001f6:	4656      	mov	r6, sl
 80001f8:	464d      	mov	r5, r9
 80001fa:	b4f0      	push	{r4, r5, r6, r7}
 80001fc:	468c      	mov	ip, r1
 80001fe:	680f      	ldr	r7, [r1, #0]
 8000200:	2103      	movs	r1, #3
 8000202:	b083      	sub	sp, #12
 8000204:	2400      	movs	r4, #0
 8000206:	2300      	movs	r3, #0
 8000208:	2601      	movs	r6, #1
 800020a:	4688      	mov	r8, r1
 800020c:	e003      	b.n	8000216 <GPIO_Init+0x26>
 800020e:	3301      	adds	r3, #1
 8000210:	3402      	adds	r4, #2
 8000212:	2b10      	cmp	r3, #16
 8000214:	d026      	beq.n	8000264 <GPIO_Init+0x74>
 8000216:	1c32      	adds	r2, r6, #0
 8000218:	409a      	lsls	r2, r3
 800021a:	1c3d      	adds	r5, r7, #0
 800021c:	4015      	ands	r5, r2
 800021e:	4295      	cmp	r5, r2
 8000220:	d1f5      	bne.n	800020e <GPIO_Init+0x1e>
 8000222:	4642      	mov	r2, r8
 8000224:	6801      	ldr	r1, [r0, #0]
 8000226:	40a2      	lsls	r2, r4
 8000228:	43d2      	mvns	r2, r2
 800022a:	4011      	ands	r1, r2
 800022c:	6001      	str	r1, [r0, #0]
 800022e:	4661      	mov	r1, ip
 8000230:	7909      	ldrb	r1, [r1, #4]
 8000232:	4693      	mov	fp, r2
 8000234:	6802      	ldr	r2, [r0, #0]
 8000236:	9101      	str	r1, [sp, #4]
 8000238:	40a1      	lsls	r1, r4
 800023a:	4311      	orrs	r1, r2
 800023c:	6001      	str	r1, [r0, #0]
 800023e:	9901      	ldr	r1, [sp, #4]
 8000240:	3901      	subs	r1, #1
 8000242:	b2c9      	uxtb	r1, r1
 8000244:	2901      	cmp	r1, #1
 8000246:	d914      	bls.n	8000272 <GPIO_Init+0x82>
 8000248:	68c1      	ldr	r1, [r0, #12]
 800024a:	465a      	mov	r2, fp
 800024c:	400a      	ands	r2, r1
 800024e:	4665      	mov	r5, ip
 8000250:	60c2      	str	r2, [r0, #12]
 8000252:	79ea      	ldrb	r2, [r5, #7]
 8000254:	68c1      	ldr	r1, [r0, #12]
 8000256:	40a2      	lsls	r2, r4
 8000258:	430a      	orrs	r2, r1
 800025a:	3301      	adds	r3, #1
 800025c:	60c2      	str	r2, [r0, #12]
 800025e:	3402      	adds	r4, #2
 8000260:	2b10      	cmp	r3, #16
 8000262:	d1d8      	bne.n	8000216 <GPIO_Init+0x26>
 8000264:	b003      	add	sp, #12
 8000266:	bc3c      	pop	{r2, r3, r4, r5}
 8000268:	4690      	mov	r8, r2
 800026a:	4699      	mov	r9, r3
 800026c:	46a2      	mov	sl, r4
 800026e:	46ab      	mov	fp, r5
 8000270:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000272:	6881      	ldr	r1, [r0, #8]
 8000274:	465a      	mov	r2, fp
 8000276:	4011      	ands	r1, r2
 8000278:	4662      	mov	r2, ip
 800027a:	6081      	str	r1, [r0, #8]
 800027c:	7952      	ldrb	r2, [r2, #5]
 800027e:	6881      	ldr	r1, [r0, #8]
 8000280:	40a2      	lsls	r2, r4
 8000282:	4311      	orrs	r1, r2
 8000284:	6081      	str	r1, [r0, #8]
 8000286:	6841      	ldr	r1, [r0, #4]
 8000288:	4662      	mov	r2, ip
 800028a:	b289      	uxth	r1, r1
 800028c:	43a9      	bics	r1, r5
 800028e:	8081      	strh	r1, [r0, #4]
 8000290:	7991      	ldrb	r1, [r2, #6]
 8000292:	6845      	ldr	r5, [r0, #4]
 8000294:	4099      	lsls	r1, r3
 8000296:	4329      	orrs	r1, r5
 8000298:	b289      	uxth	r1, r1
 800029a:	8081      	strh	r1, [r0, #4]
 800029c:	e7d4      	b.n	8000248 <GPIO_Init+0x58>
 800029e:	46c0      	nop			; (mov r8, r8)

080002a0 <GPIO_StructInit>:
 80002a0:	4b03      	ldr	r3, [pc, #12]	; (80002b0 <GPIO_StructInit+0x10>)
 80002a2:	6003      	str	r3, [r0, #0]
 80002a4:	2300      	movs	r3, #0
 80002a6:	7103      	strb	r3, [r0, #4]
 80002a8:	7143      	strb	r3, [r0, #5]
 80002aa:	7183      	strb	r3, [r0, #6]
 80002ac:	71c3      	strb	r3, [r0, #7]
 80002ae:	4770      	bx	lr
 80002b0:	0000ffff 	.word	0x0000ffff

080002b4 <GPIO_PinLockConfig>:
 80002b4:	2380      	movs	r3, #128	; 0x80
 80002b6:	b082      	sub	sp, #8
 80002b8:	025b      	lsls	r3, r3, #9
 80002ba:	9301      	str	r3, [sp, #4]
 80002bc:	9b01      	ldr	r3, [sp, #4]
 80002be:	430b      	orrs	r3, r1
 80002c0:	9301      	str	r3, [sp, #4]
 80002c2:	9b01      	ldr	r3, [sp, #4]
 80002c4:	61c3      	str	r3, [r0, #28]
 80002c6:	61c1      	str	r1, [r0, #28]
 80002c8:	9b01      	ldr	r3, [sp, #4]
 80002ca:	61c3      	str	r3, [r0, #28]
 80002cc:	69c3      	ldr	r3, [r0, #28]
 80002ce:	9301      	str	r3, [sp, #4]
 80002d0:	69c3      	ldr	r3, [r0, #28]
 80002d2:	9301      	str	r3, [sp, #4]
 80002d4:	b002      	add	sp, #8
 80002d6:	4770      	bx	lr

080002d8 <GPIO_ReadInputDataBit>:
 80002d8:	6900      	ldr	r0, [r0, #16]
 80002da:	4008      	ands	r0, r1
 80002dc:	1e43      	subs	r3, r0, #1
 80002de:	4198      	sbcs	r0, r3
 80002e0:	b2c0      	uxtb	r0, r0
 80002e2:	4770      	bx	lr

080002e4 <GPIO_ReadInputData>:
 80002e4:	6900      	ldr	r0, [r0, #16]
 80002e6:	b280      	uxth	r0, r0
 80002e8:	4770      	bx	lr
 80002ea:	46c0      	nop			; (mov r8, r8)

080002ec <GPIO_ReadOutputDataBit>:
 80002ec:	6940      	ldr	r0, [r0, #20]
 80002ee:	4008      	ands	r0, r1
 80002f0:	1e43      	subs	r3, r0, #1
 80002f2:	4198      	sbcs	r0, r3
 80002f4:	b2c0      	uxtb	r0, r0
 80002f6:	4770      	bx	lr

080002f8 <GPIO_ReadOutputData>:
 80002f8:	6940      	ldr	r0, [r0, #20]
 80002fa:	b280      	uxth	r0, r0
 80002fc:	4770      	bx	lr
 80002fe:	46c0      	nop			; (mov r8, r8)

08000300 <GPIO_SetBits>:
 8000300:	8301      	strh	r1, [r0, #24]
 8000302:	4770      	bx	lr

08000304 <GPIO_ResetBits>:
 8000304:	8341      	strh	r1, [r0, #26]
 8000306:	4770      	bx	lr

08000308 <GPIO_WriteBit>:
 8000308:	2a00      	cmp	r2, #0
 800030a:	d101      	bne.n	8000310 <GPIO_WriteBit+0x8>
 800030c:	8341      	strh	r1, [r0, #26]
 800030e:	4770      	bx	lr
 8000310:	8301      	strh	r1, [r0, #24]
 8000312:	e7fc      	b.n	800030e <GPIO_WriteBit+0x6>

08000314 <GPIO_Write>:
 8000314:	8281      	strh	r1, [r0, #20]
 8000316:	4770      	bx	lr

08000318 <GPIO_ToggleBits>:
 8000318:	6943      	ldr	r3, [r0, #20]
 800031a:	b29b      	uxth	r3, r3
 800031c:	4059      	eors	r1, r3
 800031e:	8281      	strh	r1, [r0, #20]
 8000320:	4770      	bx	lr
 8000322:	46c0      	nop			; (mov r8, r8)

08000324 <GPIO_PinAFConfig>:
 8000324:	2307      	movs	r3, #7
 8000326:	400b      	ands	r3, r1
 8000328:	08c9      	lsrs	r1, r1, #3
 800032a:	0089      	lsls	r1, r1, #2
 800032c:	1840      	adds	r0, r0, r1
 800032e:	b510      	push	{r4, lr}
 8000330:	6a01      	ldr	r1, [r0, #32]
 8000332:	009b      	lsls	r3, r3, #2
 8000334:	240f      	movs	r4, #15
 8000336:	409c      	lsls	r4, r3
 8000338:	43a1      	bics	r1, r4
 800033a:	6201      	str	r1, [r0, #32]
 800033c:	6a01      	ldr	r1, [r0, #32]
 800033e:	409a      	lsls	r2, r3
 8000340:	1c13      	adds	r3, r2, #0
 8000342:	430b      	orrs	r3, r1
 8000344:	6203      	str	r3, [r0, #32]
 8000346:	bd10      	pop	{r4, pc}

08000348 <RCC_DeInit>:
 8000348:	4b0c      	ldr	r3, [pc, #48]	; (800037c <RCC_DeInit+0x34>)
 800034a:	2280      	movs	r2, #128	; 0x80
 800034c:	6819      	ldr	r1, [r3, #0]
 800034e:	0052      	lsls	r2, r2, #1
 8000350:	430a      	orrs	r2, r1
 8000352:	601a      	str	r2, [r3, #0]
 8000354:	6899      	ldr	r1, [r3, #8]
 8000356:	4a0a      	ldr	r2, [pc, #40]	; (8000380 <RCC_DeInit+0x38>)
 8000358:	400a      	ands	r2, r1
 800035a:	609a      	str	r2, [r3, #8]
 800035c:	6819      	ldr	r1, [r3, #0]
 800035e:	4a09      	ldr	r2, [pc, #36]	; (8000384 <RCC_DeInit+0x3c>)
 8000360:	400a      	ands	r2, r1
 8000362:	601a      	str	r2, [r3, #0]
 8000364:	6819      	ldr	r1, [r3, #0]
 8000366:	4a08      	ldr	r2, [pc, #32]	; (8000388 <RCC_DeInit+0x40>)
 8000368:	400a      	ands	r2, r1
 800036a:	601a      	str	r2, [r3, #0]
 800036c:	6899      	ldr	r1, [r3, #8]
 800036e:	4a07      	ldr	r2, [pc, #28]	; (800038c <RCC_DeInit+0x44>)
 8000370:	400a      	ands	r2, r1
 8000372:	609a      	str	r2, [r3, #8]
 8000374:	2200      	movs	r2, #0
 8000376:	60da      	str	r2, [r3, #12]
 8000378:	4770      	bx	lr
 800037a:	46c0      	nop			; (mov r8, r8)
 800037c:	40023800 	.word	0x40023800
 8000380:	88ffc00c 	.word	0x88ffc00c
 8000384:	eefefffe 	.word	0xeefefffe
 8000388:	fffbffff 	.word	0xfffbffff
 800038c:	ff02ffff 	.word	0xff02ffff

08000390 <RCC_HSEConfig>:
 8000390:	4b02      	ldr	r3, [pc, #8]	; (800039c <RCC_HSEConfig+0xc>)
 8000392:	2200      	movs	r2, #0
 8000394:	701a      	strb	r2, [r3, #0]
 8000396:	7018      	strb	r0, [r3, #0]
 8000398:	4770      	bx	lr
 800039a:	46c0      	nop			; (mov r8, r8)
 800039c:	40023802 	.word	0x40023802

080003a0 <RCC_WaitForHSEStartUp>:
 80003a0:	2300      	movs	r3, #0
 80003a2:	b082      	sub	sp, #8
 80003a4:	9301      	str	r3, [sp, #4]
 80003a6:	2280      	movs	r2, #128	; 0x80
 80003a8:	23a0      	movs	r3, #160	; 0xa0
 80003aa:	490b      	ldr	r1, [pc, #44]	; (80003d8 <RCC_WaitForHSEStartUp+0x38>)
 80003ac:	0292      	lsls	r2, r2, #10
 80003ae:	00d8      	lsls	r0, r3, #3
 80003b0:	680b      	ldr	r3, [r1, #0]
 80003b2:	4213      	tst	r3, r2
 80003b4:	d10b      	bne.n	80003ce <RCC_WaitForHSEStartUp+0x2e>
 80003b6:	9b01      	ldr	r3, [sp, #4]
 80003b8:	3301      	adds	r3, #1
 80003ba:	9301      	str	r3, [sp, #4]
 80003bc:	9b01      	ldr	r3, [sp, #4]
 80003be:	4283      	cmp	r3, r0
 80003c0:	d1f6      	bne.n	80003b0 <RCC_WaitForHSEStartUp+0x10>
 80003c2:	4b05      	ldr	r3, [pc, #20]	; (80003d8 <RCC_WaitForHSEStartUp+0x38>)
 80003c4:	6818      	ldr	r0, [r3, #0]
 80003c6:	0380      	lsls	r0, r0, #14
 80003c8:	0fc0      	lsrs	r0, r0, #31
 80003ca:	b002      	add	sp, #8
 80003cc:	4770      	bx	lr
 80003ce:	9b01      	ldr	r3, [sp, #4]
 80003d0:	3301      	adds	r3, #1
 80003d2:	9301      	str	r3, [sp, #4]
 80003d4:	9b01      	ldr	r3, [sp, #4]
 80003d6:	e7f4      	b.n	80003c2 <RCC_WaitForHSEStartUp+0x22>
 80003d8:	40023800 	.word	0x40023800

080003dc <RCC_AdjustMSICalibrationValue>:
 80003dc:	4b01      	ldr	r3, [pc, #4]	; (80003e4 <RCC_AdjustMSICalibrationValue+0x8>)
 80003de:	7018      	strb	r0, [r3, #0]
 80003e0:	4770      	bx	lr
 80003e2:	46c0      	nop			; (mov r8, r8)
 80003e4:	40023807 	.word	0x40023807

080003e8 <RCC_MSIRangeConfig>:
 80003e8:	4b03      	ldr	r3, [pc, #12]	; (80003f8 <RCC_MSIRangeConfig+0x10>)
 80003ea:	4a04      	ldr	r2, [pc, #16]	; (80003fc <RCC_MSIRangeConfig+0x14>)
 80003ec:	6859      	ldr	r1, [r3, #4]
 80003ee:	400a      	ands	r2, r1
 80003f0:	4310      	orrs	r0, r2
 80003f2:	6058      	str	r0, [r3, #4]
 80003f4:	4770      	bx	lr
 80003f6:	46c0      	nop			; (mov r8, r8)
 80003f8:	40023800 	.word	0x40023800
 80003fc:	ffff1fff 	.word	0xffff1fff

08000400 <RCC_MSICmd>:
 8000400:	4b01      	ldr	r3, [pc, #4]	; (8000408 <RCC_MSICmd+0x8>)
 8000402:	6018      	str	r0, [r3, #0]
 8000404:	4770      	bx	lr
 8000406:	46c0      	nop			; (mov r8, r8)
 8000408:	42470020 	.word	0x42470020

0800040c <RCC_AdjustHSICalibrationValue>:
 800040c:	4b03      	ldr	r3, [pc, #12]	; (800041c <RCC_AdjustHSICalibrationValue+0x10>)
 800040e:	4a04      	ldr	r2, [pc, #16]	; (8000420 <RCC_AdjustHSICalibrationValue+0x14>)
 8000410:	6859      	ldr	r1, [r3, #4]
 8000412:	0200      	lsls	r0, r0, #8
 8000414:	400a      	ands	r2, r1
 8000416:	4310      	orrs	r0, r2
 8000418:	6058      	str	r0, [r3, #4]
 800041a:	4770      	bx	lr
 800041c:	40023800 	.word	0x40023800
 8000420:	ffffe0ff 	.word	0xffffe0ff

08000424 <RCC_HSICmd>:
 8000424:	4b01      	ldr	r3, [pc, #4]	; (800042c <RCC_HSICmd+0x8>)
 8000426:	6018      	str	r0, [r3, #0]
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)
 800042c:	42470000 	.word	0x42470000

08000430 <RCC_LSEConfig>:
 8000430:	4b02      	ldr	r3, [pc, #8]	; (800043c <RCC_LSEConfig+0xc>)
 8000432:	2200      	movs	r2, #0
 8000434:	701a      	strb	r2, [r3, #0]
 8000436:	7018      	strb	r0, [r3, #0]
 8000438:	4770      	bx	lr
 800043a:	46c0      	nop			; (mov r8, r8)
 800043c:	40023835 	.word	0x40023835

08000440 <RCC_LSICmd>:
 8000440:	4b01      	ldr	r3, [pc, #4]	; (8000448 <RCC_LSICmd+0x8>)
 8000442:	6018      	str	r0, [r3, #0]
 8000444:	4770      	bx	lr
 8000446:	46c0      	nop			; (mov r8, r8)
 8000448:	42470680 	.word	0x42470680

0800044c <RCC_PLLConfig>:
 800044c:	4310      	orrs	r0, r2
 800044e:	4b02      	ldr	r3, [pc, #8]	; (8000458 <RCC_PLLConfig+0xc>)
 8000450:	4301      	orrs	r1, r0
 8000452:	7019      	strb	r1, [r3, #0]
 8000454:	4770      	bx	lr
 8000456:	46c0      	nop			; (mov r8, r8)
 8000458:	4002380a 	.word	0x4002380a

0800045c <RCC_PLLCmd>:
 800045c:	4b01      	ldr	r3, [pc, #4]	; (8000464 <RCC_PLLCmd+0x8>)
 800045e:	6018      	str	r0, [r3, #0]
 8000460:	4770      	bx	lr
 8000462:	46c0      	nop			; (mov r8, r8)
 8000464:	42470060 	.word	0x42470060

08000468 <RCC_ClockSecuritySystemCmd>:
 8000468:	4b01      	ldr	r3, [pc, #4]	; (8000470 <RCC_ClockSecuritySystemCmd+0x8>)
 800046a:	6018      	str	r0, [r3, #0]
 800046c:	4770      	bx	lr
 800046e:	46c0      	nop			; (mov r8, r8)
 8000470:	42470070 	.word	0x42470070

08000474 <RCC_LSEClockSecuritySystemCmd>:
 8000474:	4b01      	ldr	r3, [pc, #4]	; (800047c <RCC_LSEClockSecuritySystemCmd+0x8>)
 8000476:	6018      	str	r0, [r3, #0]
 8000478:	4770      	bx	lr
 800047a:	46c0      	nop			; (mov r8, r8)
 800047c:	424706ac 	.word	0x424706ac

08000480 <RCC_MCOConfig>:
 8000480:	4b01      	ldr	r3, [pc, #4]	; (8000488 <RCC_MCOConfig+0x8>)
 8000482:	4308      	orrs	r0, r1
 8000484:	7018      	strb	r0, [r3, #0]
 8000486:	4770      	bx	lr
 8000488:	4002380b 	.word	0x4002380b

0800048c <RCC_SYSCLKConfig>:
 800048c:	4b03      	ldr	r3, [pc, #12]	; (800049c <RCC_SYSCLKConfig+0x10>)
 800048e:	2103      	movs	r1, #3
 8000490:	689a      	ldr	r2, [r3, #8]
 8000492:	438a      	bics	r2, r1
 8000494:	4310      	orrs	r0, r2
 8000496:	6098      	str	r0, [r3, #8]
 8000498:	4770      	bx	lr
 800049a:	46c0      	nop			; (mov r8, r8)
 800049c:	40023800 	.word	0x40023800

080004a0 <RCC_GetSYSCLKSource>:
 80004a0:	4b02      	ldr	r3, [pc, #8]	; (80004ac <RCC_GetSYSCLKSource+0xc>)
 80004a2:	200c      	movs	r0, #12
 80004a4:	689b      	ldr	r3, [r3, #8]
 80004a6:	4018      	ands	r0, r3
 80004a8:	4770      	bx	lr
 80004aa:	46c0      	nop			; (mov r8, r8)
 80004ac:	40023800 	.word	0x40023800

080004b0 <RCC_HCLKConfig>:
 80004b0:	4b03      	ldr	r3, [pc, #12]	; (80004c0 <RCC_HCLKConfig+0x10>)
 80004b2:	21f0      	movs	r1, #240	; 0xf0
 80004b4:	689a      	ldr	r2, [r3, #8]
 80004b6:	438a      	bics	r2, r1
 80004b8:	4310      	orrs	r0, r2
 80004ba:	6098      	str	r0, [r3, #8]
 80004bc:	4770      	bx	lr
 80004be:	46c0      	nop			; (mov r8, r8)
 80004c0:	40023800 	.word	0x40023800

080004c4 <RCC_PCLK1Config>:
 80004c4:	4b03      	ldr	r3, [pc, #12]	; (80004d4 <RCC_PCLK1Config+0x10>)
 80004c6:	4a04      	ldr	r2, [pc, #16]	; (80004d8 <RCC_PCLK1Config+0x14>)
 80004c8:	6899      	ldr	r1, [r3, #8]
 80004ca:	400a      	ands	r2, r1
 80004cc:	4310      	orrs	r0, r2
 80004ce:	6098      	str	r0, [r3, #8]
 80004d0:	4770      	bx	lr
 80004d2:	46c0      	nop			; (mov r8, r8)
 80004d4:	40023800 	.word	0x40023800
 80004d8:	fffff8ff 	.word	0xfffff8ff

080004dc <RCC_PCLK2Config>:
 80004dc:	4b03      	ldr	r3, [pc, #12]	; (80004ec <RCC_PCLK2Config+0x10>)
 80004de:	4a04      	ldr	r2, [pc, #16]	; (80004f0 <RCC_PCLK2Config+0x14>)
 80004e0:	6899      	ldr	r1, [r3, #8]
 80004e2:	00c0      	lsls	r0, r0, #3
 80004e4:	400a      	ands	r2, r1
 80004e6:	4310      	orrs	r0, r2
 80004e8:	6098      	str	r0, [r3, #8]
 80004ea:	4770      	bx	lr
 80004ec:	40023800 	.word	0x40023800
 80004f0:	ffffc7ff 	.word	0xffffc7ff

080004f4 <RCC_GetClocksFreq>:
 80004f4:	4a29      	ldr	r2, [pc, #164]	; (800059c <RCC_GetClocksFreq+0xa8>)
 80004f6:	b538      	push	{r3, r4, r5, lr}
 80004f8:	6893      	ldr	r3, [r2, #8]
 80004fa:	210c      	movs	r1, #12
 80004fc:	1c04      	adds	r4, r0, #0
 80004fe:	400b      	ands	r3, r1
 8000500:	2b04      	cmp	r3, #4
 8000502:	d041      	beq.n	8000588 <RCC_GetClocksFreq+0x94>
 8000504:	d931      	bls.n	800056a <RCC_GetClocksFreq+0x76>
 8000506:	2b08      	cmp	r3, #8
 8000508:	d014      	beq.n	8000534 <RCC_GetClocksFreq+0x40>
 800050a:	2b0c      	cmp	r3, #12
 800050c:	d139      	bne.n	8000582 <RCC_GetClocksFreq+0x8e>
 800050e:	6893      	ldr	r3, [r2, #8]
 8000510:	4d23      	ldr	r5, [pc, #140]	; (80005a0 <RCC_GetClocksFreq+0xac>)
 8000512:	6891      	ldr	r1, [r2, #8]
 8000514:	029b      	lsls	r3, r3, #10
 8000516:	0f1b      	lsrs	r3, r3, #28
 8000518:	5ceb      	ldrb	r3, [r5, r3]
 800051a:	0209      	lsls	r1, r1, #8
 800051c:	6892      	ldr	r2, [r2, #8]
 800051e:	0f89      	lsrs	r1, r1, #30
 8000520:	b2db      	uxtb	r3, r3
 8000522:	3101      	adds	r1, #1
 8000524:	03d0      	lsls	r0, r2, #15
 8000526:	d433      	bmi.n	8000590 <RCC_GetClocksFreq+0x9c>
 8000528:	481e      	ldr	r0, [pc, #120]	; (80005a4 <RCC_GetClocksFreq+0xb0>)
 800052a:	4358      	muls	r0, r3
 800052c:	f000 febe 	bl	80012ac <__aeabi_uidiv>
 8000530:	6020      	str	r0, [r4, #0]
 8000532:	e002      	b.n	800053a <RCC_GetClocksFreq+0x46>
 8000534:	481c      	ldr	r0, [pc, #112]	; (80005a8 <RCC_GetClocksFreq+0xb4>)
 8000536:	4d1a      	ldr	r5, [pc, #104]	; (80005a0 <RCC_GetClocksFreq+0xac>)
 8000538:	6020      	str	r0, [r4, #0]
 800053a:	4b18      	ldr	r3, [pc, #96]	; (800059c <RCC_GetClocksFreq+0xa8>)
 800053c:	689a      	ldr	r2, [r3, #8]
 800053e:	0612      	lsls	r2, r2, #24
 8000540:	0f12      	lsrs	r2, r2, #28
 8000542:	18aa      	adds	r2, r5, r2
 8000544:	7b12      	ldrb	r2, [r2, #12]
 8000546:	40d0      	lsrs	r0, r2
 8000548:	6060      	str	r0, [r4, #4]
 800054a:	689a      	ldr	r2, [r3, #8]
 800054c:	1c01      	adds	r1, r0, #0
 800054e:	0552      	lsls	r2, r2, #21
 8000550:	0f52      	lsrs	r2, r2, #29
 8000552:	18aa      	adds	r2, r5, r2
 8000554:	7b12      	ldrb	r2, [r2, #12]
 8000556:	40d1      	lsrs	r1, r2
 8000558:	60a1      	str	r1, [r4, #8]
 800055a:	689b      	ldr	r3, [r3, #8]
 800055c:	049b      	lsls	r3, r3, #18
 800055e:	0f5b      	lsrs	r3, r3, #29
 8000560:	18ed      	adds	r5, r5, r3
 8000562:	7b2b      	ldrb	r3, [r5, #12]
 8000564:	40d8      	lsrs	r0, r3
 8000566:	60e0      	str	r0, [r4, #12]
 8000568:	bd38      	pop	{r3, r4, r5, pc}
 800056a:	2b00      	cmp	r3, #0
 800056c:	d109      	bne.n	8000582 <RCC_GetClocksFreq+0x8e>
 800056e:	6853      	ldr	r3, [r2, #4]
 8000570:	041b      	lsls	r3, r3, #16
 8000572:	0f5b      	lsrs	r3, r3, #29
 8000574:	2080      	movs	r0, #128	; 0x80
 8000576:	3301      	adds	r3, #1
 8000578:	0200      	lsls	r0, r0, #8
 800057a:	4098      	lsls	r0, r3
 800057c:	6020      	str	r0, [r4, #0]
 800057e:	4d08      	ldr	r5, [pc, #32]	; (80005a0 <RCC_GetClocksFreq+0xac>)
 8000580:	e7db      	b.n	800053a <RCC_GetClocksFreq+0x46>
 8000582:	4b06      	ldr	r3, [pc, #24]	; (800059c <RCC_GetClocksFreq+0xa8>)
 8000584:	685b      	ldr	r3, [r3, #4]
 8000586:	e7f3      	b.n	8000570 <RCC_GetClocksFreq+0x7c>
 8000588:	4806      	ldr	r0, [pc, #24]	; (80005a4 <RCC_GetClocksFreq+0xb0>)
 800058a:	4d05      	ldr	r5, [pc, #20]	; (80005a0 <RCC_GetClocksFreq+0xac>)
 800058c:	6020      	str	r0, [r4, #0]
 800058e:	e7d4      	b.n	800053a <RCC_GetClocksFreq+0x46>
 8000590:	4805      	ldr	r0, [pc, #20]	; (80005a8 <RCC_GetClocksFreq+0xb4>)
 8000592:	4358      	muls	r0, r3
 8000594:	f000 fe8a 	bl	80012ac <__aeabi_uidiv>
 8000598:	6020      	str	r0, [r4, #0]
 800059a:	e7ce      	b.n	800053a <RCC_GetClocksFreq+0x46>
 800059c:	40023800 	.word	0x40023800
 80005a0:	20000000 	.word	0x20000000
 80005a4:	00f42400 	.word	0x00f42400
 80005a8:	007a1200 	.word	0x007a1200

080005ac <RCC_RTCCLKConfig>:
 80005ac:	23c0      	movs	r3, #192	; 0xc0
 80005ae:	029b      	lsls	r3, r3, #10
 80005b0:	1c02      	adds	r2, r0, #0
 80005b2:	b510      	push	{r4, lr}
 80005b4:	401a      	ands	r2, r3
 80005b6:	429a      	cmp	r2, r3
 80005b8:	d108      	bne.n	80005cc <RCC_RTCCLKConfig+0x20>
 80005ba:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <RCC_RTCCLKConfig+0x34>)
 80005bc:	4909      	ldr	r1, [pc, #36]	; (80005e4 <RCC_RTCCLKConfig+0x38>)
 80005be:	681c      	ldr	r4, [r3, #0]
 80005c0:	4021      	ands	r1, r4
 80005c2:	24c0      	movs	r4, #192	; 0xc0
 80005c4:	05e4      	lsls	r4, r4, #23
 80005c6:	4020      	ands	r0, r4
 80005c8:	4308      	orrs	r0, r1
 80005ca:	6018      	str	r0, [r3, #0]
 80005cc:	4b04      	ldr	r3, [pc, #16]	; (80005e0 <RCC_RTCCLKConfig+0x34>)
 80005ce:	4906      	ldr	r1, [pc, #24]	; (80005e8 <RCC_RTCCLKConfig+0x3c>)
 80005d0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80005d2:	4001      	ands	r1, r0
 80005d4:	6359      	str	r1, [r3, #52]	; 0x34
 80005d6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80005d8:	430a      	orrs	r2, r1
 80005da:	635a      	str	r2, [r3, #52]	; 0x34
 80005dc:	bd10      	pop	{r4, pc}
 80005de:	46c0      	nop			; (mov r8, r8)
 80005e0:	40023800 	.word	0x40023800
 80005e4:	9fffffff 	.word	0x9fffffff
 80005e8:	fffcffff 	.word	0xfffcffff

080005ec <RCC_RTCCLKCmd>:
 80005ec:	4b01      	ldr	r3, [pc, #4]	; (80005f4 <RCC_RTCCLKCmd+0x8>)
 80005ee:	6018      	str	r0, [r3, #0]
 80005f0:	4770      	bx	lr
 80005f2:	46c0      	nop			; (mov r8, r8)
 80005f4:	424706d8 	.word	0x424706d8

080005f8 <RCC_RTCResetCmd>:
 80005f8:	4b01      	ldr	r3, [pc, #4]	; (8000600 <RCC_RTCResetCmd+0x8>)
 80005fa:	6018      	str	r0, [r3, #0]
 80005fc:	4770      	bx	lr
 80005fe:	46c0      	nop			; (mov r8, r8)
 8000600:	424706dc 	.word	0x424706dc

08000604 <RCC_AHBPeriphClockCmd>:
 8000604:	4b04      	ldr	r3, [pc, #16]	; (8000618 <RCC_AHBPeriphClockCmd+0x14>)
 8000606:	69da      	ldr	r2, [r3, #28]
 8000608:	2900      	cmp	r1, #0
 800060a:	d102      	bne.n	8000612 <RCC_AHBPeriphClockCmd+0xe>
 800060c:	4382      	bics	r2, r0
 800060e:	61da      	str	r2, [r3, #28]
 8000610:	4770      	bx	lr
 8000612:	4310      	orrs	r0, r2
 8000614:	61d8      	str	r0, [r3, #28]
 8000616:	e7fb      	b.n	8000610 <RCC_AHBPeriphClockCmd+0xc>
 8000618:	40023800 	.word	0x40023800

0800061c <RCC_APB2PeriphClockCmd>:
 800061c:	4b04      	ldr	r3, [pc, #16]	; (8000630 <RCC_APB2PeriphClockCmd+0x14>)
 800061e:	6a1a      	ldr	r2, [r3, #32]
 8000620:	2900      	cmp	r1, #0
 8000622:	d102      	bne.n	800062a <RCC_APB2PeriphClockCmd+0xe>
 8000624:	4382      	bics	r2, r0
 8000626:	621a      	str	r2, [r3, #32]
 8000628:	4770      	bx	lr
 800062a:	4310      	orrs	r0, r2
 800062c:	6218      	str	r0, [r3, #32]
 800062e:	e7fb      	b.n	8000628 <RCC_APB2PeriphClockCmd+0xc>
 8000630:	40023800 	.word	0x40023800

08000634 <RCC_APB1PeriphClockCmd>:
 8000634:	4b04      	ldr	r3, [pc, #16]	; (8000648 <RCC_APB1PeriphClockCmd+0x14>)
 8000636:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000638:	2900      	cmp	r1, #0
 800063a:	d102      	bne.n	8000642 <RCC_APB1PeriphClockCmd+0xe>
 800063c:	4382      	bics	r2, r0
 800063e:	625a      	str	r2, [r3, #36]	; 0x24
 8000640:	4770      	bx	lr
 8000642:	4310      	orrs	r0, r2
 8000644:	6258      	str	r0, [r3, #36]	; 0x24
 8000646:	e7fb      	b.n	8000640 <RCC_APB1PeriphClockCmd+0xc>
 8000648:	40023800 	.word	0x40023800

0800064c <RCC_AHBPeriphResetCmd>:
 800064c:	4b04      	ldr	r3, [pc, #16]	; (8000660 <RCC_AHBPeriphResetCmd+0x14>)
 800064e:	691a      	ldr	r2, [r3, #16]
 8000650:	2900      	cmp	r1, #0
 8000652:	d102      	bne.n	800065a <RCC_AHBPeriphResetCmd+0xe>
 8000654:	4382      	bics	r2, r0
 8000656:	611a      	str	r2, [r3, #16]
 8000658:	4770      	bx	lr
 800065a:	4310      	orrs	r0, r2
 800065c:	6118      	str	r0, [r3, #16]
 800065e:	e7fb      	b.n	8000658 <RCC_AHBPeriphResetCmd+0xc>
 8000660:	40023800 	.word	0x40023800

08000664 <RCC_APB2PeriphResetCmd>:
 8000664:	4b04      	ldr	r3, [pc, #16]	; (8000678 <RCC_APB2PeriphResetCmd+0x14>)
 8000666:	695a      	ldr	r2, [r3, #20]
 8000668:	2900      	cmp	r1, #0
 800066a:	d102      	bne.n	8000672 <RCC_APB2PeriphResetCmd+0xe>
 800066c:	4382      	bics	r2, r0
 800066e:	615a      	str	r2, [r3, #20]
 8000670:	4770      	bx	lr
 8000672:	4310      	orrs	r0, r2
 8000674:	6158      	str	r0, [r3, #20]
 8000676:	e7fb      	b.n	8000670 <RCC_APB2PeriphResetCmd+0xc>
 8000678:	40023800 	.word	0x40023800

0800067c <RCC_APB1PeriphResetCmd>:
 800067c:	4b04      	ldr	r3, [pc, #16]	; (8000690 <RCC_APB1PeriphResetCmd+0x14>)
 800067e:	699a      	ldr	r2, [r3, #24]
 8000680:	2900      	cmp	r1, #0
 8000682:	d102      	bne.n	800068a <RCC_APB1PeriphResetCmd+0xe>
 8000684:	4382      	bics	r2, r0
 8000686:	619a      	str	r2, [r3, #24]
 8000688:	4770      	bx	lr
 800068a:	4310      	orrs	r0, r2
 800068c:	6198      	str	r0, [r3, #24]
 800068e:	e7fb      	b.n	8000688 <RCC_APB1PeriphResetCmd+0xc>
 8000690:	40023800 	.word	0x40023800

08000694 <RCC_AHBPeriphClockLPModeCmd>:
 8000694:	4b04      	ldr	r3, [pc, #16]	; (80006a8 <RCC_AHBPeriphClockLPModeCmd+0x14>)
 8000696:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8000698:	2900      	cmp	r1, #0
 800069a:	d102      	bne.n	80006a2 <RCC_AHBPeriphClockLPModeCmd+0xe>
 800069c:	4382      	bics	r2, r0
 800069e:	629a      	str	r2, [r3, #40]	; 0x28
 80006a0:	4770      	bx	lr
 80006a2:	4310      	orrs	r0, r2
 80006a4:	6298      	str	r0, [r3, #40]	; 0x28
 80006a6:	e7fb      	b.n	80006a0 <RCC_AHBPeriphClockLPModeCmd+0xc>
 80006a8:	40023800 	.word	0x40023800

080006ac <RCC_APB2PeriphClockLPModeCmd>:
 80006ac:	4b04      	ldr	r3, [pc, #16]	; (80006c0 <RCC_APB2PeriphClockLPModeCmd+0x14>)
 80006ae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80006b0:	2900      	cmp	r1, #0
 80006b2:	d102      	bne.n	80006ba <RCC_APB2PeriphClockLPModeCmd+0xe>
 80006b4:	4382      	bics	r2, r0
 80006b6:	62da      	str	r2, [r3, #44]	; 0x2c
 80006b8:	4770      	bx	lr
 80006ba:	4310      	orrs	r0, r2
 80006bc:	62d8      	str	r0, [r3, #44]	; 0x2c
 80006be:	e7fb      	b.n	80006b8 <RCC_APB2PeriphClockLPModeCmd+0xc>
 80006c0:	40023800 	.word	0x40023800

080006c4 <RCC_APB1PeriphClockLPModeCmd>:
 80006c4:	4b04      	ldr	r3, [pc, #16]	; (80006d8 <RCC_APB1PeriphClockLPModeCmd+0x14>)
 80006c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80006c8:	2900      	cmp	r1, #0
 80006ca:	d102      	bne.n	80006d2 <RCC_APB1PeriphClockLPModeCmd+0xe>
 80006cc:	4382      	bics	r2, r0
 80006ce:	631a      	str	r2, [r3, #48]	; 0x30
 80006d0:	4770      	bx	lr
 80006d2:	4310      	orrs	r0, r2
 80006d4:	6318      	str	r0, [r3, #48]	; 0x30
 80006d6:	e7fb      	b.n	80006d0 <RCC_APB1PeriphClockLPModeCmd+0xc>
 80006d8:	40023800 	.word	0x40023800

080006dc <RCC_ITConfig>:
 80006dc:	4b04      	ldr	r3, [pc, #16]	; (80006f0 <RCC_ITConfig+0x14>)
 80006de:	781a      	ldrb	r2, [r3, #0]
 80006e0:	2900      	cmp	r1, #0
 80006e2:	d102      	bne.n	80006ea <RCC_ITConfig+0xe>
 80006e4:	4382      	bics	r2, r0
 80006e6:	701a      	strb	r2, [r3, #0]
 80006e8:	4770      	bx	lr
 80006ea:	4310      	orrs	r0, r2
 80006ec:	7018      	strb	r0, [r3, #0]
 80006ee:	e7fb      	b.n	80006e8 <RCC_ITConfig+0xc>
 80006f0:	4002380d 	.word	0x4002380d

080006f4 <RCC_GetFlagStatus>:
 80006f4:	0943      	lsrs	r3, r0, #5
 80006f6:	2b01      	cmp	r3, #1
 80006f8:	d008      	beq.n	800070c <RCC_GetFlagStatus+0x18>
 80006fa:	4b06      	ldr	r3, [pc, #24]	; (8000714 <RCC_GetFlagStatus+0x20>)
 80006fc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80006fe:	221f      	movs	r2, #31
 8000700:	4010      	ands	r0, r2
 8000702:	40c3      	lsrs	r3, r0
 8000704:	1c18      	adds	r0, r3, #0
 8000706:	2301      	movs	r3, #1
 8000708:	4018      	ands	r0, r3
 800070a:	4770      	bx	lr
 800070c:	4b01      	ldr	r3, [pc, #4]	; (8000714 <RCC_GetFlagStatus+0x20>)
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	e7f5      	b.n	80006fe <RCC_GetFlagStatus+0xa>
 8000712:	46c0      	nop			; (mov r8, r8)
 8000714:	40023800 	.word	0x40023800

08000718 <RCC_ClearFlag>:
 8000718:	4b03      	ldr	r3, [pc, #12]	; (8000728 <RCC_ClearFlag+0x10>)
 800071a:	2280      	movs	r2, #128	; 0x80
 800071c:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800071e:	0452      	lsls	r2, r2, #17
 8000720:	430a      	orrs	r2, r1
 8000722:	635a      	str	r2, [r3, #52]	; 0x34
 8000724:	4770      	bx	lr
 8000726:	46c0      	nop			; (mov r8, r8)
 8000728:	40023800 	.word	0x40023800

0800072c <RCC_GetITStatus>:
 800072c:	4b03      	ldr	r3, [pc, #12]	; (800073c <RCC_GetITStatus+0x10>)
 800072e:	68db      	ldr	r3, [r3, #12]
 8000730:	4018      	ands	r0, r3
 8000732:	1e43      	subs	r3, r0, #1
 8000734:	4198      	sbcs	r0, r3
 8000736:	b2c0      	uxtb	r0, r0
 8000738:	4770      	bx	lr
 800073a:	46c0      	nop			; (mov r8, r8)
 800073c:	40023800 	.word	0x40023800

08000740 <RCC_ClearITPendingBit>:
 8000740:	4b01      	ldr	r3, [pc, #4]	; (8000748 <RCC_ClearITPendingBit+0x8>)
 8000742:	7018      	strb	r0, [r3, #0]
 8000744:	4770      	bx	lr
 8000746:	46c0      	nop			; (mov r8, r8)
 8000748:	4002380e 	.word	0x4002380e

0800074c <TIM_DeInit>:
 800074c:	b508      	push	{r3, lr}
 800074e:	2380      	movs	r3, #128	; 0x80
 8000750:	05db      	lsls	r3, r3, #23
 8000752:	4298      	cmp	r0, r3
 8000754:	d021      	beq.n	800079a <TIM_DeInit+0x4e>
 8000756:	4b35      	ldr	r3, [pc, #212]	; (800082c <TIM_DeInit+0xe0>)
 8000758:	4298      	cmp	r0, r3
 800075a:	d027      	beq.n	80007ac <TIM_DeInit+0x60>
 800075c:	4b34      	ldr	r3, [pc, #208]	; (8000830 <TIM_DeInit+0xe4>)
 800075e:	4298      	cmp	r0, r3
 8000760:	d02d      	beq.n	80007be <TIM_DeInit+0x72>
 8000762:	4b34      	ldr	r3, [pc, #208]	; (8000834 <TIM_DeInit+0xe8>)
 8000764:	4298      	cmp	r0, r3
 8000766:	d033      	beq.n	80007d0 <TIM_DeInit+0x84>
 8000768:	4b33      	ldr	r3, [pc, #204]	; (8000838 <TIM_DeInit+0xec>)
 800076a:	4298      	cmp	r0, r3
 800076c:	d039      	beq.n	80007e2 <TIM_DeInit+0x96>
 800076e:	4b33      	ldr	r3, [pc, #204]	; (800083c <TIM_DeInit+0xf0>)
 8000770:	4298      	cmp	r0, r3
 8000772:	d03f      	beq.n	80007f4 <TIM_DeInit+0xa8>
 8000774:	4b32      	ldr	r3, [pc, #200]	; (8000840 <TIM_DeInit+0xf4>)
 8000776:	4298      	cmp	r0, r3
 8000778:	d045      	beq.n	8000806 <TIM_DeInit+0xba>
 800077a:	4b32      	ldr	r3, [pc, #200]	; (8000844 <TIM_DeInit+0xf8>)
 800077c:	4298      	cmp	r0, r3
 800077e:	d04b      	beq.n	8000818 <TIM_DeInit+0xcc>
 8000780:	4b31      	ldr	r3, [pc, #196]	; (8000848 <TIM_DeInit+0xfc>)
 8000782:	4298      	cmp	r0, r3
 8000784:	d000      	beq.n	8000788 <TIM_DeInit+0x3c>
 8000786:	bd08      	pop	{r3, pc}
 8000788:	2010      	movs	r0, #16
 800078a:	2101      	movs	r1, #1
 800078c:	f7ff ff6a 	bl	8000664 <RCC_APB2PeriphResetCmd>
 8000790:	2010      	movs	r0, #16
 8000792:	2100      	movs	r1, #0
 8000794:	f7ff ff66 	bl	8000664 <RCC_APB2PeriphResetCmd>
 8000798:	e7f5      	b.n	8000786 <TIM_DeInit+0x3a>
 800079a:	2001      	movs	r0, #1
 800079c:	2101      	movs	r1, #1
 800079e:	f7ff ff6d 	bl	800067c <RCC_APB1PeriphResetCmd>
 80007a2:	2001      	movs	r0, #1
 80007a4:	2100      	movs	r1, #0
 80007a6:	f7ff ff69 	bl	800067c <RCC_APB1PeriphResetCmd>
 80007aa:	e7ec      	b.n	8000786 <TIM_DeInit+0x3a>
 80007ac:	2002      	movs	r0, #2
 80007ae:	2101      	movs	r1, #1
 80007b0:	f7ff ff64 	bl	800067c <RCC_APB1PeriphResetCmd>
 80007b4:	2002      	movs	r0, #2
 80007b6:	2100      	movs	r1, #0
 80007b8:	f7ff ff60 	bl	800067c <RCC_APB1PeriphResetCmd>
 80007bc:	e7e3      	b.n	8000786 <TIM_DeInit+0x3a>
 80007be:	2004      	movs	r0, #4
 80007c0:	2101      	movs	r1, #1
 80007c2:	f7ff ff5b 	bl	800067c <RCC_APB1PeriphResetCmd>
 80007c6:	2004      	movs	r0, #4
 80007c8:	2100      	movs	r1, #0
 80007ca:	f7ff ff57 	bl	800067c <RCC_APB1PeriphResetCmd>
 80007ce:	e7da      	b.n	8000786 <TIM_DeInit+0x3a>
 80007d0:	2008      	movs	r0, #8
 80007d2:	2101      	movs	r1, #1
 80007d4:	f7ff ff52 	bl	800067c <RCC_APB1PeriphResetCmd>
 80007d8:	2008      	movs	r0, #8
 80007da:	2100      	movs	r1, #0
 80007dc:	f7ff ff4e 	bl	800067c <RCC_APB1PeriphResetCmd>
 80007e0:	e7d1      	b.n	8000786 <TIM_DeInit+0x3a>
 80007e2:	2010      	movs	r0, #16
 80007e4:	2101      	movs	r1, #1
 80007e6:	f7ff ff49 	bl	800067c <RCC_APB1PeriphResetCmd>
 80007ea:	2010      	movs	r0, #16
 80007ec:	2100      	movs	r1, #0
 80007ee:	f7ff ff45 	bl	800067c <RCC_APB1PeriphResetCmd>
 80007f2:	e7c8      	b.n	8000786 <TIM_DeInit+0x3a>
 80007f4:	2020      	movs	r0, #32
 80007f6:	2101      	movs	r1, #1
 80007f8:	f7ff ff40 	bl	800067c <RCC_APB1PeriphResetCmd>
 80007fc:	2020      	movs	r0, #32
 80007fe:	2100      	movs	r1, #0
 8000800:	f7ff ff3c 	bl	800067c <RCC_APB1PeriphResetCmd>
 8000804:	e7bf      	b.n	8000786 <TIM_DeInit+0x3a>
 8000806:	2004      	movs	r0, #4
 8000808:	2101      	movs	r1, #1
 800080a:	f7ff ff2b 	bl	8000664 <RCC_APB2PeriphResetCmd>
 800080e:	2004      	movs	r0, #4
 8000810:	2100      	movs	r1, #0
 8000812:	f7ff ff27 	bl	8000664 <RCC_APB2PeriphResetCmd>
 8000816:	e7b6      	b.n	8000786 <TIM_DeInit+0x3a>
 8000818:	2008      	movs	r0, #8
 800081a:	2101      	movs	r1, #1
 800081c:	f7ff ff22 	bl	8000664 <RCC_APB2PeriphResetCmd>
 8000820:	2008      	movs	r0, #8
 8000822:	2100      	movs	r1, #0
 8000824:	f7ff ff1e 	bl	8000664 <RCC_APB2PeriphResetCmd>
 8000828:	e7ad      	b.n	8000786 <TIM_DeInit+0x3a>
 800082a:	46c0      	nop			; (mov r8, r8)
 800082c:	40000400 	.word	0x40000400
 8000830:	40000800 	.word	0x40000800
 8000834:	40000c00 	.word	0x40000c00
 8000838:	40001000 	.word	0x40001000
 800083c:	40001400 	.word	0x40001400
 8000840:	40010800 	.word	0x40010800
 8000844:	40010c00 	.word	0x40010c00
 8000848:	40011000 	.word	0x40011000

0800084c <TIM_TimeBaseInit>:
 800084c:	6803      	ldr	r3, [r0, #0]
 800084e:	2280      	movs	r2, #128	; 0x80
 8000850:	b510      	push	{r4, lr}
 8000852:	b29b      	uxth	r3, r3
 8000854:	05d2      	lsls	r2, r2, #23
 8000856:	4290      	cmp	r0, r2
 8000858:	d01a      	beq.n	8000890 <TIM_TimeBaseInit+0x44>
 800085a:	4a10      	ldr	r2, [pc, #64]	; (800089c <TIM_TimeBaseInit+0x50>)
 800085c:	4290      	cmp	r0, r2
 800085e:	d017      	beq.n	8000890 <TIM_TimeBaseInit+0x44>
 8000860:	4a0f      	ldr	r2, [pc, #60]	; (80008a0 <TIM_TimeBaseInit+0x54>)
 8000862:	4290      	cmp	r0, r2
 8000864:	d014      	beq.n	8000890 <TIM_TimeBaseInit+0x44>
 8000866:	4a0f      	ldr	r2, [pc, #60]	; (80008a4 <TIM_TimeBaseInit+0x58>)
 8000868:	4290      	cmp	r0, r2
 800086a:	d011      	beq.n	8000890 <TIM_TimeBaseInit+0x44>
 800086c:	4a0e      	ldr	r2, [pc, #56]	; (80008a8 <TIM_TimeBaseInit+0x5c>)
 800086e:	4290      	cmp	r0, r2
 8000870:	d006      	beq.n	8000880 <TIM_TimeBaseInit+0x34>
 8000872:	4a0e      	ldr	r2, [pc, #56]	; (80008ac <TIM_TimeBaseInit+0x60>)
 8000874:	4290      	cmp	r0, r2
 8000876:	d003      	beq.n	8000880 <TIM_TimeBaseInit+0x34>
 8000878:	4c0d      	ldr	r4, [pc, #52]	; (80008b0 <TIM_TimeBaseInit+0x64>)
 800087a:	890a      	ldrh	r2, [r1, #8]
 800087c:	4023      	ands	r3, r4
 800087e:	4313      	orrs	r3, r2
 8000880:	8003      	strh	r3, [r0, #0]
 8000882:	684b      	ldr	r3, [r1, #4]
 8000884:	62c3      	str	r3, [r0, #44]	; 0x2c
 8000886:	880b      	ldrh	r3, [r1, #0]
 8000888:	8503      	strh	r3, [r0, #40]	; 0x28
 800088a:	2301      	movs	r3, #1
 800088c:	8283      	strh	r3, [r0, #20]
 800088e:	bd10      	pop	{r4, pc}
 8000890:	2270      	movs	r2, #112	; 0x70
 8000892:	4393      	bics	r3, r2
 8000894:	884a      	ldrh	r2, [r1, #2]
 8000896:	4313      	orrs	r3, r2
 8000898:	e7e8      	b.n	800086c <TIM_TimeBaseInit+0x20>
 800089a:	46c0      	nop			; (mov r8, r8)
 800089c:	40000400 	.word	0x40000400
 80008a0:	40000800 	.word	0x40000800
 80008a4:	40000c00 	.word	0x40000c00
 80008a8:	40001000 	.word	0x40001000
 80008ac:	40001400 	.word	0x40001400
 80008b0:	fffffcff 	.word	0xfffffcff

080008b4 <TIM_TimeBaseStructInit>:
 80008b4:	2301      	movs	r3, #1
 80008b6:	425b      	negs	r3, r3
 80008b8:	6043      	str	r3, [r0, #4]
 80008ba:	2300      	movs	r3, #0
 80008bc:	8003      	strh	r3, [r0, #0]
 80008be:	8103      	strh	r3, [r0, #8]
 80008c0:	8043      	strh	r3, [r0, #2]
 80008c2:	4770      	bx	lr

080008c4 <TIM_PrescalerConfig>:
 80008c4:	8501      	strh	r1, [r0, #40]	; 0x28
 80008c6:	8282      	strh	r2, [r0, #20]
 80008c8:	4770      	bx	lr
 80008ca:	46c0      	nop			; (mov r8, r8)

080008cc <TIM_CounterModeConfig>:
 80008cc:	6802      	ldr	r2, [r0, #0]
 80008ce:	4b02      	ldr	r3, [pc, #8]	; (80008d8 <TIM_CounterModeConfig+0xc>)
 80008d0:	4013      	ands	r3, r2
 80008d2:	4319      	orrs	r1, r3
 80008d4:	8001      	strh	r1, [r0, #0]
 80008d6:	4770      	bx	lr
 80008d8:	0000ff8f 	.word	0x0000ff8f

080008dc <TIM_SetCounter>:
 80008dc:	6241      	str	r1, [r0, #36]	; 0x24
 80008de:	4770      	bx	lr

080008e0 <TIM_SetAutoreload>:
 80008e0:	62c1      	str	r1, [r0, #44]	; 0x2c
 80008e2:	4770      	bx	lr

080008e4 <TIM_GetCounter>:
 80008e4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80008e6:	4770      	bx	lr

080008e8 <TIM_GetPrescaler>:
 80008e8:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80008ea:	b280      	uxth	r0, r0
 80008ec:	4770      	bx	lr
 80008ee:	46c0      	nop			; (mov r8, r8)

080008f0 <TIM_UpdateDisableConfig>:
 80008f0:	2900      	cmp	r1, #0
 80008f2:	d104      	bne.n	80008fe <TIM_UpdateDisableConfig+0xe>
 80008f4:	6802      	ldr	r2, [r0, #0]
 80008f6:	4b05      	ldr	r3, [pc, #20]	; (800090c <TIM_UpdateDisableConfig+0x1c>)
 80008f8:	4013      	ands	r3, r2
 80008fa:	8003      	strh	r3, [r0, #0]
 80008fc:	4770      	bx	lr
 80008fe:	6803      	ldr	r3, [r0, #0]
 8000900:	2202      	movs	r2, #2
 8000902:	b29b      	uxth	r3, r3
 8000904:	4313      	orrs	r3, r2
 8000906:	8003      	strh	r3, [r0, #0]
 8000908:	e7f8      	b.n	80008fc <TIM_UpdateDisableConfig+0xc>
 800090a:	46c0      	nop			; (mov r8, r8)
 800090c:	0000fffd 	.word	0x0000fffd

08000910 <TIM_UpdateRequestConfig>:
 8000910:	2900      	cmp	r1, #0
 8000912:	d104      	bne.n	800091e <TIM_UpdateRequestConfig+0xe>
 8000914:	6802      	ldr	r2, [r0, #0]
 8000916:	4b05      	ldr	r3, [pc, #20]	; (800092c <TIM_UpdateRequestConfig+0x1c>)
 8000918:	4013      	ands	r3, r2
 800091a:	8003      	strh	r3, [r0, #0]
 800091c:	4770      	bx	lr
 800091e:	6803      	ldr	r3, [r0, #0]
 8000920:	2204      	movs	r2, #4
 8000922:	b29b      	uxth	r3, r3
 8000924:	4313      	orrs	r3, r2
 8000926:	8003      	strh	r3, [r0, #0]
 8000928:	e7f8      	b.n	800091c <TIM_UpdateRequestConfig+0xc>
 800092a:	46c0      	nop			; (mov r8, r8)
 800092c:	0000fffb 	.word	0x0000fffb

08000930 <TIM_ARRPreloadConfig>:
 8000930:	2900      	cmp	r1, #0
 8000932:	d104      	bne.n	800093e <TIM_ARRPreloadConfig+0xe>
 8000934:	6802      	ldr	r2, [r0, #0]
 8000936:	4b05      	ldr	r3, [pc, #20]	; (800094c <TIM_ARRPreloadConfig+0x1c>)
 8000938:	4013      	ands	r3, r2
 800093a:	8003      	strh	r3, [r0, #0]
 800093c:	4770      	bx	lr
 800093e:	6803      	ldr	r3, [r0, #0]
 8000940:	2280      	movs	r2, #128	; 0x80
 8000942:	b29b      	uxth	r3, r3
 8000944:	4313      	orrs	r3, r2
 8000946:	8003      	strh	r3, [r0, #0]
 8000948:	e7f8      	b.n	800093c <TIM_ARRPreloadConfig+0xc>
 800094a:	46c0      	nop			; (mov r8, r8)
 800094c:	0000ff7f 	.word	0x0000ff7f

08000950 <TIM_SelectOnePulseMode>:
 8000950:	6802      	ldr	r2, [r0, #0]
 8000952:	4b04      	ldr	r3, [pc, #16]	; (8000964 <TIM_SelectOnePulseMode+0x14>)
 8000954:	4013      	ands	r3, r2
 8000956:	8003      	strh	r3, [r0, #0]
 8000958:	6803      	ldr	r3, [r0, #0]
 800095a:	b29b      	uxth	r3, r3
 800095c:	4319      	orrs	r1, r3
 800095e:	8001      	strh	r1, [r0, #0]
 8000960:	4770      	bx	lr
 8000962:	46c0      	nop			; (mov r8, r8)
 8000964:	0000fff7 	.word	0x0000fff7

08000968 <TIM_SetClockDivision>:
 8000968:	6802      	ldr	r2, [r0, #0]
 800096a:	4b04      	ldr	r3, [pc, #16]	; (800097c <TIM_SetClockDivision+0x14>)
 800096c:	4013      	ands	r3, r2
 800096e:	8003      	strh	r3, [r0, #0]
 8000970:	6803      	ldr	r3, [r0, #0]
 8000972:	b29b      	uxth	r3, r3
 8000974:	4319      	orrs	r1, r3
 8000976:	8001      	strh	r1, [r0, #0]
 8000978:	4770      	bx	lr
 800097a:	46c0      	nop			; (mov r8, r8)
 800097c:	0000fcff 	.word	0x0000fcff

08000980 <TIM_Cmd>:
 8000980:	2900      	cmp	r1, #0
 8000982:	d104      	bne.n	800098e <TIM_Cmd+0xe>
 8000984:	6802      	ldr	r2, [r0, #0]
 8000986:	4b05      	ldr	r3, [pc, #20]	; (800099c <TIM_Cmd+0x1c>)
 8000988:	4013      	ands	r3, r2
 800098a:	8003      	strh	r3, [r0, #0]
 800098c:	4770      	bx	lr
 800098e:	6803      	ldr	r3, [r0, #0]
 8000990:	2201      	movs	r2, #1
 8000992:	b29b      	uxth	r3, r3
 8000994:	4313      	orrs	r3, r2
 8000996:	8003      	strh	r3, [r0, #0]
 8000998:	e7f8      	b.n	800098c <TIM_Cmd+0xc>
 800099a:	46c0      	nop			; (mov r8, r8)
 800099c:	0000fffe 	.word	0x0000fffe

080009a0 <TIM_OC1Init>:
 80009a0:	6a02      	ldr	r2, [r0, #32]
 80009a2:	4b0a      	ldr	r3, [pc, #40]	; (80009cc <TIM_OC1Init+0x2c>)
 80009a4:	b530      	push	{r4, r5, lr}
 80009a6:	4013      	ands	r3, r2
 80009a8:	8403      	strh	r3, [r0, #32]
 80009aa:	6a04      	ldr	r4, [r0, #32]
 80009ac:	4b08      	ldr	r3, [pc, #32]	; (80009d0 <TIM_OC1Init+0x30>)
 80009ae:	6982      	ldr	r2, [r0, #24]
 80009b0:	884d      	ldrh	r5, [r1, #2]
 80009b2:	401a      	ands	r2, r3
 80009b4:	880b      	ldrh	r3, [r1, #0]
 80009b6:	431a      	orrs	r2, r3
 80009b8:	4b06      	ldr	r3, [pc, #24]	; (80009d4 <TIM_OC1Init+0x34>)
 80009ba:	401c      	ands	r4, r3
 80009bc:	890b      	ldrh	r3, [r1, #8]
 80009be:	6849      	ldr	r1, [r1, #4]
 80009c0:	432b      	orrs	r3, r5
 80009c2:	4323      	orrs	r3, r4
 80009c4:	6341      	str	r1, [r0, #52]	; 0x34
 80009c6:	8302      	strh	r2, [r0, #24]
 80009c8:	8403      	strh	r3, [r0, #32]
 80009ca:	bd30      	pop	{r4, r5, pc}
 80009cc:	0000fffe 	.word	0x0000fffe
 80009d0:	0000ff8c 	.word	0x0000ff8c
 80009d4:	0000fffd 	.word	0x0000fffd

080009d8 <TIM_OC2Init>:
 80009d8:	6a02      	ldr	r2, [r0, #32]
 80009da:	4b0d      	ldr	r3, [pc, #52]	; (8000a10 <TIM_OC2Init+0x38>)
 80009dc:	b510      	push	{r4, lr}
 80009de:	4013      	ands	r3, r2
 80009e0:	8403      	strh	r3, [r0, #32]
 80009e2:	6a04      	ldr	r4, [r0, #32]
 80009e4:	4b0b      	ldr	r3, [pc, #44]	; (8000a14 <TIM_OC2Init+0x3c>)
 80009e6:	6982      	ldr	r2, [r0, #24]
 80009e8:	401a      	ands	r2, r3
 80009ea:	880b      	ldrh	r3, [r1, #0]
 80009ec:	021b      	lsls	r3, r3, #8
 80009ee:	431a      	orrs	r2, r3
 80009f0:	4b09      	ldr	r3, [pc, #36]	; (8000a18 <TIM_OC2Init+0x40>)
 80009f2:	b292      	uxth	r2, r2
 80009f4:	4023      	ands	r3, r4
 80009f6:	890c      	ldrh	r4, [r1, #8]
 80009f8:	0124      	lsls	r4, r4, #4
 80009fa:	4323      	orrs	r3, r4
 80009fc:	884c      	ldrh	r4, [r1, #2]
 80009fe:	b29b      	uxth	r3, r3
 8000a00:	0124      	lsls	r4, r4, #4
 8000a02:	6849      	ldr	r1, [r1, #4]
 8000a04:	4323      	orrs	r3, r4
 8000a06:	b29b      	uxth	r3, r3
 8000a08:	6381      	str	r1, [r0, #56]	; 0x38
 8000a0a:	8302      	strh	r2, [r0, #24]
 8000a0c:	8403      	strh	r3, [r0, #32]
 8000a0e:	bd10      	pop	{r4, pc}
 8000a10:	0000ffef 	.word	0x0000ffef
 8000a14:	00008fff 	.word	0x00008fff
 8000a18:	0000ffdf 	.word	0x0000ffdf

08000a1c <TIM_OC3Init>:
 8000a1c:	6a02      	ldr	r2, [r0, #32]
 8000a1e:	4b0c      	ldr	r3, [pc, #48]	; (8000a50 <TIM_OC3Init+0x34>)
 8000a20:	b510      	push	{r4, lr}
 8000a22:	4013      	ands	r3, r2
 8000a24:	8403      	strh	r3, [r0, #32]
 8000a26:	6a04      	ldr	r4, [r0, #32]
 8000a28:	4b0a      	ldr	r3, [pc, #40]	; (8000a54 <TIM_OC3Init+0x38>)
 8000a2a:	69c2      	ldr	r2, [r0, #28]
 8000a2c:	401a      	ands	r2, r3
 8000a2e:	880b      	ldrh	r3, [r1, #0]
 8000a30:	431a      	orrs	r2, r3
 8000a32:	4b09      	ldr	r3, [pc, #36]	; (8000a58 <TIM_OC3Init+0x3c>)
 8000a34:	4023      	ands	r3, r4
 8000a36:	890c      	ldrh	r4, [r1, #8]
 8000a38:	0224      	lsls	r4, r4, #8
 8000a3a:	4323      	orrs	r3, r4
 8000a3c:	884c      	ldrh	r4, [r1, #2]
 8000a3e:	b29b      	uxth	r3, r3
 8000a40:	0224      	lsls	r4, r4, #8
 8000a42:	6849      	ldr	r1, [r1, #4]
 8000a44:	4323      	orrs	r3, r4
 8000a46:	b29b      	uxth	r3, r3
 8000a48:	63c1      	str	r1, [r0, #60]	; 0x3c
 8000a4a:	8382      	strh	r2, [r0, #28]
 8000a4c:	8403      	strh	r3, [r0, #32]
 8000a4e:	bd10      	pop	{r4, pc}
 8000a50:	0000feff 	.word	0x0000feff
 8000a54:	0000ff8f 	.word	0x0000ff8f
 8000a58:	0000fdff 	.word	0x0000fdff

08000a5c <TIM_OC4Init>:
 8000a5c:	6a02      	ldr	r2, [r0, #32]
 8000a5e:	4b0d      	ldr	r3, [pc, #52]	; (8000a94 <TIM_OC4Init+0x38>)
 8000a60:	b510      	push	{r4, lr}
 8000a62:	4013      	ands	r3, r2
 8000a64:	8403      	strh	r3, [r0, #32]
 8000a66:	6a04      	ldr	r4, [r0, #32]
 8000a68:	4b0b      	ldr	r3, [pc, #44]	; (8000a98 <TIM_OC4Init+0x3c>)
 8000a6a:	69c2      	ldr	r2, [r0, #28]
 8000a6c:	401a      	ands	r2, r3
 8000a6e:	880b      	ldrh	r3, [r1, #0]
 8000a70:	021b      	lsls	r3, r3, #8
 8000a72:	431a      	orrs	r2, r3
 8000a74:	4b09      	ldr	r3, [pc, #36]	; (8000a9c <TIM_OC4Init+0x40>)
 8000a76:	b292      	uxth	r2, r2
 8000a78:	4023      	ands	r3, r4
 8000a7a:	890c      	ldrh	r4, [r1, #8]
 8000a7c:	0324      	lsls	r4, r4, #12
 8000a7e:	4323      	orrs	r3, r4
 8000a80:	884c      	ldrh	r4, [r1, #2]
 8000a82:	b29b      	uxth	r3, r3
 8000a84:	0324      	lsls	r4, r4, #12
 8000a86:	6849      	ldr	r1, [r1, #4]
 8000a88:	4323      	orrs	r3, r4
 8000a8a:	b29b      	uxth	r3, r3
 8000a8c:	6401      	str	r1, [r0, #64]	; 0x40
 8000a8e:	8382      	strh	r2, [r0, #28]
 8000a90:	8403      	strh	r3, [r0, #32]
 8000a92:	bd10      	pop	{r4, pc}
 8000a94:	0000efff 	.word	0x0000efff
 8000a98:	00008fff 	.word	0x00008fff
 8000a9c:	0000dfff 	.word	0x0000dfff

08000aa0 <TIM_OCStructInit>:
 8000aa0:	2300      	movs	r3, #0
 8000aa2:	8003      	strh	r3, [r0, #0]
 8000aa4:	8043      	strh	r3, [r0, #2]
 8000aa6:	6043      	str	r3, [r0, #4]
 8000aa8:	8103      	strh	r3, [r0, #8]
 8000aaa:	4770      	bx	lr

08000aac <TIM_SelectOCxM>:
 8000aac:	b530      	push	{r4, r5, lr}
 8000aae:	6a03      	ldr	r3, [r0, #32]
 8000ab0:	2401      	movs	r4, #1
 8000ab2:	b29b      	uxth	r3, r3
 8000ab4:	408c      	lsls	r4, r1
 8000ab6:	43a3      	bics	r3, r4
 8000ab8:	1c05      	adds	r5, r0, #0
 8000aba:	8403      	strh	r3, [r0, #32]
 8000abc:	2308      	movs	r3, #8
 8000abe:	1c08      	adds	r0, r1, #0
 8000ac0:	3518      	adds	r5, #24
 8000ac2:	4398      	bics	r0, r3
 8000ac4:	d00d      	beq.n	8000ae2 <TIM_SelectOCxM+0x36>
 8000ac6:	3904      	subs	r1, #4
 8000ac8:	b289      	uxth	r1, r1
 8000aca:	0849      	lsrs	r1, r1, #1
 8000acc:	1949      	adds	r1, r1, r5
 8000ace:	6808      	ldr	r0, [r1, #0]
 8000ad0:	4b09      	ldr	r3, [pc, #36]	; (8000af8 <TIM_SelectOCxM+0x4c>)
 8000ad2:	0212      	lsls	r2, r2, #8
 8000ad4:	4003      	ands	r3, r0
 8000ad6:	600b      	str	r3, [r1, #0]
 8000ad8:	680b      	ldr	r3, [r1, #0]
 8000ada:	b292      	uxth	r2, r2
 8000adc:	431a      	orrs	r2, r3
 8000ade:	600a      	str	r2, [r1, #0]
 8000ae0:	bd30      	pop	{r4, r5, pc}
 8000ae2:	0849      	lsrs	r1, r1, #1
 8000ae4:	1869      	adds	r1, r5, r1
 8000ae6:	680b      	ldr	r3, [r1, #0]
 8000ae8:	2070      	movs	r0, #112	; 0x70
 8000aea:	4383      	bics	r3, r0
 8000aec:	600b      	str	r3, [r1, #0]
 8000aee:	680b      	ldr	r3, [r1, #0]
 8000af0:	431a      	orrs	r2, r3
 8000af2:	600a      	str	r2, [r1, #0]
 8000af4:	e7f4      	b.n	8000ae0 <TIM_SelectOCxM+0x34>
 8000af6:	46c0      	nop			; (mov r8, r8)
 8000af8:	ffff8fff 	.word	0xffff8fff

08000afc <TIM_SetCompare1>:
 8000afc:	6341      	str	r1, [r0, #52]	; 0x34
 8000afe:	4770      	bx	lr

08000b00 <TIM_SetCompare2>:
 8000b00:	6381      	str	r1, [r0, #56]	; 0x38
 8000b02:	4770      	bx	lr

08000b04 <TIM_SetCompare3>:
 8000b04:	63c1      	str	r1, [r0, #60]	; 0x3c
 8000b06:	4770      	bx	lr

08000b08 <TIM_SetCompare4>:
 8000b08:	6401      	str	r1, [r0, #64]	; 0x40
 8000b0a:	4770      	bx	lr

08000b0c <TIM_ForcedOC1Config>:
 8000b0c:	6982      	ldr	r2, [r0, #24]
 8000b0e:	4b02      	ldr	r3, [pc, #8]	; (8000b18 <TIM_ForcedOC1Config+0xc>)
 8000b10:	4013      	ands	r3, r2
 8000b12:	4319      	orrs	r1, r3
 8000b14:	8301      	strh	r1, [r0, #24]
 8000b16:	4770      	bx	lr
 8000b18:	0000ff8f 	.word	0x0000ff8f

08000b1c <TIM_ForcedOC2Config>:
 8000b1c:	6982      	ldr	r2, [r0, #24]
 8000b1e:	4b04      	ldr	r3, [pc, #16]	; (8000b30 <TIM_ForcedOC2Config+0x14>)
 8000b20:	401a      	ands	r2, r3
 8000b22:	020b      	lsls	r3, r1, #8
 8000b24:	1c11      	adds	r1, r2, #0
 8000b26:	4319      	orrs	r1, r3
 8000b28:	b289      	uxth	r1, r1
 8000b2a:	8301      	strh	r1, [r0, #24]
 8000b2c:	4770      	bx	lr
 8000b2e:	46c0      	nop			; (mov r8, r8)
 8000b30:	00008fff 	.word	0x00008fff

08000b34 <TIM_ForcedOC3Config>:
 8000b34:	69c2      	ldr	r2, [r0, #28]
 8000b36:	4b02      	ldr	r3, [pc, #8]	; (8000b40 <TIM_ForcedOC3Config+0xc>)
 8000b38:	4013      	ands	r3, r2
 8000b3a:	4319      	orrs	r1, r3
 8000b3c:	8381      	strh	r1, [r0, #28]
 8000b3e:	4770      	bx	lr
 8000b40:	0000ff8f 	.word	0x0000ff8f

08000b44 <TIM_ForcedOC4Config>:
 8000b44:	69c2      	ldr	r2, [r0, #28]
 8000b46:	4b04      	ldr	r3, [pc, #16]	; (8000b58 <TIM_ForcedOC4Config+0x14>)
 8000b48:	401a      	ands	r2, r3
 8000b4a:	020b      	lsls	r3, r1, #8
 8000b4c:	1c11      	adds	r1, r2, #0
 8000b4e:	4319      	orrs	r1, r3
 8000b50:	b289      	uxth	r1, r1
 8000b52:	8381      	strh	r1, [r0, #28]
 8000b54:	4770      	bx	lr
 8000b56:	46c0      	nop			; (mov r8, r8)
 8000b58:	00008fff 	.word	0x00008fff

08000b5c <TIM_OC1PreloadConfig>:
 8000b5c:	6982      	ldr	r2, [r0, #24]
 8000b5e:	4b02      	ldr	r3, [pc, #8]	; (8000b68 <TIM_OC1PreloadConfig+0xc>)
 8000b60:	4013      	ands	r3, r2
 8000b62:	4319      	orrs	r1, r3
 8000b64:	8301      	strh	r1, [r0, #24]
 8000b66:	4770      	bx	lr
 8000b68:	0000fff7 	.word	0x0000fff7

08000b6c <TIM_OC2PreloadConfig>:
 8000b6c:	6982      	ldr	r2, [r0, #24]
 8000b6e:	4b04      	ldr	r3, [pc, #16]	; (8000b80 <TIM_OC2PreloadConfig+0x14>)
 8000b70:	401a      	ands	r2, r3
 8000b72:	020b      	lsls	r3, r1, #8
 8000b74:	1c11      	adds	r1, r2, #0
 8000b76:	4319      	orrs	r1, r3
 8000b78:	b289      	uxth	r1, r1
 8000b7a:	8301      	strh	r1, [r0, #24]
 8000b7c:	4770      	bx	lr
 8000b7e:	46c0      	nop			; (mov r8, r8)
 8000b80:	0000f7ff 	.word	0x0000f7ff

08000b84 <TIM_OC3PreloadConfig>:
 8000b84:	69c2      	ldr	r2, [r0, #28]
 8000b86:	4b02      	ldr	r3, [pc, #8]	; (8000b90 <TIM_OC3PreloadConfig+0xc>)
 8000b88:	4013      	ands	r3, r2
 8000b8a:	4319      	orrs	r1, r3
 8000b8c:	8381      	strh	r1, [r0, #28]
 8000b8e:	4770      	bx	lr
 8000b90:	0000fff7 	.word	0x0000fff7

08000b94 <TIM_OC4PreloadConfig>:
 8000b94:	69c2      	ldr	r2, [r0, #28]
 8000b96:	4b04      	ldr	r3, [pc, #16]	; (8000ba8 <TIM_OC4PreloadConfig+0x14>)
 8000b98:	401a      	ands	r2, r3
 8000b9a:	020b      	lsls	r3, r1, #8
 8000b9c:	1c11      	adds	r1, r2, #0
 8000b9e:	4319      	orrs	r1, r3
 8000ba0:	b289      	uxth	r1, r1
 8000ba2:	8381      	strh	r1, [r0, #28]
 8000ba4:	4770      	bx	lr
 8000ba6:	46c0      	nop			; (mov r8, r8)
 8000ba8:	0000f7ff 	.word	0x0000f7ff

08000bac <TIM_OC1FastConfig>:
 8000bac:	6982      	ldr	r2, [r0, #24]
 8000bae:	4b02      	ldr	r3, [pc, #8]	; (8000bb8 <TIM_OC1FastConfig+0xc>)
 8000bb0:	4013      	ands	r3, r2
 8000bb2:	4319      	orrs	r1, r3
 8000bb4:	8301      	strh	r1, [r0, #24]
 8000bb6:	4770      	bx	lr
 8000bb8:	0000fffb 	.word	0x0000fffb

08000bbc <TIM_OC2FastConfig>:
 8000bbc:	6982      	ldr	r2, [r0, #24]
 8000bbe:	4b04      	ldr	r3, [pc, #16]	; (8000bd0 <TIM_OC2FastConfig+0x14>)
 8000bc0:	401a      	ands	r2, r3
 8000bc2:	020b      	lsls	r3, r1, #8
 8000bc4:	1c11      	adds	r1, r2, #0
 8000bc6:	4319      	orrs	r1, r3
 8000bc8:	b289      	uxth	r1, r1
 8000bca:	8301      	strh	r1, [r0, #24]
 8000bcc:	4770      	bx	lr
 8000bce:	46c0      	nop			; (mov r8, r8)
 8000bd0:	0000fbff 	.word	0x0000fbff

08000bd4 <TIM_OC3FastConfig>:
 8000bd4:	69c2      	ldr	r2, [r0, #28]
 8000bd6:	4b02      	ldr	r3, [pc, #8]	; (8000be0 <TIM_OC3FastConfig+0xc>)
 8000bd8:	4013      	ands	r3, r2
 8000bda:	4319      	orrs	r1, r3
 8000bdc:	8381      	strh	r1, [r0, #28]
 8000bde:	4770      	bx	lr
 8000be0:	0000fffb 	.word	0x0000fffb

08000be4 <TIM_OC4FastConfig>:
 8000be4:	69c2      	ldr	r2, [r0, #28]
 8000be6:	4b04      	ldr	r3, [pc, #16]	; (8000bf8 <TIM_OC4FastConfig+0x14>)
 8000be8:	401a      	ands	r2, r3
 8000bea:	020b      	lsls	r3, r1, #8
 8000bec:	1c11      	adds	r1, r2, #0
 8000bee:	4319      	orrs	r1, r3
 8000bf0:	b289      	uxth	r1, r1
 8000bf2:	8381      	strh	r1, [r0, #28]
 8000bf4:	4770      	bx	lr
 8000bf6:	46c0      	nop			; (mov r8, r8)
 8000bf8:	0000fbff 	.word	0x0000fbff

08000bfc <TIM_ClearOC1Ref>:
 8000bfc:	6982      	ldr	r2, [r0, #24]
 8000bfe:	4b02      	ldr	r3, [pc, #8]	; (8000c08 <TIM_ClearOC1Ref+0xc>)
 8000c00:	4013      	ands	r3, r2
 8000c02:	4319      	orrs	r1, r3
 8000c04:	8301      	strh	r1, [r0, #24]
 8000c06:	4770      	bx	lr
 8000c08:	0000ff7f 	.word	0x0000ff7f

08000c0c <TIM_ClearOC2Ref>:
 8000c0c:	6983      	ldr	r3, [r0, #24]
 8000c0e:	0209      	lsls	r1, r1, #8
 8000c10:	045b      	lsls	r3, r3, #17
 8000c12:	0c5b      	lsrs	r3, r3, #17
 8000c14:	4319      	orrs	r1, r3
 8000c16:	b289      	uxth	r1, r1
 8000c18:	8301      	strh	r1, [r0, #24]
 8000c1a:	4770      	bx	lr

08000c1c <TIM_ClearOC3Ref>:
 8000c1c:	69c2      	ldr	r2, [r0, #28]
 8000c1e:	4b02      	ldr	r3, [pc, #8]	; (8000c28 <TIM_ClearOC3Ref+0xc>)
 8000c20:	4013      	ands	r3, r2
 8000c22:	4319      	orrs	r1, r3
 8000c24:	8381      	strh	r1, [r0, #28]
 8000c26:	4770      	bx	lr
 8000c28:	0000ff7f 	.word	0x0000ff7f

08000c2c <TIM_ClearOC4Ref>:
 8000c2c:	69c3      	ldr	r3, [r0, #28]
 8000c2e:	0209      	lsls	r1, r1, #8
 8000c30:	045b      	lsls	r3, r3, #17
 8000c32:	0c5b      	lsrs	r3, r3, #17
 8000c34:	4319      	orrs	r1, r3
 8000c36:	b289      	uxth	r1, r1
 8000c38:	8381      	strh	r1, [r0, #28]
 8000c3a:	4770      	bx	lr

08000c3c <TIM_OC1PolarityConfig>:
 8000c3c:	6a02      	ldr	r2, [r0, #32]
 8000c3e:	4b02      	ldr	r3, [pc, #8]	; (8000c48 <TIM_OC1PolarityConfig+0xc>)
 8000c40:	4013      	ands	r3, r2
 8000c42:	4319      	orrs	r1, r3
 8000c44:	8401      	strh	r1, [r0, #32]
 8000c46:	4770      	bx	lr
 8000c48:	0000fffd 	.word	0x0000fffd

08000c4c <TIM_OC2PolarityConfig>:
 8000c4c:	6a02      	ldr	r2, [r0, #32]
 8000c4e:	4b04      	ldr	r3, [pc, #16]	; (8000c60 <TIM_OC2PolarityConfig+0x14>)
 8000c50:	401a      	ands	r2, r3
 8000c52:	010b      	lsls	r3, r1, #4
 8000c54:	1c11      	adds	r1, r2, #0
 8000c56:	4319      	orrs	r1, r3
 8000c58:	b289      	uxth	r1, r1
 8000c5a:	8401      	strh	r1, [r0, #32]
 8000c5c:	4770      	bx	lr
 8000c5e:	46c0      	nop			; (mov r8, r8)
 8000c60:	0000ffdf 	.word	0x0000ffdf

08000c64 <TIM_OC3PolarityConfig>:
 8000c64:	6a02      	ldr	r2, [r0, #32]
 8000c66:	4b04      	ldr	r3, [pc, #16]	; (8000c78 <TIM_OC3PolarityConfig+0x14>)
 8000c68:	401a      	ands	r2, r3
 8000c6a:	020b      	lsls	r3, r1, #8
 8000c6c:	1c11      	adds	r1, r2, #0
 8000c6e:	4319      	orrs	r1, r3
 8000c70:	b289      	uxth	r1, r1
 8000c72:	8401      	strh	r1, [r0, #32]
 8000c74:	4770      	bx	lr
 8000c76:	46c0      	nop			; (mov r8, r8)
 8000c78:	0000fdff 	.word	0x0000fdff

08000c7c <TIM_OC4PolarityConfig>:
 8000c7c:	6a02      	ldr	r2, [r0, #32]
 8000c7e:	4b04      	ldr	r3, [pc, #16]	; (8000c90 <TIM_OC4PolarityConfig+0x14>)
 8000c80:	401a      	ands	r2, r3
 8000c82:	030b      	lsls	r3, r1, #12
 8000c84:	1c11      	adds	r1, r2, #0
 8000c86:	4319      	orrs	r1, r3
 8000c88:	b289      	uxth	r1, r1
 8000c8a:	8401      	strh	r1, [r0, #32]
 8000c8c:	4770      	bx	lr
 8000c8e:	46c0      	nop			; (mov r8, r8)
 8000c90:	0000dfff 	.word	0x0000dfff

08000c94 <TIM_SelectOCREFClear>:
 8000c94:	6882      	ldr	r2, [r0, #8]
 8000c96:	4b04      	ldr	r3, [pc, #16]	; (8000ca8 <TIM_SelectOCREFClear+0x14>)
 8000c98:	4013      	ands	r3, r2
 8000c9a:	8103      	strh	r3, [r0, #8]
 8000c9c:	6883      	ldr	r3, [r0, #8]
 8000c9e:	b29b      	uxth	r3, r3
 8000ca0:	4319      	orrs	r1, r3
 8000ca2:	8101      	strh	r1, [r0, #8]
 8000ca4:	4770      	bx	lr
 8000ca6:	46c0      	nop			; (mov r8, r8)
 8000ca8:	0000fff7 	.word	0x0000fff7

08000cac <TIM_CCxCmd>:
 8000cac:	6a03      	ldr	r3, [r0, #32]
 8000cae:	b510      	push	{r4, lr}
 8000cb0:	2401      	movs	r4, #1
 8000cb2:	408c      	lsls	r4, r1
 8000cb4:	b29b      	uxth	r3, r3
 8000cb6:	43a3      	bics	r3, r4
 8000cb8:	8403      	strh	r3, [r0, #32]
 8000cba:	6a03      	ldr	r3, [r0, #32]
 8000cbc:	408a      	lsls	r2, r1
 8000cbe:	1c11      	adds	r1, r2, #0
 8000cc0:	4319      	orrs	r1, r3
 8000cc2:	b289      	uxth	r1, r1
 8000cc4:	8401      	strh	r1, [r0, #32]
 8000cc6:	bd10      	pop	{r4, pc}

08000cc8 <TIM_ICInit>:
 8000cc8:	880b      	ldrh	r3, [r1, #0]
 8000cca:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000ccc:	2b00      	cmp	r3, #0
 8000cce:	d02b      	beq.n	8000d28 <TIM_ICInit+0x60>
 8000cd0:	2b04      	cmp	r3, #4
 8000cd2:	d04a      	beq.n	8000d6a <TIM_ICInit+0xa2>
 8000cd4:	2b08      	cmp	r3, #8
 8000cd6:	d100      	bne.n	8000cda <TIM_ICInit+0x12>
 8000cd8:	e06d      	b.n	8000db6 <TIM_ICInit+0xee>
 8000cda:	6a05      	ldr	r5, [r0, #32]
 8000cdc:	4a47      	ldr	r2, [pc, #284]	; (8000dfc <TIM_ICInit+0x134>)
 8000cde:	884b      	ldrh	r3, [r1, #2]
 8000ce0:	402a      	ands	r2, r5
 8000ce2:	888e      	ldrh	r6, [r1, #4]
 8000ce4:	890c      	ldrh	r4, [r1, #8]
 8000ce6:	8402      	strh	r2, [r0, #32]
 8000ce8:	69c7      	ldr	r7, [r0, #28]
 8000cea:	4a45      	ldr	r2, [pc, #276]	; (8000e00 <TIM_ICInit+0x138>)
 8000cec:	0236      	lsls	r6, r6, #8
 8000cee:	403a      	ands	r2, r7
 8000cf0:	4332      	orrs	r2, r6
 8000cf2:	0324      	lsls	r4, r4, #12
 8000cf4:	b292      	uxth	r2, r2
 8000cf6:	6a05      	ldr	r5, [r0, #32]
 8000cf8:	4322      	orrs	r2, r4
 8000cfa:	4c42      	ldr	r4, [pc, #264]	; (8000e04 <TIM_ICInit+0x13c>)
 8000cfc:	031b      	lsls	r3, r3, #12
 8000cfe:	402c      	ands	r4, r5
 8000d00:	431c      	orrs	r4, r3
 8000d02:	2380      	movs	r3, #128	; 0x80
 8000d04:	b2a4      	uxth	r4, r4
 8000d06:	015b      	lsls	r3, r3, #5
 8000d08:	b292      	uxth	r2, r2
 8000d0a:	4323      	orrs	r3, r4
 8000d0c:	8382      	strh	r2, [r0, #28]
 8000d0e:	8403      	strh	r3, [r0, #32]
 8000d10:	4a3d      	ldr	r2, [pc, #244]	; (8000e08 <TIM_ICInit+0x140>)
 8000d12:	88cb      	ldrh	r3, [r1, #6]
 8000d14:	69c1      	ldr	r1, [r0, #28]
 8000d16:	021b      	lsls	r3, r3, #8
 8000d18:	400a      	ands	r2, r1
 8000d1a:	8382      	strh	r2, [r0, #28]
 8000d1c:	69c2      	ldr	r2, [r0, #28]
 8000d1e:	b292      	uxth	r2, r2
 8000d20:	4313      	orrs	r3, r2
 8000d22:	b29b      	uxth	r3, r3
 8000d24:	8383      	strh	r3, [r0, #28]
 8000d26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d28:	6a04      	ldr	r4, [r0, #32]
 8000d2a:	4a38      	ldr	r2, [pc, #224]	; (8000e0c <TIM_ICInit+0x144>)
 8000d2c:	888b      	ldrh	r3, [r1, #4]
 8000d2e:	4022      	ands	r2, r4
 8000d30:	884d      	ldrh	r5, [r1, #2]
 8000d32:	890e      	ldrh	r6, [r1, #8]
 8000d34:	8402      	strh	r2, [r0, #32]
 8000d36:	6987      	ldr	r7, [r0, #24]
 8000d38:	4a35      	ldr	r2, [pc, #212]	; (8000e10 <TIM_ICInit+0x148>)
 8000d3a:	0136      	lsls	r6, r6, #4
 8000d3c:	403a      	ands	r2, r7
 8000d3e:	4332      	orrs	r2, r6
 8000d40:	b292      	uxth	r2, r2
 8000d42:	6a04      	ldr	r4, [r0, #32]
 8000d44:	431a      	orrs	r2, r3
 8000d46:	4b33      	ldr	r3, [pc, #204]	; (8000e14 <TIM_ICInit+0x14c>)
 8000d48:	8302      	strh	r2, [r0, #24]
 8000d4a:	401c      	ands	r4, r3
 8000d4c:	2301      	movs	r3, #1
 8000d4e:	432b      	orrs	r3, r5
 8000d50:	4323      	orrs	r3, r4
 8000d52:	b29b      	uxth	r3, r3
 8000d54:	8403      	strh	r3, [r0, #32]
 8000d56:	88ca      	ldrh	r2, [r1, #6]
 8000d58:	4b2f      	ldr	r3, [pc, #188]	; (8000e18 <TIM_ICInit+0x150>)
 8000d5a:	6981      	ldr	r1, [r0, #24]
 8000d5c:	400b      	ands	r3, r1
 8000d5e:	8303      	strh	r3, [r0, #24]
 8000d60:	6983      	ldr	r3, [r0, #24]
 8000d62:	b29b      	uxth	r3, r3
 8000d64:	4313      	orrs	r3, r2
 8000d66:	8303      	strh	r3, [r0, #24]
 8000d68:	e7dd      	b.n	8000d26 <TIM_ICInit+0x5e>
 8000d6a:	6a05      	ldr	r5, [r0, #32]
 8000d6c:	4a2b      	ldr	r2, [pc, #172]	; (8000e1c <TIM_ICInit+0x154>)
 8000d6e:	884c      	ldrh	r4, [r1, #2]
 8000d70:	402a      	ands	r2, r5
 8000d72:	888b      	ldrh	r3, [r1, #4]
 8000d74:	890e      	ldrh	r6, [r1, #8]
 8000d76:	8402      	strh	r2, [r0, #32]
 8000d78:	6987      	ldr	r7, [r0, #24]
 8000d7a:	4a21      	ldr	r2, [pc, #132]	; (8000e00 <TIM_ICInit+0x138>)
 8000d7c:	0336      	lsls	r6, r6, #12
 8000d7e:	403a      	ands	r2, r7
 8000d80:	4332      	orrs	r2, r6
 8000d82:	021b      	lsls	r3, r3, #8
 8000d84:	b292      	uxth	r2, r2
 8000d86:	6a05      	ldr	r5, [r0, #32]
 8000d88:	431a      	orrs	r2, r3
 8000d8a:	4b25      	ldr	r3, [pc, #148]	; (8000e20 <TIM_ICInit+0x158>)
 8000d8c:	0124      	lsls	r4, r4, #4
 8000d8e:	402b      	ands	r3, r5
 8000d90:	4323      	orrs	r3, r4
 8000d92:	b29b      	uxth	r3, r3
 8000d94:	2410      	movs	r4, #16
 8000d96:	b292      	uxth	r2, r2
 8000d98:	4323      	orrs	r3, r4
 8000d9a:	8302      	strh	r2, [r0, #24]
 8000d9c:	8403      	strh	r3, [r0, #32]
 8000d9e:	4a1a      	ldr	r2, [pc, #104]	; (8000e08 <TIM_ICInit+0x140>)
 8000da0:	88cb      	ldrh	r3, [r1, #6]
 8000da2:	6981      	ldr	r1, [r0, #24]
 8000da4:	021b      	lsls	r3, r3, #8
 8000da6:	400a      	ands	r2, r1
 8000da8:	8302      	strh	r2, [r0, #24]
 8000daa:	6982      	ldr	r2, [r0, #24]
 8000dac:	b292      	uxth	r2, r2
 8000dae:	4313      	orrs	r3, r2
 8000db0:	b29b      	uxth	r3, r3
 8000db2:	8303      	strh	r3, [r0, #24]
 8000db4:	e7b7      	b.n	8000d26 <TIM_ICInit+0x5e>
 8000db6:	6a05      	ldr	r5, [r0, #32]
 8000db8:	4a1a      	ldr	r2, [pc, #104]	; (8000e24 <TIM_ICInit+0x15c>)
 8000dba:	888c      	ldrh	r4, [r1, #4]
 8000dbc:	402a      	ands	r2, r5
 8000dbe:	884b      	ldrh	r3, [r1, #2]
 8000dc0:	890e      	ldrh	r6, [r1, #8]
 8000dc2:	8402      	strh	r2, [r0, #32]
 8000dc4:	69c7      	ldr	r7, [r0, #28]
 8000dc6:	4a12      	ldr	r2, [pc, #72]	; (8000e10 <TIM_ICInit+0x148>)
 8000dc8:	0136      	lsls	r6, r6, #4
 8000dca:	403a      	ands	r2, r7
 8000dcc:	4332      	orrs	r2, r6
 8000dce:	b292      	uxth	r2, r2
 8000dd0:	6a05      	ldr	r5, [r0, #32]
 8000dd2:	4322      	orrs	r2, r4
 8000dd4:	4c14      	ldr	r4, [pc, #80]	; (8000e28 <TIM_ICInit+0x160>)
 8000dd6:	021b      	lsls	r3, r3, #8
 8000dd8:	402c      	ands	r4, r5
 8000dda:	431c      	orrs	r4, r3
 8000ddc:	2380      	movs	r3, #128	; 0x80
 8000dde:	b2a4      	uxth	r4, r4
 8000de0:	005b      	lsls	r3, r3, #1
 8000de2:	4323      	orrs	r3, r4
 8000de4:	8382      	strh	r2, [r0, #28]
 8000de6:	8403      	strh	r3, [r0, #32]
 8000de8:	88ca      	ldrh	r2, [r1, #6]
 8000dea:	4b0b      	ldr	r3, [pc, #44]	; (8000e18 <TIM_ICInit+0x150>)
 8000dec:	69c1      	ldr	r1, [r0, #28]
 8000dee:	400b      	ands	r3, r1
 8000df0:	8383      	strh	r3, [r0, #28]
 8000df2:	69c3      	ldr	r3, [r0, #28]
 8000df4:	b29b      	uxth	r3, r3
 8000df6:	4313      	orrs	r3, r2
 8000df8:	8383      	strh	r3, [r0, #28]
 8000dfa:	e794      	b.n	8000d26 <TIM_ICInit+0x5e>
 8000dfc:	0000efff 	.word	0x0000efff
 8000e00:	00000cff 	.word	0x00000cff
 8000e04:	00005fff 	.word	0x00005fff
 8000e08:	0000f3ff 	.word	0x0000f3ff
 8000e0c:	0000fffe 	.word	0x0000fffe
 8000e10:	0000ff0c 	.word	0x0000ff0c
 8000e14:	0000fff5 	.word	0x0000fff5
 8000e18:	0000fff3 	.word	0x0000fff3
 8000e1c:	0000ffef 	.word	0x0000ffef
 8000e20:	0000ff5f 	.word	0x0000ff5f
 8000e24:	0000feff 	.word	0x0000feff
 8000e28:	0000f5ff 	.word	0x0000f5ff

08000e2c <TIM_ICStructInit>:
 8000e2c:	2300      	movs	r3, #0
 8000e2e:	2201      	movs	r2, #1
 8000e30:	8003      	strh	r3, [r0, #0]
 8000e32:	8043      	strh	r3, [r0, #2]
 8000e34:	8082      	strh	r2, [r0, #4]
 8000e36:	80c3      	strh	r3, [r0, #6]
 8000e38:	8103      	strh	r3, [r0, #8]
 8000e3a:	4770      	bx	lr

08000e3c <TIM_PWMIConfig>:
 8000e3c:	884b      	ldrh	r3, [r1, #2]
 8000e3e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e40:	425c      	negs	r4, r3
 8000e42:	415c      	adcs	r4, r3
 8000e44:	0062      	lsls	r2, r4, #1
 8000e46:	4657      	mov	r7, sl
 8000e48:	4692      	mov	sl, r2
 8000e4a:	888a      	ldrh	r2, [r1, #4]
 8000e4c:	464e      	mov	r6, r9
 8000e4e:	4645      	mov	r5, r8
 8000e50:	b4e0      	push	{r5, r6, r7}
 8000e52:	1e55      	subs	r5, r2, #1
 8000e54:	1e6e      	subs	r6, r5, #1
 8000e56:	41b5      	sbcs	r5, r6
 8000e58:	2602      	movs	r6, #2
 8000e5a:	1b75      	subs	r5, r6, r5
 8000e5c:	880e      	ldrh	r6, [r1, #0]
 8000e5e:	2e00      	cmp	r6, #0
 8000e60:	d04e      	beq.n	8000f00 <TIM_PWMIConfig+0xc4>
 8000e62:	6a07      	ldr	r7, [r0, #32]
 8000e64:	4e4f      	ldr	r6, [pc, #316]	; (8000fa4 <TIM_PWMIConfig+0x168>)
 8000e66:	46bc      	mov	ip, r7
 8000e68:	1c37      	adds	r7, r6, #0
 8000e6a:	4666      	mov	r6, ip
 8000e6c:	4037      	ands	r7, r6
 8000e6e:	890c      	ldrh	r4, [r1, #8]
 8000e70:	8407      	strh	r7, [r0, #32]
 8000e72:	6986      	ldr	r6, [r0, #24]
 8000e74:	6a07      	ldr	r7, [r0, #32]
 8000e76:	46b0      	mov	r8, r6
 8000e78:	4e4b      	ldr	r6, [pc, #300]	; (8000fa8 <TIM_PWMIConfig+0x16c>)
 8000e7a:	46bc      	mov	ip, r7
 8000e7c:	4647      	mov	r7, r8
 8000e7e:	4037      	ands	r7, r6
 8000e80:	46b8      	mov	r8, r7
 8000e82:	4646      	mov	r6, r8
 8000e84:	0327      	lsls	r7, r4, #12
 8000e86:	4337      	orrs	r7, r6
 8000e88:	b2be      	uxth	r6, r7
 8000e8a:	4f48      	ldr	r7, [pc, #288]	; (8000fac <TIM_PWMIConfig+0x170>)
 8000e8c:	0212      	lsls	r2, r2, #8
 8000e8e:	4332      	orrs	r2, r6
 8000e90:	011e      	lsls	r6, r3, #4
 8000e92:	1c3b      	adds	r3, r7, #0
 8000e94:	4667      	mov	r7, ip
 8000e96:	403b      	ands	r3, r7
 8000e98:	4333      	orrs	r3, r6
 8000e9a:	b29b      	uxth	r3, r3
 8000e9c:	2610      	movs	r6, #16
 8000e9e:	4333      	orrs	r3, r6
 8000ea0:	b292      	uxth	r2, r2
 8000ea2:	8302      	strh	r2, [r0, #24]
 8000ea4:	8403      	strh	r3, [r0, #32]
 8000ea6:	4a42      	ldr	r2, [pc, #264]	; (8000fb0 <TIM_PWMIConfig+0x174>)
 8000ea8:	88cb      	ldrh	r3, [r1, #6]
 8000eaa:	6981      	ldr	r1, [r0, #24]
 8000eac:	4657      	mov	r7, sl
 8000eae:	400a      	ands	r2, r1
 8000eb0:	8302      	strh	r2, [r0, #24]
 8000eb2:	6982      	ldr	r2, [r0, #24]
 8000eb4:	0219      	lsls	r1, r3, #8
 8000eb6:	b292      	uxth	r2, r2
 8000eb8:	430a      	orrs	r2, r1
 8000eba:	b292      	uxth	r2, r2
 8000ebc:	8302      	strh	r2, [r0, #24]
 8000ebe:	6a01      	ldr	r1, [r0, #32]
 8000ec0:	4a3c      	ldr	r2, [pc, #240]	; (8000fb4 <TIM_PWMIConfig+0x178>)
 8000ec2:	400a      	ands	r2, r1
 8000ec4:	8402      	strh	r2, [r0, #32]
 8000ec6:	6986      	ldr	r6, [r0, #24]
 8000ec8:	0122      	lsls	r2, r4, #4
 8000eca:	4c3b      	ldr	r4, [pc, #236]	; (8000fb8 <TIM_PWMIConfig+0x17c>)
 8000ecc:	6a01      	ldr	r1, [r0, #32]
 8000ece:	4034      	ands	r4, r6
 8000ed0:	4314      	orrs	r4, r2
 8000ed2:	4a3a      	ldr	r2, [pc, #232]	; (8000fbc <TIM_PWMIConfig+0x180>)
 8000ed4:	b2a4      	uxth	r4, r4
 8000ed6:	400a      	ands	r2, r1
 8000ed8:	2101      	movs	r1, #1
 8000eda:	430a      	orrs	r2, r1
 8000edc:	4325      	orrs	r5, r4
 8000ede:	4317      	orrs	r7, r2
 8000ee0:	b2ad      	uxth	r5, r5
 8000ee2:	8305      	strh	r5, [r0, #24]
 8000ee4:	8407      	strh	r7, [r0, #32]
 8000ee6:	6981      	ldr	r1, [r0, #24]
 8000ee8:	4a35      	ldr	r2, [pc, #212]	; (8000fc0 <TIM_PWMIConfig+0x184>)
 8000eea:	400a      	ands	r2, r1
 8000eec:	8302      	strh	r2, [r0, #24]
 8000eee:	6982      	ldr	r2, [r0, #24]
 8000ef0:	b292      	uxth	r2, r2
 8000ef2:	4313      	orrs	r3, r2
 8000ef4:	8303      	strh	r3, [r0, #24]
 8000ef6:	bc1c      	pop	{r2, r3, r4}
 8000ef8:	4690      	mov	r8, r2
 8000efa:	4699      	mov	r9, r3
 8000efc:	46a2      	mov	sl, r4
 8000efe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f00:	890e      	ldrh	r6, [r1, #8]
 8000f02:	6a07      	ldr	r7, [r0, #32]
 8000f04:	46b2      	mov	sl, r6
 8000f06:	4e2b      	ldr	r6, [pc, #172]	; (8000fb4 <TIM_PWMIConfig+0x178>)
 8000f08:	46bc      	mov	ip, r7
 8000f0a:	1c37      	adds	r7, r6, #0
 8000f0c:	4666      	mov	r6, ip
 8000f0e:	4037      	ands	r7, r6
 8000f10:	8407      	strh	r7, [r0, #32]
 8000f12:	6986      	ldr	r6, [r0, #24]
 8000f14:	6a07      	ldr	r7, [r0, #32]
 8000f16:	46b0      	mov	r8, r6
 8000f18:	4e27      	ldr	r6, [pc, #156]	; (8000fb8 <TIM_PWMIConfig+0x17c>)
 8000f1a:	46bc      	mov	ip, r7
 8000f1c:	4647      	mov	r7, r8
 8000f1e:	4037      	ands	r7, r6
 8000f20:	46b8      	mov	r8, r7
 8000f22:	4657      	mov	r7, sl
 8000f24:	4646      	mov	r6, r8
 8000f26:	013f      	lsls	r7, r7, #4
 8000f28:	4337      	orrs	r7, r6
 8000f2a:	b2bf      	uxth	r7, r7
 8000f2c:	433a      	orrs	r2, r7
 8000f2e:	2601      	movs	r6, #1
 8000f30:	4f22      	ldr	r7, [pc, #136]	; (8000fbc <TIM_PWMIConfig+0x180>)
 8000f32:	4690      	mov	r8, r2
 8000f34:	4662      	mov	r2, ip
 8000f36:	46b4      	mov	ip, r6
 8000f38:	4017      	ands	r7, r2
 8000f3a:	4662      	mov	r2, ip
 8000f3c:	4313      	orrs	r3, r2
 8000f3e:	433b      	orrs	r3, r7
 8000f40:	b29b      	uxth	r3, r3
 8000f42:	4646      	mov	r6, r8
 8000f44:	8306      	strh	r6, [r0, #24]
 8000f46:	8403      	strh	r3, [r0, #32]
 8000f48:	4a1d      	ldr	r2, [pc, #116]	; (8000fc0 <TIM_PWMIConfig+0x184>)
 8000f4a:	88cb      	ldrh	r3, [r1, #6]
 8000f4c:	6981      	ldr	r1, [r0, #24]
 8000f4e:	4656      	mov	r6, sl
 8000f50:	400a      	ands	r2, r1
 8000f52:	8302      	strh	r2, [r0, #24]
 8000f54:	6982      	ldr	r2, [r0, #24]
 8000f56:	022d      	lsls	r5, r5, #8
 8000f58:	b292      	uxth	r2, r2
 8000f5a:	431a      	orrs	r2, r3
 8000f5c:	8302      	strh	r2, [r0, #24]
 8000f5e:	6a01      	ldr	r1, [r0, #32]
 8000f60:	4a10      	ldr	r2, [pc, #64]	; (8000fa4 <TIM_PWMIConfig+0x168>)
 8000f62:	021b      	lsls	r3, r3, #8
 8000f64:	400a      	ands	r2, r1
 8000f66:	8402      	strh	r2, [r0, #32]
 8000f68:	6987      	ldr	r7, [r0, #24]
 8000f6a:	4a0f      	ldr	r2, [pc, #60]	; (8000fa8 <TIM_PWMIConfig+0x16c>)
 8000f6c:	6a01      	ldr	r1, [r0, #32]
 8000f6e:	4017      	ands	r7, r2
 8000f70:	0332      	lsls	r2, r6, #12
 8000f72:	1c3e      	adds	r6, r7, #0
 8000f74:	4316      	orrs	r6, r2
 8000f76:	4a0d      	ldr	r2, [pc, #52]	; (8000fac <TIM_PWMIConfig+0x170>)
 8000f78:	b2b6      	uxth	r6, r6
 8000f7a:	4011      	ands	r1, r2
 8000f7c:	2210      	movs	r2, #16
 8000f7e:	4311      	orrs	r1, r2
 8000f80:	4335      	orrs	r5, r6
 8000f82:	0162      	lsls	r2, r4, #5
 8000f84:	1c0c      	adds	r4, r1, #0
 8000f86:	4314      	orrs	r4, r2
 8000f88:	b2ad      	uxth	r5, r5
 8000f8a:	8305      	strh	r5, [r0, #24]
 8000f8c:	8404      	strh	r4, [r0, #32]
 8000f8e:	6981      	ldr	r1, [r0, #24]
 8000f90:	4a07      	ldr	r2, [pc, #28]	; (8000fb0 <TIM_PWMIConfig+0x174>)
 8000f92:	400a      	ands	r2, r1
 8000f94:	8302      	strh	r2, [r0, #24]
 8000f96:	6982      	ldr	r2, [r0, #24]
 8000f98:	b292      	uxth	r2, r2
 8000f9a:	4313      	orrs	r3, r2
 8000f9c:	b29b      	uxth	r3, r3
 8000f9e:	8303      	strh	r3, [r0, #24]
 8000fa0:	e7a9      	b.n	8000ef6 <TIM_PWMIConfig+0xba>
 8000fa2:	46c0      	nop			; (mov r8, r8)
 8000fa4:	0000ffef 	.word	0x0000ffef
 8000fa8:	00000cff 	.word	0x00000cff
 8000fac:	0000ff5f 	.word	0x0000ff5f
 8000fb0:	0000f3ff 	.word	0x0000f3ff
 8000fb4:	0000fffe 	.word	0x0000fffe
 8000fb8:	0000ff0c 	.word	0x0000ff0c
 8000fbc:	0000fff5 	.word	0x0000fff5
 8000fc0:	0000fff3 	.word	0x0000fff3

08000fc4 <TIM_GetCapture1>:
 8000fc4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8000fc6:	4770      	bx	lr

08000fc8 <TIM_GetCapture2>:
 8000fc8:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8000fca:	4770      	bx	lr

08000fcc <TIM_GetCapture3>:
 8000fcc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8000fce:	4770      	bx	lr

08000fd0 <TIM_GetCapture4>:
 8000fd0:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8000fd2:	4770      	bx	lr

08000fd4 <TIM_SetIC1Prescaler>:
 8000fd4:	6982      	ldr	r2, [r0, #24]
 8000fd6:	4b04      	ldr	r3, [pc, #16]	; (8000fe8 <TIM_SetIC1Prescaler+0x14>)
 8000fd8:	4013      	ands	r3, r2
 8000fda:	8303      	strh	r3, [r0, #24]
 8000fdc:	6983      	ldr	r3, [r0, #24]
 8000fde:	b29b      	uxth	r3, r3
 8000fe0:	4319      	orrs	r1, r3
 8000fe2:	8301      	strh	r1, [r0, #24]
 8000fe4:	4770      	bx	lr
 8000fe6:	46c0      	nop			; (mov r8, r8)
 8000fe8:	0000fff3 	.word	0x0000fff3

08000fec <TIM_SetIC2Prescaler>:
 8000fec:	6982      	ldr	r2, [r0, #24]
 8000fee:	4b05      	ldr	r3, [pc, #20]	; (8001004 <TIM_SetIC2Prescaler+0x18>)
 8000ff0:	0209      	lsls	r1, r1, #8
 8000ff2:	4013      	ands	r3, r2
 8000ff4:	8303      	strh	r3, [r0, #24]
 8000ff6:	6983      	ldr	r3, [r0, #24]
 8000ff8:	b29b      	uxth	r3, r3
 8000ffa:	4319      	orrs	r1, r3
 8000ffc:	b289      	uxth	r1, r1
 8000ffe:	8301      	strh	r1, [r0, #24]
 8001000:	4770      	bx	lr
 8001002:	46c0      	nop			; (mov r8, r8)
 8001004:	0000f3ff 	.word	0x0000f3ff

08001008 <TIM_SetIC3Prescaler>:
 8001008:	69c2      	ldr	r2, [r0, #28]
 800100a:	4b04      	ldr	r3, [pc, #16]	; (800101c <TIM_SetIC3Prescaler+0x14>)
 800100c:	4013      	ands	r3, r2
 800100e:	8383      	strh	r3, [r0, #28]
 8001010:	69c3      	ldr	r3, [r0, #28]
 8001012:	b29b      	uxth	r3, r3
 8001014:	4319      	orrs	r1, r3
 8001016:	8381      	strh	r1, [r0, #28]
 8001018:	4770      	bx	lr
 800101a:	46c0      	nop			; (mov r8, r8)
 800101c:	0000fff3 	.word	0x0000fff3

08001020 <TIM_SetIC4Prescaler>:
 8001020:	69c2      	ldr	r2, [r0, #28]
 8001022:	4b05      	ldr	r3, [pc, #20]	; (8001038 <TIM_SetIC4Prescaler+0x18>)
 8001024:	0209      	lsls	r1, r1, #8
 8001026:	4013      	ands	r3, r2
 8001028:	8383      	strh	r3, [r0, #28]
 800102a:	69c3      	ldr	r3, [r0, #28]
 800102c:	b29b      	uxth	r3, r3
 800102e:	4319      	orrs	r1, r3
 8001030:	b289      	uxth	r1, r1
 8001032:	8381      	strh	r1, [r0, #28]
 8001034:	4770      	bx	lr
 8001036:	46c0      	nop			; (mov r8, r8)
 8001038:	0000f3ff 	.word	0x0000f3ff

0800103c <TIM_ITConfig>:
 800103c:	68c3      	ldr	r3, [r0, #12]
 800103e:	b29b      	uxth	r3, r3
 8001040:	2a00      	cmp	r2, #0
 8001042:	d102      	bne.n	800104a <TIM_ITConfig+0xe>
 8001044:	438b      	bics	r3, r1
 8001046:	8183      	strh	r3, [r0, #12]
 8001048:	4770      	bx	lr
 800104a:	4319      	orrs	r1, r3
 800104c:	8181      	strh	r1, [r0, #12]
 800104e:	e7fb      	b.n	8001048 <TIM_ITConfig+0xc>

08001050 <TIM_GenerateEvent>:
 8001050:	8281      	strh	r1, [r0, #20]
 8001052:	4770      	bx	lr

08001054 <TIM_GetFlagStatus>:
 8001054:	6900      	ldr	r0, [r0, #16]
 8001056:	4008      	ands	r0, r1
 8001058:	1e43      	subs	r3, r0, #1
 800105a:	4198      	sbcs	r0, r3
 800105c:	b2c0      	uxtb	r0, r0
 800105e:	4770      	bx	lr

08001060 <TIM_ClearFlag>:
 8001060:	43c9      	mvns	r1, r1
 8001062:	b289      	uxth	r1, r1
 8001064:	8201      	strh	r1, [r0, #16]
 8001066:	4770      	bx	lr

08001068 <TIM_GetITStatus>:
 8001068:	6903      	ldr	r3, [r0, #16]
 800106a:	68c0      	ldr	r0, [r0, #12]
 800106c:	b282      	uxth	r2, r0
 800106e:	2000      	movs	r0, #0
 8001070:	420b      	tst	r3, r1
 8001072:	d003      	beq.n	800107c <TIM_GetITStatus+0x14>
 8001074:	4011      	ands	r1, r2
 8001076:	1e4a      	subs	r2, r1, #1
 8001078:	4191      	sbcs	r1, r2
 800107a:	b2c8      	uxtb	r0, r1
 800107c:	4770      	bx	lr
 800107e:	46c0      	nop			; (mov r8, r8)

08001080 <TIM_ClearITPendingBit>:
 8001080:	43c9      	mvns	r1, r1
 8001082:	b289      	uxth	r1, r1
 8001084:	8201      	strh	r1, [r0, #16]
 8001086:	4770      	bx	lr

08001088 <TIM_DMAConfig>:
 8001088:	4311      	orrs	r1, r2
 800108a:	2348      	movs	r3, #72	; 0x48
 800108c:	52c1      	strh	r1, [r0, r3]
 800108e:	4770      	bx	lr

08001090 <TIM_DMACmd>:
 8001090:	68c3      	ldr	r3, [r0, #12]
 8001092:	b29b      	uxth	r3, r3
 8001094:	2a00      	cmp	r2, #0
 8001096:	d102      	bne.n	800109e <TIM_DMACmd+0xe>
 8001098:	438b      	bics	r3, r1
 800109a:	8183      	strh	r3, [r0, #12]
 800109c:	4770      	bx	lr
 800109e:	4319      	orrs	r1, r3
 80010a0:	8181      	strh	r1, [r0, #12]
 80010a2:	e7fb      	b.n	800109c <TIM_DMACmd+0xc>

080010a4 <TIM_SelectCCDMA>:
 80010a4:	2900      	cmp	r1, #0
 80010a6:	d104      	bne.n	80010b2 <TIM_SelectCCDMA+0xe>
 80010a8:	6842      	ldr	r2, [r0, #4]
 80010aa:	4b05      	ldr	r3, [pc, #20]	; (80010c0 <TIM_SelectCCDMA+0x1c>)
 80010ac:	4013      	ands	r3, r2
 80010ae:	8083      	strh	r3, [r0, #4]
 80010b0:	4770      	bx	lr
 80010b2:	6843      	ldr	r3, [r0, #4]
 80010b4:	2208      	movs	r2, #8
 80010b6:	b29b      	uxth	r3, r3
 80010b8:	4313      	orrs	r3, r2
 80010ba:	8083      	strh	r3, [r0, #4]
 80010bc:	e7f8      	b.n	80010b0 <TIM_SelectCCDMA+0xc>
 80010be:	46c0      	nop			; (mov r8, r8)
 80010c0:	0000fff7 	.word	0x0000fff7

080010c4 <TIM_InternalClockConfig>:
 80010c4:	6882      	ldr	r2, [r0, #8]
 80010c6:	4b02      	ldr	r3, [pc, #8]	; (80010d0 <TIM_InternalClockConfig+0xc>)
 80010c8:	4013      	ands	r3, r2
 80010ca:	8103      	strh	r3, [r0, #8]
 80010cc:	4770      	bx	lr
 80010ce:	46c0      	nop			; (mov r8, r8)
 80010d0:	0000fff8 	.word	0x0000fff8

080010d4 <TIM_ITRxExternalClockConfig>:
 80010d4:	6882      	ldr	r2, [r0, #8]
 80010d6:	4b05      	ldr	r3, [pc, #20]	; (80010ec <TIM_ITRxExternalClockConfig+0x18>)
 80010d8:	4013      	ands	r3, r2
 80010da:	4319      	orrs	r1, r3
 80010dc:	8101      	strh	r1, [r0, #8]
 80010de:	6883      	ldr	r3, [r0, #8]
 80010e0:	2207      	movs	r2, #7
 80010e2:	b29b      	uxth	r3, r3
 80010e4:	4313      	orrs	r3, r2
 80010e6:	8103      	strh	r3, [r0, #8]
 80010e8:	4770      	bx	lr
 80010ea:	46c0      	nop			; (mov r8, r8)
 80010ec:	0000ff8f 	.word	0x0000ff8f

080010f0 <TIM_TIxExternalClockConfig>:
 80010f0:	b570      	push	{r4, r5, r6, lr}
 80010f2:	6a05      	ldr	r5, [r0, #32]
 80010f4:	2960      	cmp	r1, #96	; 0x60
 80010f6:	d01e      	beq.n	8001136 <TIM_TIxExternalClockConfig+0x46>
 80010f8:	4c1b      	ldr	r4, [pc, #108]	; (8001168 <TIM_TIxExternalClockConfig+0x78>)
 80010fa:	011b      	lsls	r3, r3, #4
 80010fc:	402c      	ands	r4, r5
 80010fe:	8404      	strh	r4, [r0, #32]
 8001100:	6985      	ldr	r5, [r0, #24]
 8001102:	4c1a      	ldr	r4, [pc, #104]	; (800116c <TIM_TIxExternalClockConfig+0x7c>)
 8001104:	6a06      	ldr	r6, [r0, #32]
 8001106:	4025      	ands	r5, r4
 8001108:	2401      	movs	r4, #1
 800110a:	4325      	orrs	r5, r4
 800110c:	b2ad      	uxth	r5, r5
 800110e:	432b      	orrs	r3, r5
 8001110:	4d17      	ldr	r5, [pc, #92]	; (8001170 <TIM_TIxExternalClockConfig+0x80>)
 8001112:	b29b      	uxth	r3, r3
 8001114:	4035      	ands	r5, r6
 8001116:	432c      	orrs	r4, r5
 8001118:	b2a4      	uxth	r4, r4
 800111a:	4322      	orrs	r2, r4
 800111c:	8303      	strh	r3, [r0, #24]
 800111e:	8402      	strh	r2, [r0, #32]
 8001120:	6882      	ldr	r2, [r0, #8]
 8001122:	4b14      	ldr	r3, [pc, #80]	; (8001174 <TIM_TIxExternalClockConfig+0x84>)
 8001124:	4013      	ands	r3, r2
 8001126:	4319      	orrs	r1, r3
 8001128:	8101      	strh	r1, [r0, #8]
 800112a:	6883      	ldr	r3, [r0, #8]
 800112c:	2207      	movs	r2, #7
 800112e:	b29b      	uxth	r3, r3
 8001130:	4313      	orrs	r3, r2
 8001132:	8103      	strh	r3, [r0, #8]
 8001134:	bd70      	pop	{r4, r5, r6, pc}
 8001136:	4c10      	ldr	r4, [pc, #64]	; (8001178 <TIM_TIxExternalClockConfig+0x88>)
 8001138:	402c      	ands	r4, r5
 800113a:	8404      	strh	r4, [r0, #32]
 800113c:	6986      	ldr	r6, [r0, #24]
 800113e:	4c0f      	ldr	r4, [pc, #60]	; (800117c <TIM_TIxExternalClockConfig+0x8c>)
 8001140:	6a05      	ldr	r5, [r0, #32]
 8001142:	4026      	ands	r6, r4
 8001144:	2480      	movs	r4, #128	; 0x80
 8001146:	0064      	lsls	r4, r4, #1
 8001148:	4326      	orrs	r6, r4
 800114a:	031c      	lsls	r4, r3, #12
 800114c:	1c33      	adds	r3, r6, #0
 800114e:	4323      	orrs	r3, r4
 8001150:	4c0b      	ldr	r4, [pc, #44]	; (8001180 <TIM_TIxExternalClockConfig+0x90>)
 8001152:	b29b      	uxth	r3, r3
 8001154:	4025      	ands	r5, r4
 8001156:	2410      	movs	r4, #16
 8001158:	4325      	orrs	r5, r4
 800115a:	0114      	lsls	r4, r2, #4
 800115c:	1c2a      	adds	r2, r5, #0
 800115e:	4322      	orrs	r2, r4
 8001160:	b292      	uxth	r2, r2
 8001162:	8303      	strh	r3, [r0, #24]
 8001164:	8402      	strh	r2, [r0, #32]
 8001166:	e7db      	b.n	8001120 <TIM_TIxExternalClockConfig+0x30>
 8001168:	0000fffe 	.word	0x0000fffe
 800116c:	0000ff0c 	.word	0x0000ff0c
 8001170:	0000fff5 	.word	0x0000fff5
 8001174:	0000ff8f 	.word	0x0000ff8f
 8001178:	0000ffef 	.word	0x0000ffef
 800117c:	00000cff 	.word	0x00000cff
 8001180:	0000ff5f 	.word	0x0000ff5f

08001184 <TIM_ETRClockMode1Config>:
 8001184:	b510      	push	{r4, lr}
 8001186:	021b      	lsls	r3, r3, #8
 8001188:	6884      	ldr	r4, [r0, #8]
 800118a:	431a      	orrs	r2, r3
 800118c:	23ff      	movs	r3, #255	; 0xff
 800118e:	401c      	ands	r4, r3
 8001190:	4322      	orrs	r2, r4
 8001192:	b292      	uxth	r2, r2
 8001194:	4311      	orrs	r1, r2
 8001196:	8101      	strh	r1, [r0, #8]
 8001198:	6882      	ldr	r2, [r0, #8]
 800119a:	4b03      	ldr	r3, [pc, #12]	; (80011a8 <TIM_ETRClockMode1Config+0x24>)
 800119c:	4013      	ands	r3, r2
 800119e:	2277      	movs	r2, #119	; 0x77
 80011a0:	4313      	orrs	r3, r2
 80011a2:	8103      	strh	r3, [r0, #8]
 80011a4:	bd10      	pop	{r4, pc}
 80011a6:	46c0      	nop			; (mov r8, r8)
 80011a8:	0000ff88 	.word	0x0000ff88

080011ac <TIM_ETRClockMode2Config>:
 80011ac:	b510      	push	{r4, lr}
 80011ae:	021b      	lsls	r3, r3, #8
 80011b0:	6884      	ldr	r4, [r0, #8]
 80011b2:	431a      	orrs	r2, r3
 80011b4:	23ff      	movs	r3, #255	; 0xff
 80011b6:	401c      	ands	r4, r3
 80011b8:	4322      	orrs	r2, r4
 80011ba:	b292      	uxth	r2, r2
 80011bc:	4311      	orrs	r1, r2
 80011be:	8101      	strh	r1, [r0, #8]
 80011c0:	6882      	ldr	r2, [r0, #8]
 80011c2:	2380      	movs	r3, #128	; 0x80
 80011c4:	b292      	uxth	r2, r2
 80011c6:	01db      	lsls	r3, r3, #7
 80011c8:	4313      	orrs	r3, r2
 80011ca:	8103      	strh	r3, [r0, #8]
 80011cc:	bd10      	pop	{r4, pc}
 80011ce:	46c0      	nop			; (mov r8, r8)

080011d0 <TIM_SelectInputTrigger>:
 80011d0:	6882      	ldr	r2, [r0, #8]
 80011d2:	4b02      	ldr	r3, [pc, #8]	; (80011dc <TIM_SelectInputTrigger+0xc>)
 80011d4:	4013      	ands	r3, r2
 80011d6:	4319      	orrs	r1, r3
 80011d8:	8101      	strh	r1, [r0, #8]
 80011da:	4770      	bx	lr
 80011dc:	0000ff8f 	.word	0x0000ff8f

080011e0 <TIM_SelectOutputTrigger>:
 80011e0:	6842      	ldr	r2, [r0, #4]
 80011e2:	4b04      	ldr	r3, [pc, #16]	; (80011f4 <TIM_SelectOutputTrigger+0x14>)
 80011e4:	4013      	ands	r3, r2
 80011e6:	8083      	strh	r3, [r0, #4]
 80011e8:	6843      	ldr	r3, [r0, #4]
 80011ea:	b29b      	uxth	r3, r3
 80011ec:	4319      	orrs	r1, r3
 80011ee:	8081      	strh	r1, [r0, #4]
 80011f0:	4770      	bx	lr
 80011f2:	46c0      	nop			; (mov r8, r8)
 80011f4:	0000ff8f 	.word	0x0000ff8f

080011f8 <TIM_SelectSlaveMode>:
 80011f8:	6882      	ldr	r2, [r0, #8]
 80011fa:	4b04      	ldr	r3, [pc, #16]	; (800120c <TIM_SelectSlaveMode+0x14>)
 80011fc:	4013      	ands	r3, r2
 80011fe:	8103      	strh	r3, [r0, #8]
 8001200:	6883      	ldr	r3, [r0, #8]
 8001202:	b29b      	uxth	r3, r3
 8001204:	4319      	orrs	r1, r3
 8001206:	8101      	strh	r1, [r0, #8]
 8001208:	4770      	bx	lr
 800120a:	46c0      	nop			; (mov r8, r8)
 800120c:	0000fff8 	.word	0x0000fff8

08001210 <TIM_SelectMasterSlaveMode>:
 8001210:	6882      	ldr	r2, [r0, #8]
 8001212:	4b04      	ldr	r3, [pc, #16]	; (8001224 <TIM_SelectMasterSlaveMode+0x14>)
 8001214:	4013      	ands	r3, r2
 8001216:	8103      	strh	r3, [r0, #8]
 8001218:	6883      	ldr	r3, [r0, #8]
 800121a:	b29b      	uxth	r3, r3
 800121c:	4319      	orrs	r1, r3
 800121e:	8101      	strh	r1, [r0, #8]
 8001220:	4770      	bx	lr
 8001222:	46c0      	nop			; (mov r8, r8)
 8001224:	0000ff7f 	.word	0x0000ff7f

08001228 <TIM_ETRConfig>:
 8001228:	b530      	push	{r4, r5, lr}
 800122a:	6885      	ldr	r5, [r0, #8]
 800122c:	24ff      	movs	r4, #255	; 0xff
 800122e:	402c      	ands	r4, r5
 8001230:	4321      	orrs	r1, r4
 8001232:	430a      	orrs	r2, r1
 8001234:	021b      	lsls	r3, r3, #8
 8001236:	431a      	orrs	r2, r3
 8001238:	b292      	uxth	r2, r2
 800123a:	8102      	strh	r2, [r0, #8]
 800123c:	bd30      	pop	{r4, r5, pc}
 800123e:	46c0      	nop			; (mov r8, r8)

08001240 <TIM_EncoderInterfaceConfig>:
 8001240:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001242:	6887      	ldr	r7, [r0, #8]
 8001244:	4c09      	ldr	r4, [pc, #36]	; (800126c <TIM_EncoderInterfaceConfig+0x2c>)
 8001246:	6985      	ldr	r5, [r0, #24]
 8001248:	403c      	ands	r4, r7
 800124a:	4321      	orrs	r1, r4
 800124c:	4c08      	ldr	r4, [pc, #32]	; (8001270 <TIM_EncoderInterfaceConfig+0x30>)
 800124e:	6a06      	ldr	r6, [r0, #32]
 8001250:	402c      	ands	r4, r5
 8001252:	2502      	movs	r5, #2
 8001254:	35ff      	adds	r5, #255	; 0xff
 8001256:	432c      	orrs	r4, r5
 8001258:	4d06      	ldr	r5, [pc, #24]	; (8001274 <TIM_EncoderInterfaceConfig+0x34>)
 800125a:	011b      	lsls	r3, r3, #4
 800125c:	4035      	ands	r5, r6
 800125e:	432a      	orrs	r2, r5
 8001260:	431a      	orrs	r2, r3
 8001262:	b292      	uxth	r2, r2
 8001264:	8101      	strh	r1, [r0, #8]
 8001266:	8304      	strh	r4, [r0, #24]
 8001268:	8402      	strh	r2, [r0, #32]
 800126a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800126c:	0000fff8 	.word	0x0000fff8
 8001270:	0000fcfc 	.word	0x0000fcfc
 8001274:	0000ffdd 	.word	0x0000ffdd

08001278 <TIM_SelectHallSensor>:
 8001278:	2900      	cmp	r1, #0
 800127a:	d104      	bne.n	8001286 <TIM_SelectHallSensor+0xe>
 800127c:	6842      	ldr	r2, [r0, #4]
 800127e:	4b05      	ldr	r3, [pc, #20]	; (8001294 <TIM_SelectHallSensor+0x1c>)
 8001280:	4013      	ands	r3, r2
 8001282:	8083      	strh	r3, [r0, #4]
 8001284:	4770      	bx	lr
 8001286:	6843      	ldr	r3, [r0, #4]
 8001288:	2280      	movs	r2, #128	; 0x80
 800128a:	b29b      	uxth	r3, r3
 800128c:	4313      	orrs	r3, r2
 800128e:	8083      	strh	r3, [r0, #4]
 8001290:	e7f8      	b.n	8001284 <TIM_SelectHallSensor+0xc>
 8001292:	46c0      	nop			; (mov r8, r8)
 8001294:	0000ff7f 	.word	0x0000ff7f

08001298 <TIM_RemapConfig>:
 8001298:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800129a:	0c0b      	lsrs	r3, r1, #16
 800129c:	401a      	ands	r2, r3
 800129e:	2350      	movs	r3, #80	; 0x50
 80012a0:	52c2      	strh	r2, [r0, r3]
 80012a2:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80012a4:	4311      	orrs	r1, r2
 80012a6:	b289      	uxth	r1, r1
 80012a8:	52c1      	strh	r1, [r0, r3]
 80012aa:	4770      	bx	lr

080012ac <__aeabi_uidiv>:
 80012ac:	2900      	cmp	r1, #0
 80012ae:	d034      	beq.n	800131a <.udivsi3_skip_div0_test+0x6a>

080012b0 <.udivsi3_skip_div0_test>:
 80012b0:	2301      	movs	r3, #1
 80012b2:	2200      	movs	r2, #0
 80012b4:	b410      	push	{r4}
 80012b6:	4288      	cmp	r0, r1
 80012b8:	d32c      	bcc.n	8001314 <.udivsi3_skip_div0_test+0x64>
 80012ba:	2401      	movs	r4, #1
 80012bc:	0724      	lsls	r4, r4, #28
 80012be:	42a1      	cmp	r1, r4
 80012c0:	d204      	bcs.n	80012cc <.udivsi3_skip_div0_test+0x1c>
 80012c2:	4281      	cmp	r1, r0
 80012c4:	d202      	bcs.n	80012cc <.udivsi3_skip_div0_test+0x1c>
 80012c6:	0109      	lsls	r1, r1, #4
 80012c8:	011b      	lsls	r3, r3, #4
 80012ca:	e7f8      	b.n	80012be <.udivsi3_skip_div0_test+0xe>
 80012cc:	00e4      	lsls	r4, r4, #3
 80012ce:	42a1      	cmp	r1, r4
 80012d0:	d204      	bcs.n	80012dc <.udivsi3_skip_div0_test+0x2c>
 80012d2:	4281      	cmp	r1, r0
 80012d4:	d202      	bcs.n	80012dc <.udivsi3_skip_div0_test+0x2c>
 80012d6:	0049      	lsls	r1, r1, #1
 80012d8:	005b      	lsls	r3, r3, #1
 80012da:	e7f8      	b.n	80012ce <.udivsi3_skip_div0_test+0x1e>
 80012dc:	4288      	cmp	r0, r1
 80012de:	d301      	bcc.n	80012e4 <.udivsi3_skip_div0_test+0x34>
 80012e0:	1a40      	subs	r0, r0, r1
 80012e2:	431a      	orrs	r2, r3
 80012e4:	084c      	lsrs	r4, r1, #1
 80012e6:	42a0      	cmp	r0, r4
 80012e8:	d302      	bcc.n	80012f0 <.udivsi3_skip_div0_test+0x40>
 80012ea:	1b00      	subs	r0, r0, r4
 80012ec:	085c      	lsrs	r4, r3, #1
 80012ee:	4322      	orrs	r2, r4
 80012f0:	088c      	lsrs	r4, r1, #2
 80012f2:	42a0      	cmp	r0, r4
 80012f4:	d302      	bcc.n	80012fc <.udivsi3_skip_div0_test+0x4c>
 80012f6:	1b00      	subs	r0, r0, r4
 80012f8:	089c      	lsrs	r4, r3, #2
 80012fa:	4322      	orrs	r2, r4
 80012fc:	08cc      	lsrs	r4, r1, #3
 80012fe:	42a0      	cmp	r0, r4
 8001300:	d302      	bcc.n	8001308 <.udivsi3_skip_div0_test+0x58>
 8001302:	1b00      	subs	r0, r0, r4
 8001304:	08dc      	lsrs	r4, r3, #3
 8001306:	4322      	orrs	r2, r4
 8001308:	2800      	cmp	r0, #0
 800130a:	d003      	beq.n	8001314 <.udivsi3_skip_div0_test+0x64>
 800130c:	091b      	lsrs	r3, r3, #4
 800130e:	d001      	beq.n	8001314 <.udivsi3_skip_div0_test+0x64>
 8001310:	0909      	lsrs	r1, r1, #4
 8001312:	e7e3      	b.n	80012dc <.udivsi3_skip_div0_test+0x2c>
 8001314:	1c10      	adds	r0, r2, #0
 8001316:	bc10      	pop	{r4}
 8001318:	4770      	bx	lr
 800131a:	2800      	cmp	r0, #0
 800131c:	d001      	beq.n	8001322 <.udivsi3_skip_div0_test+0x72>
 800131e:	2000      	movs	r0, #0
 8001320:	43c0      	mvns	r0, r0
 8001322:	b407      	push	{r0, r1, r2}
 8001324:	4802      	ldr	r0, [pc, #8]	; (8001330 <.udivsi3_skip_div0_test+0x80>)
 8001326:	a102      	add	r1, pc, #8	; (adr r1, 8001330 <.udivsi3_skip_div0_test+0x80>)
 8001328:	1840      	adds	r0, r0, r1
 800132a:	9002      	str	r0, [sp, #8]
 800132c:	bd03      	pop	{r0, r1, pc}
 800132e:	46c0      	nop			; (mov r8, r8)
 8001330:	00000019 	.word	0x00000019

08001334 <__aeabi_uidivmod>:
 8001334:	2900      	cmp	r1, #0
 8001336:	d0f0      	beq.n	800131a <.udivsi3_skip_div0_test+0x6a>
 8001338:	b503      	push	{r0, r1, lr}
 800133a:	f7ff ffb9 	bl	80012b0 <.udivsi3_skip_div0_test>
 800133e:	bc0e      	pop	{r1, r2, r3}
 8001340:	4342      	muls	r2, r0
 8001342:	1a89      	subs	r1, r1, r2
 8001344:	4718      	bx	r3
 8001346:	46c0      	nop			; (mov r8, r8)

08001348 <__aeabi_idiv0>:
 8001348:	4770      	bx	lr
 800134a:	46c0      	nop			; (mov r8, r8)

0800134c <delay>:

  }
}

void delay( int a )
{
 800134c:	b082      	sub	sp, #8
  volatile int i, j;

  for ( i = 0; i < a; i++ )
 800134e:	2300      	movs	r3, #0
 8001350:	9300      	str	r3, [sp, #0]
 8001352:	9b00      	ldr	r3, [sp, #0]
 8001354:	4283      	cmp	r3, r0
 8001356:	da05      	bge.n	8001364 <delay+0x18>
  {
    j++;
 8001358:	9b01      	ldr	r3, [sp, #4]
 800135a:	3301      	adds	r3, #1
 800135c:	9301      	str	r3, [sp, #4]

void delay( int a )
{
  volatile int i, j;

  for ( i = 0; i < a; i++ )
 800135e:	9b00      	ldr	r3, [sp, #0]
 8001360:	3301      	adds	r3, #1
 8001362:	e7f5      	b.n	8001350 <delay+0x4>
  {
    j++;
  }
}
 8001364:	b002      	add	sp, #8
 8001366:	4770      	bx	lr

08001368 <main>:
       system_stm32l1xx.c file
     */     
       
  /* --------------------------- System Clocks Configuration ---------------------*/
  /* TIM3 clock enable */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
 8001368:	2001      	movs	r0, #1

  uint16_t PrescalerValue = 0;

  void delay(int a);
  int main(void)
  {
 800136a:	b570      	push	{r4, r5, r6, lr}
       system_stm32l1xx.c file
     */     
       
  /* --------------------------- System Clocks Configuration ---------------------*/
  /* TIM3 clock enable */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
 800136c:	1c01      	adds	r1, r0, #0
 800136e:	f7ff f961 	bl	8000634 <RCC_APB1PeriphClockCmd>
  /* GPIOA clock enable */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);         //this is for the fading led
 8001372:	2001      	movs	r0, #1
 8001374:	1c01      	adds	r1, r0, #0
 8001376:	f7ff f945 	bl	8000604 <RCC_AHBPeriphClockCmd>

  /*--------------------------------- GPIO Configuration -------------------------*/
  GPIO_StructInit(&GPIO_InitStructure);
 800137a:	4c2b      	ldr	r4, [pc, #172]	; (8001428 <main+0xc0>)
  //initialize pin PA1 as the led to fade
  //PA1 is associated with TIM2_CH2
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_1;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;                //set pin mode to use an alternate function (AF)
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;              //who knows, think its 'push-pull mode'
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
 800137c:	2501      	movs	r5, #1
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
  /* GPIOA clock enable */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);         //this is for the fading led

  /*--------------------------------- GPIO Configuration -------------------------*/
  GPIO_StructInit(&GPIO_InitStructure);
 800137e:	1c20      	adds	r0, r4, #0
 8001380:	f7fe ff8e 	bl	80002a0 <GPIO_StructInit>
  //initialize pin PA1 as the led to fade
  //PA1 is associated with TIM2_CH2
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_1;
 8001384:	2302      	movs	r3, #2
 8001386:	6023      	str	r3, [r4, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;                //set pin mode to use an alternate function (AF)
 8001388:	7123      	strb	r3, [r4, #4]
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;              //who knows, think its 'push-pull mode'
 800138a:	2600      	movs	r6, #0
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
 800138c:	2303      	movs	r3, #3

  GPIO_Init(GPIOA, &GPIO_InitStructure);
 800138e:	1c21      	adds	r1, r4, #0
 8001390:	4826      	ldr	r0, [pc, #152]	; (800142c <main+0xc4>)
  //PA1 is associated with TIM2_CH2
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_1;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;                //set pin mode to use an alternate function (AF)
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;              //who knows, think its 'push-pull mode'
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
 8001392:	7163      	strb	r3, [r4, #5]
  GPIO_StructInit(&GPIO_InitStructure);
  //initialize pin PA1 as the led to fade
  //PA1 is associated with TIM2_CH2
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_1;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;                //set pin mode to use an alternate function (AF)
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;              //who knows, think its 'push-pull mode'
 8001394:	71a6      	strb	r6, [r4, #6]
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
 8001396:	71e5      	strb	r5, [r4, #7]
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;

  GPIO_Init(GPIOA, &GPIO_InitStructure);
 8001398:	f7fe ff2a 	bl	80001f0 <GPIO_Init>
  GPIO_PinAFConfig(GPIOA, GPIO_PinSource1, GPIO_AF_TIM2);     //configure alternate function to us TIM2
 800139c:	1c2a      	adds	r2, r5, #0
 800139e:	4823      	ldr	r0, [pc, #140]	; (800142c <main+0xc4>)
 80013a0:	1c29      	adds	r1, r5, #0
 80013a2:	f7fe ffbf 	bl	8000324 <GPIO_PinAFConfig>

  This allows us to define a pulse width output from 0-100% with a precision of 1%
----------------------------------------------------------------------- */

  /* Compute the prescaler value */
  PrescalerValue = (uint16_t) (SystemCoreClock / 1000000) - 1;        //0...31
 80013a6:	4b22      	ldr	r3, [pc, #136]	; (8001430 <main+0xc8>)
 80013a8:	4922      	ldr	r1, [pc, #136]	; (8001434 <main+0xcc>)
 80013aa:	6818      	ldr	r0, [r3, #0]
 80013ac:	f7ff ff7e 	bl	80012ac <__aeabi_uidiv>
  TIM_TimeBaseStructure.TIM_Period = 1000-1;                          //0...999
 80013b0:	4921      	ldr	r1, [pc, #132]	; (8001438 <main+0xd0>)

  This allows us to define a pulse width output from 0-100% with a precision of 1%
----------------------------------------------------------------------- */

  /* Compute the prescaler value */
  PrescalerValue = (uint16_t) (SystemCoreClock / 1000000) - 1;        //0...31
 80013b2:	4b22      	ldr	r3, [pc, #136]	; (800143c <main+0xd4>)
 80013b4:	3801      	subs	r0, #1
 80013b6:	b280      	uxth	r0, r0
 80013b8:	8018      	strh	r0, [r3, #0]
  TIM_TimeBaseStructure.TIM_Period = 1000-1;                          //0...999
  TIM_TimeBaseStructure.TIM_Prescaler = PrescalerValue;
 80013ba:	8008      	strh	r0, [r1, #0]
  This allows us to define a pulse width output from 0-100% with a precision of 1%
----------------------------------------------------------------------- */

  /* Compute the prescaler value */
  PrescalerValue = (uint16_t) (SystemCoreClock / 1000000) - 1;        //0...31
  TIM_TimeBaseStructure.TIM_Period = 1000-1;                          //0...999
 80013bc:	4b20      	ldr	r3, [pc, #128]	; (8001440 <main+0xd8>)
  TIM_TimeBaseStructure.TIM_Prescaler = PrescalerValue;
  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;         //Timer counts up from 0

  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 80013be:	2080      	movs	r0, #128	; 0x80
 80013c0:	05c0      	lsls	r0, r0, #23
  This allows us to define a pulse width output from 0-100% with a precision of 1%
----------------------------------------------------------------------- */

  /* Compute the prescaler value */
  PrescalerValue = (uint16_t) (SystemCoreClock / 1000000) - 1;        //0...31
  TIM_TimeBaseStructure.TIM_Period = 1000-1;                          //0...999
 80013c2:	604b      	str	r3, [r1, #4]
  TIM_TimeBaseStructure.TIM_Prescaler = PrescalerValue;
  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;         //Timer counts up from 0
 80013c4:	804e      	strh	r6, [r1, #2]

  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 80013c6:	f7ff fa41 	bl	800084c <TIM_TimeBaseInit>
  /* PWM1 Mode configuration: Channel2 
     PA1 is associated with TIM2_CH2
     The Channel number is in the function call: 
     TIM_OC2Init = channel 2 , 
     TIM_OC3Init = channel 3 (associated with PA3) */
  TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;                   //pin output mode configured as PWM (repetitive)
 80013ca:	491e      	ldr	r1, [pc, #120]	; (8001444 <main+0xdc>)
  TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
  TIM_OC2Init(TIM2, &TIM_OCInitStructure);
 80013cc:	2080      	movs	r0, #128	; 0x80
  /* PWM1 Mode configuration: Channel2 
     PA1 is associated with TIM2_CH2
     The Channel number is in the function call: 
     TIM_OC2Init = channel 2 , 
     TIM_OC3Init = channel 3 (associated with PA3) */
  TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;                   //pin output mode configured as PWM (repetitive)
 80013ce:	2360      	movs	r3, #96	; 0x60
  TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
  TIM_OC2Init(TIM2, &TIM_OCInitStructure);
 80013d0:	05c0      	lsls	r0, r0, #23
  /* PWM1 Mode configuration: Channel2 
     PA1 is associated with TIM2_CH2
     The Channel number is in the function call: 
     TIM_OC2Init = channel 2 , 
     TIM_OC3Init = channel 3 (associated with PA3) */
  TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;                   //pin output mode configured as PWM (repetitive)
 80013d2:	800b      	strh	r3, [r1, #0]
  TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
 80013d4:	804d      	strh	r5, [r1, #2]
  TIM_OC2Init(TIM2, &TIM_OCInitStructure);
 80013d6:	f7ff faff 	bl	80009d8 <TIM_OC2Init>

  /* TIM2 enable counter */
  TIM_Cmd(TIM2, ENABLE);
 80013da:	2080      	movs	r0, #128	; 0x80
 80013dc:	05c0      	lsls	r0, r0, #23
 80013de:	1c29      	adds	r1, r5, #0
 80013e0:	f7ff face 	bl	8000980 <TIM_Cmd>

  while (1)
  {

    //fade up
    for (int i = 0; i <999; i ++){
 80013e4:	1c34      	adds	r4, r6, #0
 80013e6:	4b18      	ldr	r3, [pc, #96]	; (8001448 <main+0xe0>)
 80013e8:	429c      	cmp	r4, r3
 80013ea:	dc09      	bgt.n	8001400 <main+0x98>

      TIM_SetCompare2(TIM2,i);                                         //Pulse width is set with this function
 80013ec:	2080      	movs	r0, #128	; 0x80
 80013ee:	1c21      	adds	r1, r4, #0
 80013f0:	05c0      	lsls	r0, r0, #23
 80013f2:	f7ff fb85 	bl	8000b00 <TIM_SetCompare2>
      delay(100);                                                      // the '2' relates to the channel in use
 80013f6:	2064      	movs	r0, #100	; 0x64
 80013f8:	f7ff ffa8 	bl	800134c <delay>

  while (1)
  {

    //fade up
    for (int i = 0; i <999; i ++){
 80013fc:	3401      	adds	r4, #1
 80013fe:	e7f2      	b.n	80013e6 <main+0x7e>

      TIM_SetCompare2(TIM2,i);                                         //Pulse width is set with this function
      delay(100);                                                      // the '2' relates to the channel in use
    }

    delay(10000);
 8001400:	4812      	ldr	r0, [pc, #72]	; (800144c <main+0xe4>)
 8001402:	f7ff ffa3 	bl	800134c <delay>

    //fade down
    for (int i = 999; i >0; i --){
 8001406:	4c0e      	ldr	r4, [pc, #56]	; (8001440 <main+0xd8>)

      TIM_SetCompare2(TIM2,i);
 8001408:	2080      	movs	r0, #128	; 0x80
 800140a:	1c21      	adds	r1, r4, #0
 800140c:	05c0      	lsls	r0, r0, #23
 800140e:	f7ff fb77 	bl	8000b00 <TIM_SetCompare2>
    }

    delay(10000);

    //fade down
    for (int i = 999; i >0; i --){
 8001412:	3c01      	subs	r4, #1

      TIM_SetCompare2(TIM2,i);
      delay(100);
 8001414:	2064      	movs	r0, #100	; 0x64
 8001416:	f7ff ff99 	bl	800134c <delay>
    }

    delay(10000);

    //fade down
    for (int i = 999; i >0; i --){
 800141a:	2c00      	cmp	r4, #0
 800141c:	d1f4      	bne.n	8001408 <main+0xa0>

      TIM_SetCompare2(TIM2,i);
      delay(100);
    }

    delay(10000);
 800141e:	480b      	ldr	r0, [pc, #44]	; (800144c <main+0xe4>)
 8001420:	f7ff ff94 	bl	800134c <delay>

  }
 8001424:	e7df      	b.n	80013e6 <main+0x7e>
 8001426:	46c0      	nop			; (mov r8, r8)
 8001428:	2000003c 	.word	0x2000003c
 800142c:	40020000 	.word	0x40020000
 8001430:	2000001c 	.word	0x2000001c
 8001434:	000f4240 	.word	0x000f4240
 8001438:	20000024 	.word	0x20000024
 800143c:	20000020 	.word	0x20000020
 8001440:	000003e7 	.word	0x000003e7
 8001444:	20000030 	.word	0x20000030
 8001448:	000003e6 	.word	0x000003e6
 800144c:	00002710 	.word	0x00002710

08001450 <SystemInit>:
  * @retval None
  */
void SystemInit (void)
{
  /*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100;
 8001450:	4b3c      	ldr	r3, [pc, #240]	; (8001544 <SystemInit+0xf4>)
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001452:	b537      	push	{r0, r1, r2, r4, r5, lr}
  /*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100;
 8001454:	6819      	ldr	r1, [r3, #0]
 8001456:	2280      	movs	r2, #128	; 0x80
 8001458:	0052      	lsls	r2, r2, #1
 800145a:	430a      	orrs	r2, r1
 800145c:	601a      	str	r2, [r3, #0]

  /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
  RCC->CFGR &= (uint32_t)0x88FFC00C;
 800145e:	6899      	ldr	r1, [r3, #8]
 8001460:	4a39      	ldr	r2, [pc, #228]	; (8001548 <SystemInit+0xf8>)
 8001462:	400a      	ands	r2, r1
 8001464:	609a      	str	r2, [r3, #8]
  
  /*!< Reset HSION, HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xEEFEFFFE;
 8001466:	6819      	ldr	r1, [r3, #0]
 8001468:	4a38      	ldr	r2, [pc, #224]	; (800154c <SystemInit+0xfc>)
 800146a:	400a      	ands	r2, r1
 800146c:	601a      	str	r2, [r3, #0]

  /*!< Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 800146e:	6819      	ldr	r1, [r3, #0]
 8001470:	4a37      	ldr	r2, [pc, #220]	; (8001550 <SystemInit+0x100>)
 8001472:	400a      	ands	r2, r1
 8001474:	601a      	str	r2, [r3, #0]

  /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
  RCC->CFGR &= (uint32_t)0xFF02FFFF;
 8001476:	689a      	ldr	r2, [r3, #8]
 8001478:	4936      	ldr	r1, [pc, #216]	; (8001554 <SystemInit+0x104>)
 800147a:	400a      	ands	r2, r1
 800147c:	609a      	str	r2, [r3, #8]

  /*!< Disable all interrupts */
  RCC->CIR = 0x00000000;
 800147e:	2200      	movs	r2, #0
 8001480:	60da      	str	r2, [r3, #12]
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 8001482:	9200      	str	r2, [sp, #0]
 8001484:	9201      	str	r2, [sp, #4]
  
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/
  /* Enable HSE */
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 8001486:	6818      	ldr	r0, [r3, #0]
 8001488:	2280      	movs	r2, #128	; 0x80
 800148a:	0252      	lsls	r2, r2, #9
 800148c:	4302      	orrs	r2, r0
 800148e:	601a      	str	r2, [r3, #0]
 8001490:	1c08      	adds	r0, r1, #0
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
 8001492:	6819      	ldr	r1, [r3, #0]
 8001494:	2280      	movs	r2, #128	; 0x80
 8001496:	0292      	lsls	r2, r2, #10
 8001498:	4011      	ands	r1, r2
 800149a:	9101      	str	r1, [sp, #4]
    StartUpCounter++;
 800149c:	9900      	ldr	r1, [sp, #0]
 800149e:	3101      	adds	r1, #1
 80014a0:	9100      	str	r1, [sp, #0]
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 80014a2:	9901      	ldr	r1, [sp, #4]
 80014a4:	2900      	cmp	r1, #0
 80014a6:	d104      	bne.n	80014b2 <SystemInit+0x62>
 80014a8:	9c00      	ldr	r4, [sp, #0]
 80014aa:	21a0      	movs	r1, #160	; 0xa0
 80014ac:	01c9      	lsls	r1, r1, #7
 80014ae:	428c      	cmp	r4, r1
 80014b0:	d1ef      	bne.n	8001492 <SystemInit+0x42>

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 80014b2:	6819      	ldr	r1, [r3, #0]
 80014b4:	400a      	ands	r2, r1
 80014b6:	d000      	beq.n	80014ba <SystemInit+0x6a>
  {
    HSEStatus = (uint32_t)0x01;
 80014b8:	2201      	movs	r2, #1
  }
  else
  {
    HSEStatus = (uint32_t)0x00;
 80014ba:	9201      	str	r2, [sp, #4]
  }
  
  if (HSEStatus == (uint32_t)0x01)
 80014bc:	9901      	ldr	r1, [sp, #4]
 80014be:	2901      	cmp	r1, #1
 80014c0:	d004      	beq.n	80014cc <SystemInit+0x7c>
  SetSysClock();

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 80014c2:	4b25      	ldr	r3, [pc, #148]	; (8001558 <SystemInit+0x108>)
 80014c4:	2280      	movs	r2, #128	; 0x80
 80014c6:	0512      	lsls	r2, r2, #20
 80014c8:	609a      	str	r2, [r3, #8]
#endif
}
 80014ca:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
  }
  
  if (HSEStatus == (uint32_t)0x01)
  {
    /* Enable 64-bit access */
    FLASH->ACR |= FLASH_ACR_ACC64;
 80014cc:	4a23      	ldr	r2, [pc, #140]	; (800155c <SystemInit+0x10c>)
 80014ce:	2504      	movs	r5, #4
 80014d0:	6814      	ldr	r4, [r2, #0]
 80014d2:	432c      	orrs	r4, r5
 80014d4:	6014      	str	r4, [r2, #0]
    
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTEN;
 80014d6:	6814      	ldr	r4, [r2, #0]
 80014d8:	2502      	movs	r5, #2
 80014da:	432c      	orrs	r4, r5
 80014dc:	6014      	str	r4, [r2, #0]

    /* Flash 1 wait state */
    FLASH->ACR |= FLASH_ACR_LATENCY;
 80014de:	6814      	ldr	r4, [r2, #0]
 80014e0:	4321      	orrs	r1, r4
 80014e2:	6011      	str	r1, [r2, #0]
    
    /* Power enable */
    RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 80014e4:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014e6:	2280      	movs	r2, #128	; 0x80
 80014e8:	0552      	lsls	r2, r2, #21
 80014ea:	430a      	orrs	r2, r1
 80014ec:	625a      	str	r2, [r3, #36]	; 0x24
  
    /* Select the Voltage Range 1 (1.8 V) */
    PWR->CR = PWR_CR_VOS_0;
 80014ee:	2180      	movs	r1, #128	; 0x80
 80014f0:	4a1b      	ldr	r2, [pc, #108]	; (8001560 <SystemInit+0x110>)
 80014f2:	0109      	lsls	r1, r1, #4
 80014f4:	6011      	str	r1, [r2, #0]
  
    /* Wait Until the Voltage Regulator is ready */
    while((PWR->CSR & PWR_CSR_VOSF) != RESET)
 80014f6:	6851      	ldr	r1, [r2, #4]
 80014f8:	06cc      	lsls	r4, r1, #27
 80014fa:	d4fc      	bmi.n	80014f6 <SystemInit+0xa6>
    {
    }
        
    /* HCLK = SYSCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 80014fc:	689a      	ldr	r2, [r3, #8]
 80014fe:	609a      	str	r2, [r3, #8]
  
    /* PCLK2 = HCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 8001500:	689a      	ldr	r2, [r3, #8]
 8001502:	609a      	str	r2, [r3, #8]
    
    /* PCLK1 = HCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 8001504:	689a      	ldr	r2, [r3, #8]
 8001506:	609a      	str	r2, [r3, #8]
    
    /*  PLL configuration */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL |
 8001508:	6899      	ldr	r1, [r3, #8]
                                        RCC_CFGR_PLLDIV));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMUL12 | RCC_CFGR_PLLDIV3);
 800150a:	2291      	movs	r2, #145	; 0x91
    
    /* PCLK1 = HCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
    
    /*  PLL configuration */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL |
 800150c:	4001      	ands	r1, r0
 800150e:	6099      	str	r1, [r3, #8]
                                        RCC_CFGR_PLLDIV));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMUL12 | RCC_CFGR_PLLDIV3);
 8001510:	6899      	ldr	r1, [r3, #8]
 8001512:	0412      	lsls	r2, r2, #16
 8001514:	430a      	orrs	r2, r1
 8001516:	609a      	str	r2, [r3, #8]

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
 8001518:	6819      	ldr	r1, [r3, #0]
 800151a:	2280      	movs	r2, #128	; 0x80
 800151c:	0452      	lsls	r2, r2, #17
 800151e:	430a      	orrs	r2, r1
 8001520:	601a      	str	r2, [r3, #0]

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 8001522:	6819      	ldr	r1, [r3, #0]
 8001524:	4a07      	ldr	r2, [pc, #28]	; (8001544 <SystemInit+0xf4>)
 8001526:	0188      	lsls	r0, r1, #6
 8001528:	d5fb      	bpl.n	8001522 <SystemInit+0xd2>
    {
    }
        
    /* Select PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 800152a:	6890      	ldr	r0, [r2, #8]
 800152c:	2103      	movs	r1, #3
 800152e:	4388      	bics	r0, r1
 8001530:	6090      	str	r0, [r2, #8]
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
 8001532:	6890      	ldr	r0, [r2, #8]
 8001534:	4301      	orrs	r1, r0
 8001536:	6091      	str	r1, [r2, #8]

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 8001538:	6899      	ldr	r1, [r3, #8]
 800153a:	220c      	movs	r2, #12
 800153c:	400a      	ands	r2, r1
 800153e:	2a0c      	cmp	r2, #12
 8001540:	d1fa      	bne.n	8001538 <SystemInit+0xe8>
 8001542:	e7be      	b.n	80014c2 <SystemInit+0x72>
 8001544:	40023800 	.word	0x40023800
 8001548:	88ffc00c 	.word	0x88ffc00c
 800154c:	eefefffe 	.word	0xeefefffe
 8001550:	fffbffff 	.word	0xfffbffff
 8001554:	ff02ffff 	.word	0xff02ffff
 8001558:	e000ed00 	.word	0xe000ed00
 800155c:	40023c00 	.word	0x40023c00
 8001560:	40007000 	.word	0x40007000

08001564 <Reset_Handler>:
.weak Reset_Handler
.type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
movs r1, #0
 8001564:	2100      	movs	r1, #0
b LoopCopyDataInit
 8001566:	f000 b804 	b.w	8001572 <LoopCopyDataInit>

0800156a <CopyDataInit>:

CopyDataInit:
ldr r3, =_sidata
 800156a:	4b0d      	ldr	r3, [pc, #52]	; (80015a0 <LoopFillZerobss+0x16>)
ldr r3, [r3, r1]
 800156c:	585b      	ldr	r3, [r3, r1]
str r3, [r0, r1]
 800156e:	5043      	str	r3, [r0, r1]
adds r1, r1, #4
 8001570:	3104      	adds	r1, #4

08001572 <LoopCopyDataInit>:

LoopCopyDataInit:
ldr r0, =_sdata
 8001572:	480c      	ldr	r0, [pc, #48]	; (80015a4 <LoopFillZerobss+0x1a>)
ldr r3, =_edata
 8001574:	4b0c      	ldr	r3, [pc, #48]	; (80015a8 <LoopFillZerobss+0x1e>)
adds r2, r0, r1
 8001576:	1842      	adds	r2, r0, r1
cmp r2, r3
 8001578:	429a      	cmp	r2, r3
bcc CopyDataInit
 800157a:	f4ff aff6 	bcc.w	800156a <CopyDataInit>
ldr r2, =_sbss
 800157e:	4a0b      	ldr	r2, [pc, #44]	; (80015ac <LoopFillZerobss+0x22>)
b LoopFillZerobss
 8001580:	f000 b803 	b.w	800158a <LoopFillZerobss>

08001584 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
movs r3, #0
 8001584:	2300      	movs	r3, #0
str r3, [r2], #4
 8001586:	f842 3b04 	str.w	r3, [r2], #4

0800158a <LoopFillZerobss>:

LoopFillZerobss:
ldr r3, = _ebss
 800158a:	4b09      	ldr	r3, [pc, #36]	; (80015b0 <LoopFillZerobss+0x26>)
cmp r2, r3
 800158c:	429a      	cmp	r2, r3
bcc FillZerobss
 800158e:	f4ff aff9 	bcc.w	8001584 <FillZerobss>

/* Call the clock system intitialization function.*/
bl SystemInit
 8001592:	f7ff ff5d 	bl	8001450 <SystemInit>
/* Call static constructors */
bl __libc_init_array
 8001596:	f000 f80f 	bl	80015b8 <__libc_init_array>
/* Call the application's entry point.*/
bl main
 800159a:	f7ff fee5 	bl	8001368 <main>
bx lr
 800159e:	4770      	bx	lr
/* Copy the data segment initializers from flash to SRAM */
movs r1, #0
b LoopCopyDataInit

CopyDataInit:
ldr r3, =_sidata
 80015a0:	08001618 	.word	0x08001618
ldr r3, [r3, r1]
str r3, [r0, r1]
adds r1, r1, #4

LoopCopyDataInit:
ldr r0, =_sdata
 80015a4:	20000000 	.word	0x20000000
ldr r3, =_edata
 80015a8:	20000020 	.word	0x20000020
adds r2, r0, r1
cmp r2, r3
bcc CopyDataInit
ldr r2, =_sbss
 80015ac:	20000020 	.word	0x20000020
FillZerobss:
movs r3, #0
str r3, [r2], #4

LoopFillZerobss:
ldr r3, = _ebss
 80015b0:	20000044 	.word	0x20000044

080015b4 <ADC1_IRQHandler>:
* @retval : None
*/
.section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
b Infinite_Loop
 80015b4:	f7ff bffe 	b.w	80015b4 <ADC1_IRQHandler>

080015b8 <__libc_init_array>:
 80015b8:	b570      	push	{r4, r5, r6, lr}
 80015ba:	4e0d      	ldr	r6, [pc, #52]	; (80015f0 <__libc_init_array+0x38>)
 80015bc:	4d0d      	ldr	r5, [pc, #52]	; (80015f4 <__libc_init_array+0x3c>)
 80015be:	2400      	movs	r4, #0
 80015c0:	1bad      	subs	r5, r5, r6
 80015c2:	10ad      	asrs	r5, r5, #2
 80015c4:	d005      	beq.n	80015d2 <__libc_init_array+0x1a>
 80015c6:	00a3      	lsls	r3, r4, #2
 80015c8:	58f3      	ldr	r3, [r6, r3]
 80015ca:	3401      	adds	r4, #1
 80015cc:	4798      	blx	r3
 80015ce:	42a5      	cmp	r5, r4
 80015d0:	d1f9      	bne.n	80015c6 <__libc_init_array+0xe>
 80015d2:	f000 f815 	bl	8001600 <_init>
 80015d6:	4e08      	ldr	r6, [pc, #32]	; (80015f8 <__libc_init_array+0x40>)
 80015d8:	4d08      	ldr	r5, [pc, #32]	; (80015fc <__libc_init_array+0x44>)
 80015da:	2400      	movs	r4, #0
 80015dc:	1bad      	subs	r5, r5, r6
 80015de:	10ad      	asrs	r5, r5, #2
 80015e0:	d005      	beq.n	80015ee <__libc_init_array+0x36>
 80015e2:	00a3      	lsls	r3, r4, #2
 80015e4:	58f3      	ldr	r3, [r6, r3]
 80015e6:	3401      	adds	r4, #1
 80015e8:	4798      	blx	r3
 80015ea:	42a5      	cmp	r5, r4
 80015ec:	d1f9      	bne.n	80015e2 <__libc_init_array+0x2a>
 80015ee:	bd70      	pop	{r4, r5, r6, pc}
	...

08001600 <_init>:
 8001600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001602:	46c0      	nop			; (mov r8, r8)
 8001604:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001606:	bc08      	pop	{r3}
 8001608:	469e      	mov	lr, r3
 800160a:	4770      	bx	lr

0800160c <_fini>:
 800160c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800160e:	46c0      	nop			; (mov r8, r8)
 8001610:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001612:	bc08      	pop	{r3}
 8001614:	469e      	mov	lr, r3
 8001616:	4770      	bx	lr
