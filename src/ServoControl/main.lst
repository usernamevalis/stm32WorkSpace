
main.elf:     file format elf32-littlearm

SYMBOL TABLE:
08000000 l    d  .isr_vector	00000000 .isr_vector
0800010c l    d  .text	00000000 .text
20000000 l    d  .data	00000000 .data
2000001c l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 /var/folders/8f/zhq2rlhx6sl47y8ztwk74bcr0000gn/T//cc3dHgz7.o
f108f85f l       *ABS*	00000000 BootRAM
080019fa l       .text	00000000 LoopCopyDataInit
080019f2 l       .text	00000000 CopyDataInit
08001a12 l       .text	00000000 LoopFillZerobss
08001a0c l       .text	00000000 FillZerobss
08001a3c l       .text	00000000 Infinite_Loop
00000000 l    df *ABS*	00000000 stm32l1xx_gpio.c
00000000 l    df *ABS*	00000000 misc.c
00000000 l    df *ABS*	00000000 stm32l1xx_rcc.c
20000000 l     O .data	00000009 PLLMulTable
2000000c l     O .data	00000010 APBAHBPrescTable
00000000 l    df *ABS*	00000000 stm32l1xx_tim.c
00000000 l    df *ABS*	00000000 _udivsi3.o
0800137c l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 _clzsi2.o
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 system_stm32l1xx.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 /Users/nathanogates/Development/embedded/redux/gcc-arm/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crti.o
00000000 l    df *ABS*	00000000 /Users/nathanogates/Development/embedded/redux/gcc-arm/bin/../lib/gcc/arm-none-eabi/4.8.4/armv6-m/crtn.o
00000000 l    df *ABS*	00000000 
20000020 l       .bss	00000000 __exidx_end
00000000 l       *UND*	00000000 __fini_array_end
00000000 l       *UND*	00000000 malloc
00000000 l       *UND*	00000000 __bss_start__
20000020 l       .bss	00000000 __exidx_start
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 __bss_end__
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 __fini_array_start
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 __libc_fini
00000000 l       *UND*	00000000 __stack
00000000 l       *UND*	00000000 _exit
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __register_frame_info
00000000 l       *UND*	00000000 free
08000980 g     F .text	00000010 TIM_TimeBaseStructInit
08001a3c  w    F .text	00000004 RTC_Alarm_IRQHandler
08001a3c  w    F .text	00000004 EXTI2_IRQHandler
080004f0 g     F .text	0000000c RCC_HSICmd
08000be8 g     F .text	00000018 TIM_ForcedOC2Config
08000528 g     F .text	0000000c RCC_PLLCmd
08001a3c  w    F .text	00000004 DebugMon_Handler
08000bcc g     F .text	00000004 TIM_SetCompare2
08000718 g     F .text	00000018 RCC_AHBPeriphResetCmd
08000324 g     F .text	00000024 GPIO_PinAFConfig
0800080c g     F .text	0000000c RCC_ClearITPendingBit
080002ec g     F .text	0000000c GPIO_ReadOutputDataBit
08000d78 g     F .text	0000001c TIM_CCxCmd
080010ec g     F .text	0000001c TIM_SetIC4Prescaler
08001a3c  w    F .text	00000004 HardFault_Handler
08001a3c  w    F .text	00000004 TIM10_IRQHandler
08001a3c  w    F .text	00000004 USB_HP_IRQHandler
08001a3c  w    F .text	00000004 TIM6_IRQHandler
08000c28 g     F .text	00000010 TIM_OC1PreloadConfig
08001a3c  w    F .text	00000004 SysTick_Handler
0800054c g     F .text	0000000c RCC_MCOConfig
0800035c g     F .text	00000070 NVIC_Init
08001a3c  w    F .text	00000004 PVD_IRQHandler
08001ae0 g       .text	00000000 _sidata
08001a3c  w    F .text	00000004 PendSV_Handler
08001a3c  w    F .text	00000004 NMI_Handler
08001a3c  w    F .text	00000004 EXTI3_IRQHandler
08001278 g     F .text	00000022 TIM_ETRClockMode2Config
080007a8 g     F .text	00000018 RCC_ITConfig
08000bd8 g     F .text	00000010 TIM_ForcedOC1Config
0800115c g     F .text	00000014 TIM_DMACmd
08001250 g     F .text	00000028 TIM_ETRClockMode1Config
08000760 g     F .text	00000018 RCC_AHBPeriphClockLPModeCmd
080010d4 g     F .text	00000018 TIM_SetIC3Prescaler
08000ce8 g     F .text	00000010 TIM_ClearOC3Ref
08001ae0 g       .text	00000000 _etext
2000001c g       .bss	00000000 _sbss
08000558 g     F .text	00000014 RCC_SYSCLKConfig
0800046c g     F .text	0000003c RCC_WaitForHSEStartUp
080003cc g     F .text	00000014 NVIC_SetVectorTable
08000534 g     F .text	0000000c RCC_ClockSecuritySystemCmd
08001a3c  w    F .text	00000004 EXTI0_IRQHandler
08001a3c  w    F .text	00000004 I2C2_EV_IRQHandler
080007e4 g     F .text	00000014 RCC_ClearFlag
08000a4c g     F .text	00000020 TIM_Cmd
08000c60 g     F .text	00000018 TIM_OC4PreloadConfig
0800045c g     F .text	00000010 RCC_HSEConfig
08001378 g     F .text	00000088 .hidden __udivsi3
0800112c g     F .text	00000008 TIM_ClearFlag
08000318 g     F .text	0000000a GPIO_ToggleBits
0800114c g     F .text	00000008 TIM_ClearITPendingBit
08001a3c  w    F .text	00000004 UsageFault_Handler
080009b0 g     F .text	00000004 TIM_GetCounter
080006e8 g     F .text	00000018 RCC_APB2PeriphClockCmd
08001098 g     F .text	00000004 TIM_GetCapture3
080001f0 g     F .text	000000ae GPIO_Init
08000518 g     F .text	00000010 RCC_PLLConfig
20000000 g       .data	00000000 _sdata
08001a3c  w    F .text	00000004 SPI1_IRQHandler
08001090 g     F .text	00000004 TIM_GetCapture1
08000d60 g     F .text	00000018 TIM_SelectOCREFClear
080003f8 g     F .text	0000001c SysTick_CLKSourceConfig
08000314 g     F .text	00000004 GPIO_Write
080002f8 g     F .text	00000006 GPIO_ReadOutputData
08000ae8 g     F .text	00000040 TIM_OC3Init
080004fc g     F .text	00000010 RCC_LSEConfig
080006b8 g     F .text	0000000c RCC_RTCCLKCmd
08000818 g     F .text	00000100 TIM_DeInit
08000700 g     F .text	00000018 RCC_APB1PeriphClockCmd
080007f8 g     F .text	00000014 RCC_GetITStatus
08001a3c  w    F .text	00000004 USB_FS_WKUP_IRQHandler
08001a40 g     F .text	00000048 __libc_init_array
08001120 g     F .text	0000000c TIM_GetFlagStatus
080006d0 g     F .text	00000018 RCC_AHBPeriphClockCmd
08001a3c  w    F .text	00000004 DMA1_Channel4_IRQHandler
08000ca0 g     F .text	00000010 TIM_OC3FastConfig
08001a3c  w    F .text	00000004 ADC1_IRQHandler
08001170 g     F .text	00000020 TIM_SelectCCDMA
080017ec g     F .text	00000064 TIM2_Configuration
08001ac8 g     F .text	00000000 _init
08000a34 g     F .text	00000018 TIM_SetClockDivision
08001a3c  w    F .text	00000004 USART3_IRQHandler
20000020 g       .bss	00000000 _ebss
08001a3c  w    F .text	00000004 DMA1_Channel7_IRQHandler
08000a6c g     F .text	00000038 TIM_OC1Init
08000c50 g     F .text	00000010 TIM_OC3PreloadConfig
080019ec  w    F .text	0000003c Reset_Handler
080002e4 g     F .text	00000006 GPIO_ReadInputData
080009ac g     F .text	00000004 TIM_SetAutoreload
08001a3c  w    F .text	00000004 LCD_IRQHandler
080007c0 g     F .text	00000024 RCC_GetFlagStatus
08000300 g     F .text	00000004 GPIO_SetBits
08001a3c  w    F .text	00000004 TIM4_IRQHandler
0800056c g     F .text	00000010 RCC_GetSYSCLKSource
080009fc g     F .text	00000020 TIM_ARRPreloadConfig
08000308 g     F .text	0000000c GPIO_WriteBit
2000001c g     O .bss	00000004 servo_angle
08001a3c  w    F .text	00000004 I2C1_EV_IRQHandler
08001134 g     F .text	00000016 TIM_GetITStatus
080005c0 g     F .text	000000b8 RCC_GetClocksFreq
08001a3c  w    F .text	00000004 DMA1_Channel6_IRQHandler
080016ac g     F .text	0000003c .hidden __clzsi2
08000b78 g     F .text	00000050 TIM_SelectOCxM
08000778 g     F .text	00000018 RCC_APB2PeriphClockLPModeCmd
08001364 g     F .text	00000014 TIM_RemapConfig
08001a3c  w    F .text	00000004 TIM3_IRQHandler
08001a3c  w    F .text	00000004 RCC_IRQHandler
2000001c g       .bss	00000000 _bss
08001a3c  w    F .text	00000004 DMA1_Channel1_IRQHandler
08000c78 g     F .text	00000010 TIM_OC1FastConfig
08001a3c g       .text	00000004 Default_Handler
08000c38 g     F .text	00000018 TIM_OC2PreloadConfig
08000678 g     F .text	00000040 RCC_RTCCLKConfig
0800129c g     F .text	00000010 TIM_SelectInputTrigger
08001a3c  w    F .text	00000004 EXTI15_10_IRQHandler
08001108 g     F .text	00000014 TIM_ITConfig
08000aa4 g     F .text	00000044 TIM_OC2Init
0800166c g     F .text	00000040 .hidden __aeabi_f2iz
08000990 g     F .text	00000006 TIM_PrescalerConfig
08000304 g     F .text	00000004 GPIO_ResetBits
08000d48 g     F .text	00000018 TIM_OC4PolarityConfig
080012ac g     F .text	00000018 TIM_SelectOutputTrigger
08001a3c  w    F .text	00000004 TIM7_IRQHandler
08000bd0 g     F .text	00000004 TIM_SetCompare3
08000b28 g     F .text	00000044 TIM_OC4Init
08001344 g     F .text	00000020 TIM_SelectHallSensor
08001414  w    F .text	00000002 .hidden __aeabi_ldiv0
08001a3c  w    F .text	00000004 EXTI9_5_IRQHandler
080004b4 g     F .text	00000018 RCC_MSIRangeConfig
08001a3c  w    F .text	00000004 TIM9_IRQHandler
08001a3c  w    F .text	00000004 TAMPER_STAMP_IRQHandler
08001a3c  w    F .text	00000004 RTC_WKUP_IRQHandler
08000790 g     F .text	00000018 RCC_APB1PeriphClockLPModeCmd
080010a0 g     F .text	00000018 TIM_SetIC1Prescaler
08001740 g     F .text	00000018 NVIC_Configuration
08000c10 g     F .text	00000018 TIM_ForcedOC4Config
08001a3c  w    F .text	00000004 SPI2_IRQHandler
08001a3c  w    F .text	00000004 MemManage_Handler
080004d8 g     F .text	00000018 RCC_AdjustHSICalibrationValue
08001850 g     F .text	00000088 main
080011a0 g     F .text	0000001c TIM_ITRxExternalClockConfig
08000d30 g     F .text	00000018 TIM_OC3PolarityConfig
08001378 g     F .text	00000000 .hidden __aeabi_uidiv
08001a3c  w    F .text	00000004 SVC_Handler
00000000  w      *UND*	00000000 __init_array_end
08001190 g     F .text	00000010 TIM_InternalClockConfig
08000d08 g     F .text	00000010 TIM_OC1PolarityConfig
08000c88 g     F .text	00000018 TIM_OC2FastConfig
08000590 g     F .text	00000018 RCC_PCLK1Config
080009a8 g     F .text	00000004 TIM_SetCounter
08001a3c  w    F .text	00000004 DMA1_Channel5_IRQHandler
08001a3c  w    F .text	00000004 USB_LP_IRQHandler
08001a3c  w    F .text	00000004 EXTI4_IRQHandler
080005a8 g     F .text	00000018 RCC_PCLK2Config
08000bd4 g     F .text	00000004 TIM_SetCompare4
08001094 g     F .text	00000004 TIM_GetCapture2
080009b4 g     F .text	00000006 TIM_GetPrescaler
08000cd8 g     F .text	00000010 TIM_ClearOC2Ref
080018d8 g     F .text	00000114 SystemInit
08000d94 g     F .text	00000164 TIM_ICInit
0800010c g     F .text	000000e4 GPIO_DeInit
08001ad4 g     F .text	00000000 _fini
0800172c g     F .text	00000014 RCC_Configuration
08000414 g     F .text	00000048 RCC_DeInit
08000ef8 g     F .text	00000010 TIM_ICStructInit
08000f08 g     F .text	00000188 TIM_PWMIConfig
08001a3c  w    F .text	00000004 DMA1_Channel3_IRQHandler
08001a3c  w    F .text	00000004 COMP_IRQHandler
08001418 g     F .text	00000254 .hidden __aeabi_fmul
080003e0 g     F .text	00000018 NVIC_SystemLPConfig
00000000  w      *UND*	00000000 __preinit_array_end
08000cc8 g     F .text	00000010 TIM_ClearOC1Ref
08001a3c  w    F .text	00000004 WWDG_IRQHandler
08000540 g     F .text	0000000c RCC_LSEClockSecuritySystemCmd
08000748 g     F .text	00000018 RCC_APB1PeriphResetCmd
20000000 g       .data	00000000 _data
080016e8 g     F .text	00000044 TIM2_IRQHandler
080009dc g     F .text	00000020 TIM_UpdateRequestConfig
08000c00 g     F .text	00000010 TIM_ForcedOC3Config
080011bc g     F .text	00000094 TIM_TIxExternalClockConfig
080002a0 g     F .text	00000014 GPIO_StructInit
08000b6c g     F .text	0000000c TIM_OCStructInit
20002000 g       *ABS*	00000000 _estack
08001a3c  w    F .text	00000004 DAC_IRQHandler
08001400 g     F .text	00000012 .hidden __aeabi_uidivmod
08001a3c  w    F .text	00000004 EXTI1_IRQHandler
080012dc g     F .text	00000018 TIM_SelectMasterSlaveMode
2000001c g       .data	00000000 _edata
080006c4 g     F .text	0000000c RCC_RTCResetCmd
0800109c g     F .text	00000004 TIM_GetCapture4
08000918 g     F .text	00000068 TIM_TimeBaseInit
08001a3c  w    F .text	00000004 TIM11_IRQHandler
08001a3c  w    F .text	00000004 USART2_IRQHandler
08000000 g     O .isr_vector	00000000 g_pfnVectors
080004cc g     F .text	0000000c RCC_MSICmd
08001154 g     F .text	00000008 TIM_DMAConfig
08001a3c  w    F .text	00000004 I2C2_ER_IRQHandler
08001a3c  w    F .text	00000004 DMA1_Channel2_IRQHandler
0800111c g     F .text	00000004 TIM_GenerateEvent
00000000  w      *UND*	00000000 __init_array_start
08001414  w    F .text	00000002 .hidden __aeabi_idiv0
08001a3c  w    F .text	00000004 FLASH_IRQHandler
08001758 g     F .text	00000094 GPIO_Configuration
080002b4 g     F .text	00000024 GPIO_PinLockConfig
08001a3c  w    F .text	00000004 BusFault_Handler
08001a3c  w    F .text	00000004 USART1_IRQHandler
0800050c g     F .text	0000000c RCC_LSICmd
080010b8 g     F .text	0000001c TIM_SetIC2Prescaler
080012f4 g     F .text	00000016 TIM_ETRConfig
08000730 g     F .text	00000018 RCC_APB2PeriphResetCmd
080012c4 g     F .text	00000018 TIM_SelectSlaveMode
08001a3c  w    F .text	00000004 I2C1_ER_IRQHandler
08000348 g     F .text	00000014 NVIC_PriorityGroupConfig
08000cf8 g     F .text	00000010 TIM_ClearOC4Ref
08000a1c g     F .text	00000018 TIM_SelectOnePulseMode
0800130c g     F .text	00000038 TIM_EncoderInterfaceConfig
080004a8 g     F .text	0000000c RCC_AdjustMSICalibrationValue
00000000  w      *UND*	00000000 __preinit_array_start
08000bc8 g     F .text	00000004 TIM_SetCompare1
08000d18 g     F .text	00000018 TIM_OC2PolarityConfig
080009bc g     F .text	00000020 TIM_UpdateDisableConfig
080002d8 g     F .text	0000000c GPIO_ReadInputDataBit
08000cb0 g     F .text	00000018 TIM_OC4FastConfig
0800057c g     F .text	00000014 RCC_HCLKConfig
08000998 g     F .text	00000010 TIM_CounterModeConfig



Disassembly of section .text:

0800010c <GPIO_DeInit>:
 800010c:	b508      	push	{r3, lr}
 800010e:	4b30      	ldr	r3, [pc, #192]	; (80001d0 <GPIO_DeInit+0xc4>)
 8000110:	4298      	cmp	r0, r3
 8000112:	d01e      	beq.n	8000152 <GPIO_DeInit+0x46>
 8000114:	4b2f      	ldr	r3, [pc, #188]	; (80001d4 <GPIO_DeInit+0xc8>)
 8000116:	4298      	cmp	r0, r3
 8000118:	d024      	beq.n	8000164 <GPIO_DeInit+0x58>
 800011a:	4b2f      	ldr	r3, [pc, #188]	; (80001d8 <GPIO_DeInit+0xcc>)
 800011c:	4298      	cmp	r0, r3
 800011e:	d02a      	beq.n	8000176 <GPIO_DeInit+0x6a>
 8000120:	4b2e      	ldr	r3, [pc, #184]	; (80001dc <GPIO_DeInit+0xd0>)
 8000122:	4298      	cmp	r0, r3
 8000124:	d030      	beq.n	8000188 <GPIO_DeInit+0x7c>
 8000126:	4b2e      	ldr	r3, [pc, #184]	; (80001e0 <GPIO_DeInit+0xd4>)
 8000128:	4298      	cmp	r0, r3
 800012a:	d036      	beq.n	800019a <GPIO_DeInit+0x8e>
 800012c:	4b2d      	ldr	r3, [pc, #180]	; (80001e4 <GPIO_DeInit+0xd8>)
 800012e:	4298      	cmp	r0, r3
 8000130:	d03c      	beq.n	80001ac <GPIO_DeInit+0xa0>
 8000132:	4b2d      	ldr	r3, [pc, #180]	; (80001e8 <GPIO_DeInit+0xdc>)
 8000134:	4298      	cmp	r0, r3
 8000136:	d042      	beq.n	80001be <GPIO_DeInit+0xb2>
 8000138:	4b2c      	ldr	r3, [pc, #176]	; (80001ec <GPIO_DeInit+0xe0>)
 800013a:	4298      	cmp	r0, r3
 800013c:	d000      	beq.n	8000140 <GPIO_DeInit+0x34>
 800013e:	bd08      	pop	{r3, pc}
 8000140:	2020      	movs	r0, #32
 8000142:	2101      	movs	r1, #1
 8000144:	f000 fae8 	bl	8000718 <RCC_AHBPeriphResetCmd>
 8000148:	2020      	movs	r0, #32
 800014a:	2100      	movs	r1, #0
 800014c:	f000 fae4 	bl	8000718 <RCC_AHBPeriphResetCmd>
 8000150:	e7f5      	b.n	800013e <GPIO_DeInit+0x32>
 8000152:	2001      	movs	r0, #1
 8000154:	2101      	movs	r1, #1
 8000156:	f000 fadf 	bl	8000718 <RCC_AHBPeriphResetCmd>
 800015a:	2001      	movs	r0, #1
 800015c:	2100      	movs	r1, #0
 800015e:	f000 fadb 	bl	8000718 <RCC_AHBPeriphResetCmd>
 8000162:	e7ec      	b.n	800013e <GPIO_DeInit+0x32>
 8000164:	2002      	movs	r0, #2
 8000166:	2101      	movs	r1, #1
 8000168:	f000 fad6 	bl	8000718 <RCC_AHBPeriphResetCmd>
 800016c:	2002      	movs	r0, #2
 800016e:	2100      	movs	r1, #0
 8000170:	f000 fad2 	bl	8000718 <RCC_AHBPeriphResetCmd>
 8000174:	e7e3      	b.n	800013e <GPIO_DeInit+0x32>
 8000176:	2004      	movs	r0, #4
 8000178:	2101      	movs	r1, #1
 800017a:	f000 facd 	bl	8000718 <RCC_AHBPeriphResetCmd>
 800017e:	2004      	movs	r0, #4
 8000180:	2100      	movs	r1, #0
 8000182:	f000 fac9 	bl	8000718 <RCC_AHBPeriphResetCmd>
 8000186:	e7da      	b.n	800013e <GPIO_DeInit+0x32>
 8000188:	2008      	movs	r0, #8
 800018a:	2101      	movs	r1, #1
 800018c:	f000 fac4 	bl	8000718 <RCC_AHBPeriphResetCmd>
 8000190:	2008      	movs	r0, #8
 8000192:	2100      	movs	r1, #0
 8000194:	f000 fac0 	bl	8000718 <RCC_AHBPeriphResetCmd>
 8000198:	e7d1      	b.n	800013e <GPIO_DeInit+0x32>
 800019a:	2010      	movs	r0, #16
 800019c:	2101      	movs	r1, #1
 800019e:	f000 fabb 	bl	8000718 <RCC_AHBPeriphResetCmd>
 80001a2:	2010      	movs	r0, #16
 80001a4:	2100      	movs	r1, #0
 80001a6:	f000 fab7 	bl	8000718 <RCC_AHBPeriphResetCmd>
 80001aa:	e7c8      	b.n	800013e <GPIO_DeInit+0x32>
 80001ac:	2040      	movs	r0, #64	; 0x40
 80001ae:	2101      	movs	r1, #1
 80001b0:	f000 fab2 	bl	8000718 <RCC_AHBPeriphResetCmd>
 80001b4:	2040      	movs	r0, #64	; 0x40
 80001b6:	2100      	movs	r1, #0
 80001b8:	f000 faae 	bl	8000718 <RCC_AHBPeriphResetCmd>
 80001bc:	e7bf      	b.n	800013e <GPIO_DeInit+0x32>
 80001be:	2080      	movs	r0, #128	; 0x80
 80001c0:	2101      	movs	r1, #1
 80001c2:	f000 faa9 	bl	8000718 <RCC_AHBPeriphResetCmd>
 80001c6:	2080      	movs	r0, #128	; 0x80
 80001c8:	2100      	movs	r1, #0
 80001ca:	f000 faa5 	bl	8000718 <RCC_AHBPeriphResetCmd>
 80001ce:	e7b6      	b.n	800013e <GPIO_DeInit+0x32>
 80001d0:	40020000 	.word	0x40020000
 80001d4:	40020400 	.word	0x40020400
 80001d8:	40020800 	.word	0x40020800
 80001dc:	40020c00 	.word	0x40020c00
 80001e0:	40021000 	.word	0x40021000
 80001e4:	40021800 	.word	0x40021800
 80001e8:	40021c00 	.word	0x40021c00
 80001ec:	40021400 	.word	0x40021400

080001f0 <GPIO_Init>:
 80001f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80001f2:	4644      	mov	r4, r8
 80001f4:	465f      	mov	r7, fp
 80001f6:	4656      	mov	r6, sl
 80001f8:	464d      	mov	r5, r9
 80001fa:	b4f0      	push	{r4, r5, r6, r7}
 80001fc:	468c      	mov	ip, r1
 80001fe:	680f      	ldr	r7, [r1, #0]
 8000200:	2103      	movs	r1, #3
 8000202:	b083      	sub	sp, #12
 8000204:	2400      	movs	r4, #0
 8000206:	2300      	movs	r3, #0
 8000208:	2601      	movs	r6, #1
 800020a:	4688      	mov	r8, r1
 800020c:	e003      	b.n	8000216 <GPIO_Init+0x26>
 800020e:	3301      	adds	r3, #1
 8000210:	3402      	adds	r4, #2
 8000212:	2b10      	cmp	r3, #16
 8000214:	d026      	beq.n	8000264 <GPIO_Init+0x74>
 8000216:	1c32      	adds	r2, r6, #0
 8000218:	409a      	lsls	r2, r3
 800021a:	1c3d      	adds	r5, r7, #0
 800021c:	4015      	ands	r5, r2
 800021e:	4295      	cmp	r5, r2
 8000220:	d1f5      	bne.n	800020e <GPIO_Init+0x1e>
 8000222:	4642      	mov	r2, r8
 8000224:	6801      	ldr	r1, [r0, #0]
 8000226:	40a2      	lsls	r2, r4
 8000228:	43d2      	mvns	r2, r2
 800022a:	4011      	ands	r1, r2
 800022c:	6001      	str	r1, [r0, #0]
 800022e:	4661      	mov	r1, ip
 8000230:	7909      	ldrb	r1, [r1, #4]
 8000232:	4693      	mov	fp, r2
 8000234:	6802      	ldr	r2, [r0, #0]
 8000236:	9101      	str	r1, [sp, #4]
 8000238:	40a1      	lsls	r1, r4
 800023a:	4311      	orrs	r1, r2
 800023c:	6001      	str	r1, [r0, #0]
 800023e:	9901      	ldr	r1, [sp, #4]
 8000240:	3901      	subs	r1, #1
 8000242:	b2c9      	uxtb	r1, r1
 8000244:	2901      	cmp	r1, #1
 8000246:	d914      	bls.n	8000272 <GPIO_Init+0x82>
 8000248:	68c1      	ldr	r1, [r0, #12]
 800024a:	465a      	mov	r2, fp
 800024c:	400a      	ands	r2, r1
 800024e:	4665      	mov	r5, ip
 8000250:	60c2      	str	r2, [r0, #12]
 8000252:	79ea      	ldrb	r2, [r5, #7]
 8000254:	68c1      	ldr	r1, [r0, #12]
 8000256:	40a2      	lsls	r2, r4
 8000258:	430a      	orrs	r2, r1
 800025a:	3301      	adds	r3, #1
 800025c:	60c2      	str	r2, [r0, #12]
 800025e:	3402      	adds	r4, #2
 8000260:	2b10      	cmp	r3, #16
 8000262:	d1d8      	bne.n	8000216 <GPIO_Init+0x26>
 8000264:	b003      	add	sp, #12
 8000266:	bc3c      	pop	{r2, r3, r4, r5}
 8000268:	4690      	mov	r8, r2
 800026a:	4699      	mov	r9, r3
 800026c:	46a2      	mov	sl, r4
 800026e:	46ab      	mov	fp, r5
 8000270:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000272:	6881      	ldr	r1, [r0, #8]
 8000274:	465a      	mov	r2, fp
 8000276:	4011      	ands	r1, r2
 8000278:	4662      	mov	r2, ip
 800027a:	6081      	str	r1, [r0, #8]
 800027c:	7952      	ldrb	r2, [r2, #5]
 800027e:	6881      	ldr	r1, [r0, #8]
 8000280:	40a2      	lsls	r2, r4
 8000282:	4311      	orrs	r1, r2
 8000284:	6081      	str	r1, [r0, #8]
 8000286:	6841      	ldr	r1, [r0, #4]
 8000288:	4662      	mov	r2, ip
 800028a:	b289      	uxth	r1, r1
 800028c:	43a9      	bics	r1, r5
 800028e:	8081      	strh	r1, [r0, #4]
 8000290:	7991      	ldrb	r1, [r2, #6]
 8000292:	6845      	ldr	r5, [r0, #4]
 8000294:	4099      	lsls	r1, r3
 8000296:	4329      	orrs	r1, r5
 8000298:	b289      	uxth	r1, r1
 800029a:	8081      	strh	r1, [r0, #4]
 800029c:	e7d4      	b.n	8000248 <GPIO_Init+0x58>
 800029e:	46c0      	nop			; (mov r8, r8)

080002a0 <GPIO_StructInit>:
 80002a0:	4b03      	ldr	r3, [pc, #12]	; (80002b0 <GPIO_StructInit+0x10>)
 80002a2:	6003      	str	r3, [r0, #0]
 80002a4:	2300      	movs	r3, #0
 80002a6:	7103      	strb	r3, [r0, #4]
 80002a8:	7143      	strb	r3, [r0, #5]
 80002aa:	7183      	strb	r3, [r0, #6]
 80002ac:	71c3      	strb	r3, [r0, #7]
 80002ae:	4770      	bx	lr
 80002b0:	0000ffff 	.word	0x0000ffff

080002b4 <GPIO_PinLockConfig>:
 80002b4:	2380      	movs	r3, #128	; 0x80
 80002b6:	b082      	sub	sp, #8
 80002b8:	025b      	lsls	r3, r3, #9
 80002ba:	9301      	str	r3, [sp, #4]
 80002bc:	9b01      	ldr	r3, [sp, #4]
 80002be:	430b      	orrs	r3, r1
 80002c0:	9301      	str	r3, [sp, #4]
 80002c2:	9b01      	ldr	r3, [sp, #4]
 80002c4:	61c3      	str	r3, [r0, #28]
 80002c6:	61c1      	str	r1, [r0, #28]
 80002c8:	9b01      	ldr	r3, [sp, #4]
 80002ca:	61c3      	str	r3, [r0, #28]
 80002cc:	69c3      	ldr	r3, [r0, #28]
 80002ce:	9301      	str	r3, [sp, #4]
 80002d0:	69c3      	ldr	r3, [r0, #28]
 80002d2:	9301      	str	r3, [sp, #4]
 80002d4:	b002      	add	sp, #8
 80002d6:	4770      	bx	lr

080002d8 <GPIO_ReadInputDataBit>:
 80002d8:	6900      	ldr	r0, [r0, #16]
 80002da:	4008      	ands	r0, r1
 80002dc:	1e43      	subs	r3, r0, #1
 80002de:	4198      	sbcs	r0, r3
 80002e0:	b2c0      	uxtb	r0, r0
 80002e2:	4770      	bx	lr

080002e4 <GPIO_ReadInputData>:
 80002e4:	6900      	ldr	r0, [r0, #16]
 80002e6:	b280      	uxth	r0, r0
 80002e8:	4770      	bx	lr
 80002ea:	46c0      	nop			; (mov r8, r8)

080002ec <GPIO_ReadOutputDataBit>:
 80002ec:	6940      	ldr	r0, [r0, #20]
 80002ee:	4008      	ands	r0, r1
 80002f0:	1e43      	subs	r3, r0, #1
 80002f2:	4198      	sbcs	r0, r3
 80002f4:	b2c0      	uxtb	r0, r0
 80002f6:	4770      	bx	lr

080002f8 <GPIO_ReadOutputData>:
 80002f8:	6940      	ldr	r0, [r0, #20]
 80002fa:	b280      	uxth	r0, r0
 80002fc:	4770      	bx	lr
 80002fe:	46c0      	nop			; (mov r8, r8)

08000300 <GPIO_SetBits>:
 8000300:	8301      	strh	r1, [r0, #24]
 8000302:	4770      	bx	lr

08000304 <GPIO_ResetBits>:
 8000304:	8341      	strh	r1, [r0, #26]
 8000306:	4770      	bx	lr

08000308 <GPIO_WriteBit>:
 8000308:	2a00      	cmp	r2, #0
 800030a:	d101      	bne.n	8000310 <GPIO_WriteBit+0x8>
 800030c:	8341      	strh	r1, [r0, #26]
 800030e:	4770      	bx	lr
 8000310:	8301      	strh	r1, [r0, #24]
 8000312:	e7fc      	b.n	800030e <GPIO_WriteBit+0x6>

08000314 <GPIO_Write>:
 8000314:	8281      	strh	r1, [r0, #20]
 8000316:	4770      	bx	lr

08000318 <GPIO_ToggleBits>:
 8000318:	6943      	ldr	r3, [r0, #20]
 800031a:	b29b      	uxth	r3, r3
 800031c:	4059      	eors	r1, r3
 800031e:	8281      	strh	r1, [r0, #20]
 8000320:	4770      	bx	lr
 8000322:	46c0      	nop			; (mov r8, r8)

08000324 <GPIO_PinAFConfig>:
 8000324:	2307      	movs	r3, #7
 8000326:	400b      	ands	r3, r1
 8000328:	08c9      	lsrs	r1, r1, #3
 800032a:	0089      	lsls	r1, r1, #2
 800032c:	1840      	adds	r0, r0, r1
 800032e:	b510      	push	{r4, lr}
 8000330:	6a01      	ldr	r1, [r0, #32]
 8000332:	009b      	lsls	r3, r3, #2
 8000334:	240f      	movs	r4, #15
 8000336:	409c      	lsls	r4, r3
 8000338:	43a1      	bics	r1, r4
 800033a:	6201      	str	r1, [r0, #32]
 800033c:	6a01      	ldr	r1, [r0, #32]
 800033e:	409a      	lsls	r2, r3
 8000340:	1c13      	adds	r3, r2, #0
 8000342:	430b      	orrs	r3, r1
 8000344:	6203      	str	r3, [r0, #32]
 8000346:	bd10      	pop	{r4, pc}

08000348 <NVIC_PriorityGroupConfig>:
 8000348:	4b02      	ldr	r3, [pc, #8]	; (8000354 <NVIC_PriorityGroupConfig+0xc>)
 800034a:	4318      	orrs	r0, r3
 800034c:	4b02      	ldr	r3, [pc, #8]	; (8000358 <NVIC_PriorityGroupConfig+0x10>)
 800034e:	60d8      	str	r0, [r3, #12]
 8000350:	4770      	bx	lr
 8000352:	46c0      	nop			; (mov r8, r8)
 8000354:	05fa0000 	.word	0x05fa0000
 8000358:	e000ed00 	.word	0xe000ed00

0800035c <NVIC_Init>:
 800035c:	78c3      	ldrb	r3, [r0, #3]
 800035e:	2b00      	cmp	r3, #0
 8000360:	d10b      	bne.n	800037a <NVIC_Init+0x1e>
 8000362:	7803      	ldrb	r3, [r0, #0]
 8000364:	221f      	movs	r2, #31
 8000366:	0959      	lsrs	r1, r3, #5
 8000368:	4013      	ands	r3, r2
 800036a:	2201      	movs	r2, #1
 800036c:	409a      	lsls	r2, r3
 800036e:	1c13      	adds	r3, r2, #0
 8000370:	3120      	adds	r1, #32
 8000372:	4a13      	ldr	r2, [pc, #76]	; (80003c0 <NVIC_Init+0x64>)
 8000374:	0089      	lsls	r1, r1, #2
 8000376:	508b      	str	r3, [r1, r2]
 8000378:	4770      	bx	lr
 800037a:	4b12      	ldr	r3, [pc, #72]	; (80003c4 <NVIC_Init+0x68>)
 800037c:	2104      	movs	r1, #4
 800037e:	68da      	ldr	r2, [r3, #12]
 8000380:	23e0      	movs	r3, #224	; 0xe0
 8000382:	00db      	lsls	r3, r3, #3
 8000384:	4393      	bics	r3, r2
 8000386:	0a1b      	lsrs	r3, r3, #8
 8000388:	7842      	ldrb	r2, [r0, #1]
 800038a:	1ac9      	subs	r1, r1, r3
 800038c:	b2c9      	uxtb	r1, r1
 800038e:	408a      	lsls	r2, r1
 8000390:	b2d1      	uxtb	r1, r2
 8000392:	220f      	movs	r2, #15
 8000394:	411a      	asrs	r2, r3
 8000396:	1c13      	adds	r3, r2, #0
 8000398:	7882      	ldrb	r2, [r0, #2]
 800039a:	401a      	ands	r2, r3
 800039c:	430a      	orrs	r2, r1
 800039e:	7803      	ldrb	r3, [r0, #0]
 80003a0:	4909      	ldr	r1, [pc, #36]	; (80003c8 <NVIC_Init+0x6c>)
 80003a2:	0112      	lsls	r2, r2, #4
 80003a4:	185b      	adds	r3, r3, r1
 80003a6:	b2d2      	uxtb	r2, r2
 80003a8:	701a      	strb	r2, [r3, #0]
 80003aa:	7803      	ldrb	r3, [r0, #0]
 80003ac:	221f      	movs	r2, #31
 80003ae:	0959      	lsrs	r1, r3, #5
 80003b0:	4013      	ands	r3, r2
 80003b2:	2201      	movs	r2, #1
 80003b4:	409a      	lsls	r2, r3
 80003b6:	1c13      	adds	r3, r2, #0
 80003b8:	4a01      	ldr	r2, [pc, #4]	; (80003c0 <NVIC_Init+0x64>)
 80003ba:	0089      	lsls	r1, r1, #2
 80003bc:	508b      	str	r3, [r1, r2]
 80003be:	e7db      	b.n	8000378 <NVIC_Init+0x1c>
 80003c0:	e000e100 	.word	0xe000e100
 80003c4:	e000ed00 	.word	0xe000ed00
 80003c8:	e000e400 	.word	0xe000e400

080003cc <NVIC_SetVectorTable>:
 80003cc:	4b02      	ldr	r3, [pc, #8]	; (80003d8 <NVIC_SetVectorTable+0xc>)
 80003ce:	4019      	ands	r1, r3
 80003d0:	4b02      	ldr	r3, [pc, #8]	; (80003dc <NVIC_SetVectorTable+0x10>)
 80003d2:	4308      	orrs	r0, r1
 80003d4:	6098      	str	r0, [r3, #8]
 80003d6:	4770      	bx	lr
 80003d8:	1fffff80 	.word	0x1fffff80
 80003dc:	e000ed00 	.word	0xe000ed00

080003e0 <NVIC_SystemLPConfig>:
 80003e0:	4b04      	ldr	r3, [pc, #16]	; (80003f4 <NVIC_SystemLPConfig+0x14>)
 80003e2:	691a      	ldr	r2, [r3, #16]
 80003e4:	2900      	cmp	r1, #0
 80003e6:	d102      	bne.n	80003ee <NVIC_SystemLPConfig+0xe>
 80003e8:	4382      	bics	r2, r0
 80003ea:	611a      	str	r2, [r3, #16]
 80003ec:	4770      	bx	lr
 80003ee:	4310      	orrs	r0, r2
 80003f0:	6118      	str	r0, [r3, #16]
 80003f2:	e7fb      	b.n	80003ec <NVIC_SystemLPConfig+0xc>
 80003f4:	e000ed00 	.word	0xe000ed00

080003f8 <SysTick_CLKSourceConfig>:
 80003f8:	4b05      	ldr	r3, [pc, #20]	; (8000410 <SysTick_CLKSourceConfig+0x18>)
 80003fa:	681a      	ldr	r2, [r3, #0]
 80003fc:	2804      	cmp	r0, #4
 80003fe:	d003      	beq.n	8000408 <SysTick_CLKSourceConfig+0x10>
 8000400:	2104      	movs	r1, #4
 8000402:	438a      	bics	r2, r1
 8000404:	601a      	str	r2, [r3, #0]
 8000406:	4770      	bx	lr
 8000408:	4310      	orrs	r0, r2
 800040a:	6018      	str	r0, [r3, #0]
 800040c:	e7fb      	b.n	8000406 <SysTick_CLKSourceConfig+0xe>
 800040e:	46c0      	nop			; (mov r8, r8)
 8000410:	e000e010 	.word	0xe000e010

08000414 <RCC_DeInit>:
 8000414:	4b0c      	ldr	r3, [pc, #48]	; (8000448 <RCC_DeInit+0x34>)
 8000416:	2280      	movs	r2, #128	; 0x80
 8000418:	6819      	ldr	r1, [r3, #0]
 800041a:	0052      	lsls	r2, r2, #1
 800041c:	430a      	orrs	r2, r1
 800041e:	601a      	str	r2, [r3, #0]
 8000420:	6899      	ldr	r1, [r3, #8]
 8000422:	4a0a      	ldr	r2, [pc, #40]	; (800044c <RCC_DeInit+0x38>)
 8000424:	400a      	ands	r2, r1
 8000426:	609a      	str	r2, [r3, #8]
 8000428:	6819      	ldr	r1, [r3, #0]
 800042a:	4a09      	ldr	r2, [pc, #36]	; (8000450 <RCC_DeInit+0x3c>)
 800042c:	400a      	ands	r2, r1
 800042e:	601a      	str	r2, [r3, #0]
 8000430:	6819      	ldr	r1, [r3, #0]
 8000432:	4a08      	ldr	r2, [pc, #32]	; (8000454 <RCC_DeInit+0x40>)
 8000434:	400a      	ands	r2, r1
 8000436:	601a      	str	r2, [r3, #0]
 8000438:	6899      	ldr	r1, [r3, #8]
 800043a:	4a07      	ldr	r2, [pc, #28]	; (8000458 <RCC_DeInit+0x44>)
 800043c:	400a      	ands	r2, r1
 800043e:	609a      	str	r2, [r3, #8]
 8000440:	2200      	movs	r2, #0
 8000442:	60da      	str	r2, [r3, #12]
 8000444:	4770      	bx	lr
 8000446:	46c0      	nop			; (mov r8, r8)
 8000448:	40023800 	.word	0x40023800
 800044c:	88ffc00c 	.word	0x88ffc00c
 8000450:	eefefffe 	.word	0xeefefffe
 8000454:	fffbffff 	.word	0xfffbffff
 8000458:	ff02ffff 	.word	0xff02ffff

0800045c <RCC_HSEConfig>:
 800045c:	4b02      	ldr	r3, [pc, #8]	; (8000468 <RCC_HSEConfig+0xc>)
 800045e:	2200      	movs	r2, #0
 8000460:	701a      	strb	r2, [r3, #0]
 8000462:	7018      	strb	r0, [r3, #0]
 8000464:	4770      	bx	lr
 8000466:	46c0      	nop			; (mov r8, r8)
 8000468:	40023802 	.word	0x40023802

0800046c <RCC_WaitForHSEStartUp>:
 800046c:	2300      	movs	r3, #0
 800046e:	b082      	sub	sp, #8
 8000470:	9301      	str	r3, [sp, #4]
 8000472:	2280      	movs	r2, #128	; 0x80
 8000474:	23a0      	movs	r3, #160	; 0xa0
 8000476:	490b      	ldr	r1, [pc, #44]	; (80004a4 <RCC_WaitForHSEStartUp+0x38>)
 8000478:	0292      	lsls	r2, r2, #10
 800047a:	00d8      	lsls	r0, r3, #3
 800047c:	680b      	ldr	r3, [r1, #0]
 800047e:	4213      	tst	r3, r2
 8000480:	d10b      	bne.n	800049a <RCC_WaitForHSEStartUp+0x2e>
 8000482:	9b01      	ldr	r3, [sp, #4]
 8000484:	3301      	adds	r3, #1
 8000486:	9301      	str	r3, [sp, #4]
 8000488:	9b01      	ldr	r3, [sp, #4]
 800048a:	4283      	cmp	r3, r0
 800048c:	d1f6      	bne.n	800047c <RCC_WaitForHSEStartUp+0x10>
 800048e:	4b05      	ldr	r3, [pc, #20]	; (80004a4 <RCC_WaitForHSEStartUp+0x38>)
 8000490:	6818      	ldr	r0, [r3, #0]
 8000492:	0380      	lsls	r0, r0, #14
 8000494:	0fc0      	lsrs	r0, r0, #31
 8000496:	b002      	add	sp, #8
 8000498:	4770      	bx	lr
 800049a:	9b01      	ldr	r3, [sp, #4]
 800049c:	3301      	adds	r3, #1
 800049e:	9301      	str	r3, [sp, #4]
 80004a0:	9b01      	ldr	r3, [sp, #4]
 80004a2:	e7f4      	b.n	800048e <RCC_WaitForHSEStartUp+0x22>
 80004a4:	40023800 	.word	0x40023800

080004a8 <RCC_AdjustMSICalibrationValue>:
 80004a8:	4b01      	ldr	r3, [pc, #4]	; (80004b0 <RCC_AdjustMSICalibrationValue+0x8>)
 80004aa:	7018      	strb	r0, [r3, #0]
 80004ac:	4770      	bx	lr
 80004ae:	46c0      	nop			; (mov r8, r8)
 80004b0:	40023807 	.word	0x40023807

080004b4 <RCC_MSIRangeConfig>:
 80004b4:	4b03      	ldr	r3, [pc, #12]	; (80004c4 <RCC_MSIRangeConfig+0x10>)
 80004b6:	4a04      	ldr	r2, [pc, #16]	; (80004c8 <RCC_MSIRangeConfig+0x14>)
 80004b8:	6859      	ldr	r1, [r3, #4]
 80004ba:	400a      	ands	r2, r1
 80004bc:	4310      	orrs	r0, r2
 80004be:	6058      	str	r0, [r3, #4]
 80004c0:	4770      	bx	lr
 80004c2:	46c0      	nop			; (mov r8, r8)
 80004c4:	40023800 	.word	0x40023800
 80004c8:	ffff1fff 	.word	0xffff1fff

080004cc <RCC_MSICmd>:
 80004cc:	4b01      	ldr	r3, [pc, #4]	; (80004d4 <RCC_MSICmd+0x8>)
 80004ce:	6018      	str	r0, [r3, #0]
 80004d0:	4770      	bx	lr
 80004d2:	46c0      	nop			; (mov r8, r8)
 80004d4:	42470020 	.word	0x42470020

080004d8 <RCC_AdjustHSICalibrationValue>:
 80004d8:	4b03      	ldr	r3, [pc, #12]	; (80004e8 <RCC_AdjustHSICalibrationValue+0x10>)
 80004da:	4a04      	ldr	r2, [pc, #16]	; (80004ec <RCC_AdjustHSICalibrationValue+0x14>)
 80004dc:	6859      	ldr	r1, [r3, #4]
 80004de:	0200      	lsls	r0, r0, #8
 80004e0:	400a      	ands	r2, r1
 80004e2:	4310      	orrs	r0, r2
 80004e4:	6058      	str	r0, [r3, #4]
 80004e6:	4770      	bx	lr
 80004e8:	40023800 	.word	0x40023800
 80004ec:	ffffe0ff 	.word	0xffffe0ff

080004f0 <RCC_HSICmd>:
 80004f0:	4b01      	ldr	r3, [pc, #4]	; (80004f8 <RCC_HSICmd+0x8>)
 80004f2:	6018      	str	r0, [r3, #0]
 80004f4:	4770      	bx	lr
 80004f6:	46c0      	nop			; (mov r8, r8)
 80004f8:	42470000 	.word	0x42470000

080004fc <RCC_LSEConfig>:
 80004fc:	4b02      	ldr	r3, [pc, #8]	; (8000508 <RCC_LSEConfig+0xc>)
 80004fe:	2200      	movs	r2, #0
 8000500:	701a      	strb	r2, [r3, #0]
 8000502:	7018      	strb	r0, [r3, #0]
 8000504:	4770      	bx	lr
 8000506:	46c0      	nop			; (mov r8, r8)
 8000508:	40023835 	.word	0x40023835

0800050c <RCC_LSICmd>:
 800050c:	4b01      	ldr	r3, [pc, #4]	; (8000514 <RCC_LSICmd+0x8>)
 800050e:	6018      	str	r0, [r3, #0]
 8000510:	4770      	bx	lr
 8000512:	46c0      	nop			; (mov r8, r8)
 8000514:	42470680 	.word	0x42470680

08000518 <RCC_PLLConfig>:
 8000518:	4310      	orrs	r0, r2
 800051a:	4b02      	ldr	r3, [pc, #8]	; (8000524 <RCC_PLLConfig+0xc>)
 800051c:	4301      	orrs	r1, r0
 800051e:	7019      	strb	r1, [r3, #0]
 8000520:	4770      	bx	lr
 8000522:	46c0      	nop			; (mov r8, r8)
 8000524:	4002380a 	.word	0x4002380a

08000528 <RCC_PLLCmd>:
 8000528:	4b01      	ldr	r3, [pc, #4]	; (8000530 <RCC_PLLCmd+0x8>)
 800052a:	6018      	str	r0, [r3, #0]
 800052c:	4770      	bx	lr
 800052e:	46c0      	nop			; (mov r8, r8)
 8000530:	42470060 	.word	0x42470060

08000534 <RCC_ClockSecuritySystemCmd>:
 8000534:	4b01      	ldr	r3, [pc, #4]	; (800053c <RCC_ClockSecuritySystemCmd+0x8>)
 8000536:	6018      	str	r0, [r3, #0]
 8000538:	4770      	bx	lr
 800053a:	46c0      	nop			; (mov r8, r8)
 800053c:	42470070 	.word	0x42470070

08000540 <RCC_LSEClockSecuritySystemCmd>:
 8000540:	4b01      	ldr	r3, [pc, #4]	; (8000548 <RCC_LSEClockSecuritySystemCmd+0x8>)
 8000542:	6018      	str	r0, [r3, #0]
 8000544:	4770      	bx	lr
 8000546:	46c0      	nop			; (mov r8, r8)
 8000548:	424706ac 	.word	0x424706ac

0800054c <RCC_MCOConfig>:
 800054c:	4b01      	ldr	r3, [pc, #4]	; (8000554 <RCC_MCOConfig+0x8>)
 800054e:	4308      	orrs	r0, r1
 8000550:	7018      	strb	r0, [r3, #0]
 8000552:	4770      	bx	lr
 8000554:	4002380b 	.word	0x4002380b

08000558 <RCC_SYSCLKConfig>:
 8000558:	4b03      	ldr	r3, [pc, #12]	; (8000568 <RCC_SYSCLKConfig+0x10>)
 800055a:	2103      	movs	r1, #3
 800055c:	689a      	ldr	r2, [r3, #8]
 800055e:	438a      	bics	r2, r1
 8000560:	4310      	orrs	r0, r2
 8000562:	6098      	str	r0, [r3, #8]
 8000564:	4770      	bx	lr
 8000566:	46c0      	nop			; (mov r8, r8)
 8000568:	40023800 	.word	0x40023800

0800056c <RCC_GetSYSCLKSource>:
 800056c:	4b02      	ldr	r3, [pc, #8]	; (8000578 <RCC_GetSYSCLKSource+0xc>)
 800056e:	200c      	movs	r0, #12
 8000570:	689b      	ldr	r3, [r3, #8]
 8000572:	4018      	ands	r0, r3
 8000574:	4770      	bx	lr
 8000576:	46c0      	nop			; (mov r8, r8)
 8000578:	40023800 	.word	0x40023800

0800057c <RCC_HCLKConfig>:
 800057c:	4b03      	ldr	r3, [pc, #12]	; (800058c <RCC_HCLKConfig+0x10>)
 800057e:	21f0      	movs	r1, #240	; 0xf0
 8000580:	689a      	ldr	r2, [r3, #8]
 8000582:	438a      	bics	r2, r1
 8000584:	4310      	orrs	r0, r2
 8000586:	6098      	str	r0, [r3, #8]
 8000588:	4770      	bx	lr
 800058a:	46c0      	nop			; (mov r8, r8)
 800058c:	40023800 	.word	0x40023800

08000590 <RCC_PCLK1Config>:
 8000590:	4b03      	ldr	r3, [pc, #12]	; (80005a0 <RCC_PCLK1Config+0x10>)
 8000592:	4a04      	ldr	r2, [pc, #16]	; (80005a4 <RCC_PCLK1Config+0x14>)
 8000594:	6899      	ldr	r1, [r3, #8]
 8000596:	400a      	ands	r2, r1
 8000598:	4310      	orrs	r0, r2
 800059a:	6098      	str	r0, [r3, #8]
 800059c:	4770      	bx	lr
 800059e:	46c0      	nop			; (mov r8, r8)
 80005a0:	40023800 	.word	0x40023800
 80005a4:	fffff8ff 	.word	0xfffff8ff

080005a8 <RCC_PCLK2Config>:
 80005a8:	4b03      	ldr	r3, [pc, #12]	; (80005b8 <RCC_PCLK2Config+0x10>)
 80005aa:	4a04      	ldr	r2, [pc, #16]	; (80005bc <RCC_PCLK2Config+0x14>)
 80005ac:	6899      	ldr	r1, [r3, #8]
 80005ae:	00c0      	lsls	r0, r0, #3
 80005b0:	400a      	ands	r2, r1
 80005b2:	4310      	orrs	r0, r2
 80005b4:	6098      	str	r0, [r3, #8]
 80005b6:	4770      	bx	lr
 80005b8:	40023800 	.word	0x40023800
 80005bc:	ffffc7ff 	.word	0xffffc7ff

080005c0 <RCC_GetClocksFreq>:
 80005c0:	4a29      	ldr	r2, [pc, #164]	; (8000668 <RCC_GetClocksFreq+0xa8>)
 80005c2:	b538      	push	{r3, r4, r5, lr}
 80005c4:	6893      	ldr	r3, [r2, #8]
 80005c6:	210c      	movs	r1, #12
 80005c8:	1c04      	adds	r4, r0, #0
 80005ca:	400b      	ands	r3, r1
 80005cc:	2b04      	cmp	r3, #4
 80005ce:	d041      	beq.n	8000654 <RCC_GetClocksFreq+0x94>
 80005d0:	d931      	bls.n	8000636 <RCC_GetClocksFreq+0x76>
 80005d2:	2b08      	cmp	r3, #8
 80005d4:	d014      	beq.n	8000600 <RCC_GetClocksFreq+0x40>
 80005d6:	2b0c      	cmp	r3, #12
 80005d8:	d139      	bne.n	800064e <RCC_GetClocksFreq+0x8e>
 80005da:	6893      	ldr	r3, [r2, #8]
 80005dc:	4d23      	ldr	r5, [pc, #140]	; (800066c <RCC_GetClocksFreq+0xac>)
 80005de:	6891      	ldr	r1, [r2, #8]
 80005e0:	029b      	lsls	r3, r3, #10
 80005e2:	0f1b      	lsrs	r3, r3, #28
 80005e4:	5ceb      	ldrb	r3, [r5, r3]
 80005e6:	0209      	lsls	r1, r1, #8
 80005e8:	6892      	ldr	r2, [r2, #8]
 80005ea:	0f89      	lsrs	r1, r1, #30
 80005ec:	b2db      	uxtb	r3, r3
 80005ee:	3101      	adds	r1, #1
 80005f0:	03d0      	lsls	r0, r2, #15
 80005f2:	d433      	bmi.n	800065c <RCC_GetClocksFreq+0x9c>
 80005f4:	481e      	ldr	r0, [pc, #120]	; (8000670 <RCC_GetClocksFreq+0xb0>)
 80005f6:	4358      	muls	r0, r3
 80005f8:	f000 febe 	bl	8001378 <__aeabi_uidiv>
 80005fc:	6020      	str	r0, [r4, #0]
 80005fe:	e002      	b.n	8000606 <RCC_GetClocksFreq+0x46>
 8000600:	481c      	ldr	r0, [pc, #112]	; (8000674 <RCC_GetClocksFreq+0xb4>)
 8000602:	4d1a      	ldr	r5, [pc, #104]	; (800066c <RCC_GetClocksFreq+0xac>)
 8000604:	6020      	str	r0, [r4, #0]
 8000606:	4b18      	ldr	r3, [pc, #96]	; (8000668 <RCC_GetClocksFreq+0xa8>)
 8000608:	689a      	ldr	r2, [r3, #8]
 800060a:	0612      	lsls	r2, r2, #24
 800060c:	0f12      	lsrs	r2, r2, #28
 800060e:	18aa      	adds	r2, r5, r2
 8000610:	7b12      	ldrb	r2, [r2, #12]
 8000612:	40d0      	lsrs	r0, r2
 8000614:	6060      	str	r0, [r4, #4]
 8000616:	689a      	ldr	r2, [r3, #8]
 8000618:	1c01      	adds	r1, r0, #0
 800061a:	0552      	lsls	r2, r2, #21
 800061c:	0f52      	lsrs	r2, r2, #29
 800061e:	18aa      	adds	r2, r5, r2
 8000620:	7b12      	ldrb	r2, [r2, #12]
 8000622:	40d1      	lsrs	r1, r2
 8000624:	60a1      	str	r1, [r4, #8]
 8000626:	689b      	ldr	r3, [r3, #8]
 8000628:	049b      	lsls	r3, r3, #18
 800062a:	0f5b      	lsrs	r3, r3, #29
 800062c:	18ed      	adds	r5, r5, r3
 800062e:	7b2b      	ldrb	r3, [r5, #12]
 8000630:	40d8      	lsrs	r0, r3
 8000632:	60e0      	str	r0, [r4, #12]
 8000634:	bd38      	pop	{r3, r4, r5, pc}
 8000636:	2b00      	cmp	r3, #0
 8000638:	d109      	bne.n	800064e <RCC_GetClocksFreq+0x8e>
 800063a:	6853      	ldr	r3, [r2, #4]
 800063c:	041b      	lsls	r3, r3, #16
 800063e:	0f5b      	lsrs	r3, r3, #29
 8000640:	2080      	movs	r0, #128	; 0x80
 8000642:	3301      	adds	r3, #1
 8000644:	0200      	lsls	r0, r0, #8
 8000646:	4098      	lsls	r0, r3
 8000648:	6020      	str	r0, [r4, #0]
 800064a:	4d08      	ldr	r5, [pc, #32]	; (800066c <RCC_GetClocksFreq+0xac>)
 800064c:	e7db      	b.n	8000606 <RCC_GetClocksFreq+0x46>
 800064e:	4b06      	ldr	r3, [pc, #24]	; (8000668 <RCC_GetClocksFreq+0xa8>)
 8000650:	685b      	ldr	r3, [r3, #4]
 8000652:	e7f3      	b.n	800063c <RCC_GetClocksFreq+0x7c>
 8000654:	4806      	ldr	r0, [pc, #24]	; (8000670 <RCC_GetClocksFreq+0xb0>)
 8000656:	4d05      	ldr	r5, [pc, #20]	; (800066c <RCC_GetClocksFreq+0xac>)
 8000658:	6020      	str	r0, [r4, #0]
 800065a:	e7d4      	b.n	8000606 <RCC_GetClocksFreq+0x46>
 800065c:	4805      	ldr	r0, [pc, #20]	; (8000674 <RCC_GetClocksFreq+0xb4>)
 800065e:	4358      	muls	r0, r3
 8000660:	f000 fe8a 	bl	8001378 <__aeabi_uidiv>
 8000664:	6020      	str	r0, [r4, #0]
 8000666:	e7ce      	b.n	8000606 <RCC_GetClocksFreq+0x46>
 8000668:	40023800 	.word	0x40023800
 800066c:	20000000 	.word	0x20000000
 8000670:	00f42400 	.word	0x00f42400
 8000674:	007a1200 	.word	0x007a1200

08000678 <RCC_RTCCLKConfig>:
 8000678:	23c0      	movs	r3, #192	; 0xc0
 800067a:	029b      	lsls	r3, r3, #10
 800067c:	1c02      	adds	r2, r0, #0
 800067e:	b510      	push	{r4, lr}
 8000680:	401a      	ands	r2, r3
 8000682:	429a      	cmp	r2, r3
 8000684:	d108      	bne.n	8000698 <RCC_RTCCLKConfig+0x20>
 8000686:	4b09      	ldr	r3, [pc, #36]	; (80006ac <RCC_RTCCLKConfig+0x34>)
 8000688:	4909      	ldr	r1, [pc, #36]	; (80006b0 <RCC_RTCCLKConfig+0x38>)
 800068a:	681c      	ldr	r4, [r3, #0]
 800068c:	4021      	ands	r1, r4
 800068e:	24c0      	movs	r4, #192	; 0xc0
 8000690:	05e4      	lsls	r4, r4, #23
 8000692:	4020      	ands	r0, r4
 8000694:	4308      	orrs	r0, r1
 8000696:	6018      	str	r0, [r3, #0]
 8000698:	4b04      	ldr	r3, [pc, #16]	; (80006ac <RCC_RTCCLKConfig+0x34>)
 800069a:	4906      	ldr	r1, [pc, #24]	; (80006b4 <RCC_RTCCLKConfig+0x3c>)
 800069c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800069e:	4001      	ands	r1, r0
 80006a0:	6359      	str	r1, [r3, #52]	; 0x34
 80006a2:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80006a4:	430a      	orrs	r2, r1
 80006a6:	635a      	str	r2, [r3, #52]	; 0x34
 80006a8:	bd10      	pop	{r4, pc}
 80006aa:	46c0      	nop			; (mov r8, r8)
 80006ac:	40023800 	.word	0x40023800
 80006b0:	9fffffff 	.word	0x9fffffff
 80006b4:	fffcffff 	.word	0xfffcffff

080006b8 <RCC_RTCCLKCmd>:
 80006b8:	4b01      	ldr	r3, [pc, #4]	; (80006c0 <RCC_RTCCLKCmd+0x8>)
 80006ba:	6018      	str	r0, [r3, #0]
 80006bc:	4770      	bx	lr
 80006be:	46c0      	nop			; (mov r8, r8)
 80006c0:	424706d8 	.word	0x424706d8

080006c4 <RCC_RTCResetCmd>:
 80006c4:	4b01      	ldr	r3, [pc, #4]	; (80006cc <RCC_RTCResetCmd+0x8>)
 80006c6:	6018      	str	r0, [r3, #0]
 80006c8:	4770      	bx	lr
 80006ca:	46c0      	nop			; (mov r8, r8)
 80006cc:	424706dc 	.word	0x424706dc

080006d0 <RCC_AHBPeriphClockCmd>:
 80006d0:	4b04      	ldr	r3, [pc, #16]	; (80006e4 <RCC_AHBPeriphClockCmd+0x14>)
 80006d2:	69da      	ldr	r2, [r3, #28]
 80006d4:	2900      	cmp	r1, #0
 80006d6:	d102      	bne.n	80006de <RCC_AHBPeriphClockCmd+0xe>
 80006d8:	4382      	bics	r2, r0
 80006da:	61da      	str	r2, [r3, #28]
 80006dc:	4770      	bx	lr
 80006de:	4310      	orrs	r0, r2
 80006e0:	61d8      	str	r0, [r3, #28]
 80006e2:	e7fb      	b.n	80006dc <RCC_AHBPeriphClockCmd+0xc>
 80006e4:	40023800 	.word	0x40023800

080006e8 <RCC_APB2PeriphClockCmd>:
 80006e8:	4b04      	ldr	r3, [pc, #16]	; (80006fc <RCC_APB2PeriphClockCmd+0x14>)
 80006ea:	6a1a      	ldr	r2, [r3, #32]
 80006ec:	2900      	cmp	r1, #0
 80006ee:	d102      	bne.n	80006f6 <RCC_APB2PeriphClockCmd+0xe>
 80006f0:	4382      	bics	r2, r0
 80006f2:	621a      	str	r2, [r3, #32]
 80006f4:	4770      	bx	lr
 80006f6:	4310      	orrs	r0, r2
 80006f8:	6218      	str	r0, [r3, #32]
 80006fa:	e7fb      	b.n	80006f4 <RCC_APB2PeriphClockCmd+0xc>
 80006fc:	40023800 	.word	0x40023800

08000700 <RCC_APB1PeriphClockCmd>:
 8000700:	4b04      	ldr	r3, [pc, #16]	; (8000714 <RCC_APB1PeriphClockCmd+0x14>)
 8000702:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000704:	2900      	cmp	r1, #0
 8000706:	d102      	bne.n	800070e <RCC_APB1PeriphClockCmd+0xe>
 8000708:	4382      	bics	r2, r0
 800070a:	625a      	str	r2, [r3, #36]	; 0x24
 800070c:	4770      	bx	lr
 800070e:	4310      	orrs	r0, r2
 8000710:	6258      	str	r0, [r3, #36]	; 0x24
 8000712:	e7fb      	b.n	800070c <RCC_APB1PeriphClockCmd+0xc>
 8000714:	40023800 	.word	0x40023800

08000718 <RCC_AHBPeriphResetCmd>:
 8000718:	4b04      	ldr	r3, [pc, #16]	; (800072c <RCC_AHBPeriphResetCmd+0x14>)
 800071a:	691a      	ldr	r2, [r3, #16]
 800071c:	2900      	cmp	r1, #0
 800071e:	d102      	bne.n	8000726 <RCC_AHBPeriphResetCmd+0xe>
 8000720:	4382      	bics	r2, r0
 8000722:	611a      	str	r2, [r3, #16]
 8000724:	4770      	bx	lr
 8000726:	4310      	orrs	r0, r2
 8000728:	6118      	str	r0, [r3, #16]
 800072a:	e7fb      	b.n	8000724 <RCC_AHBPeriphResetCmd+0xc>
 800072c:	40023800 	.word	0x40023800

08000730 <RCC_APB2PeriphResetCmd>:
 8000730:	4b04      	ldr	r3, [pc, #16]	; (8000744 <RCC_APB2PeriphResetCmd+0x14>)
 8000732:	695a      	ldr	r2, [r3, #20]
 8000734:	2900      	cmp	r1, #0
 8000736:	d102      	bne.n	800073e <RCC_APB2PeriphResetCmd+0xe>
 8000738:	4382      	bics	r2, r0
 800073a:	615a      	str	r2, [r3, #20]
 800073c:	4770      	bx	lr
 800073e:	4310      	orrs	r0, r2
 8000740:	6158      	str	r0, [r3, #20]
 8000742:	e7fb      	b.n	800073c <RCC_APB2PeriphResetCmd+0xc>
 8000744:	40023800 	.word	0x40023800

08000748 <RCC_APB1PeriphResetCmd>:
 8000748:	4b04      	ldr	r3, [pc, #16]	; (800075c <RCC_APB1PeriphResetCmd+0x14>)
 800074a:	699a      	ldr	r2, [r3, #24]
 800074c:	2900      	cmp	r1, #0
 800074e:	d102      	bne.n	8000756 <RCC_APB1PeriphResetCmd+0xe>
 8000750:	4382      	bics	r2, r0
 8000752:	619a      	str	r2, [r3, #24]
 8000754:	4770      	bx	lr
 8000756:	4310      	orrs	r0, r2
 8000758:	6198      	str	r0, [r3, #24]
 800075a:	e7fb      	b.n	8000754 <RCC_APB1PeriphResetCmd+0xc>
 800075c:	40023800 	.word	0x40023800

08000760 <RCC_AHBPeriphClockLPModeCmd>:
 8000760:	4b04      	ldr	r3, [pc, #16]	; (8000774 <RCC_AHBPeriphClockLPModeCmd+0x14>)
 8000762:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8000764:	2900      	cmp	r1, #0
 8000766:	d102      	bne.n	800076e <RCC_AHBPeriphClockLPModeCmd+0xe>
 8000768:	4382      	bics	r2, r0
 800076a:	629a      	str	r2, [r3, #40]	; 0x28
 800076c:	4770      	bx	lr
 800076e:	4310      	orrs	r0, r2
 8000770:	6298      	str	r0, [r3, #40]	; 0x28
 8000772:	e7fb      	b.n	800076c <RCC_AHBPeriphClockLPModeCmd+0xc>
 8000774:	40023800 	.word	0x40023800

08000778 <RCC_APB2PeriphClockLPModeCmd>:
 8000778:	4b04      	ldr	r3, [pc, #16]	; (800078c <RCC_APB2PeriphClockLPModeCmd+0x14>)
 800077a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800077c:	2900      	cmp	r1, #0
 800077e:	d102      	bne.n	8000786 <RCC_APB2PeriphClockLPModeCmd+0xe>
 8000780:	4382      	bics	r2, r0
 8000782:	62da      	str	r2, [r3, #44]	; 0x2c
 8000784:	4770      	bx	lr
 8000786:	4310      	orrs	r0, r2
 8000788:	62d8      	str	r0, [r3, #44]	; 0x2c
 800078a:	e7fb      	b.n	8000784 <RCC_APB2PeriphClockLPModeCmd+0xc>
 800078c:	40023800 	.word	0x40023800

08000790 <RCC_APB1PeriphClockLPModeCmd>:
 8000790:	4b04      	ldr	r3, [pc, #16]	; (80007a4 <RCC_APB1PeriphClockLPModeCmd+0x14>)
 8000792:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000794:	2900      	cmp	r1, #0
 8000796:	d102      	bne.n	800079e <RCC_APB1PeriphClockLPModeCmd+0xe>
 8000798:	4382      	bics	r2, r0
 800079a:	631a      	str	r2, [r3, #48]	; 0x30
 800079c:	4770      	bx	lr
 800079e:	4310      	orrs	r0, r2
 80007a0:	6318      	str	r0, [r3, #48]	; 0x30
 80007a2:	e7fb      	b.n	800079c <RCC_APB1PeriphClockLPModeCmd+0xc>
 80007a4:	40023800 	.word	0x40023800

080007a8 <RCC_ITConfig>:
 80007a8:	4b04      	ldr	r3, [pc, #16]	; (80007bc <RCC_ITConfig+0x14>)
 80007aa:	781a      	ldrb	r2, [r3, #0]
 80007ac:	2900      	cmp	r1, #0
 80007ae:	d102      	bne.n	80007b6 <RCC_ITConfig+0xe>
 80007b0:	4382      	bics	r2, r0
 80007b2:	701a      	strb	r2, [r3, #0]
 80007b4:	4770      	bx	lr
 80007b6:	4310      	orrs	r0, r2
 80007b8:	7018      	strb	r0, [r3, #0]
 80007ba:	e7fb      	b.n	80007b4 <RCC_ITConfig+0xc>
 80007bc:	4002380d 	.word	0x4002380d

080007c0 <RCC_GetFlagStatus>:
 80007c0:	0943      	lsrs	r3, r0, #5
 80007c2:	2b01      	cmp	r3, #1
 80007c4:	d008      	beq.n	80007d8 <RCC_GetFlagStatus+0x18>
 80007c6:	4b06      	ldr	r3, [pc, #24]	; (80007e0 <RCC_GetFlagStatus+0x20>)
 80007c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80007ca:	221f      	movs	r2, #31
 80007cc:	4010      	ands	r0, r2
 80007ce:	40c3      	lsrs	r3, r0
 80007d0:	1c18      	adds	r0, r3, #0
 80007d2:	2301      	movs	r3, #1
 80007d4:	4018      	ands	r0, r3
 80007d6:	4770      	bx	lr
 80007d8:	4b01      	ldr	r3, [pc, #4]	; (80007e0 <RCC_GetFlagStatus+0x20>)
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	e7f5      	b.n	80007ca <RCC_GetFlagStatus+0xa>
 80007de:	46c0      	nop			; (mov r8, r8)
 80007e0:	40023800 	.word	0x40023800

080007e4 <RCC_ClearFlag>:
 80007e4:	4b03      	ldr	r3, [pc, #12]	; (80007f4 <RCC_ClearFlag+0x10>)
 80007e6:	2280      	movs	r2, #128	; 0x80
 80007e8:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80007ea:	0452      	lsls	r2, r2, #17
 80007ec:	430a      	orrs	r2, r1
 80007ee:	635a      	str	r2, [r3, #52]	; 0x34
 80007f0:	4770      	bx	lr
 80007f2:	46c0      	nop			; (mov r8, r8)
 80007f4:	40023800 	.word	0x40023800

080007f8 <RCC_GetITStatus>:
 80007f8:	4b03      	ldr	r3, [pc, #12]	; (8000808 <RCC_GetITStatus+0x10>)
 80007fa:	68db      	ldr	r3, [r3, #12]
 80007fc:	4018      	ands	r0, r3
 80007fe:	1e43      	subs	r3, r0, #1
 8000800:	4198      	sbcs	r0, r3
 8000802:	b2c0      	uxtb	r0, r0
 8000804:	4770      	bx	lr
 8000806:	46c0      	nop			; (mov r8, r8)
 8000808:	40023800 	.word	0x40023800

0800080c <RCC_ClearITPendingBit>:
 800080c:	4b01      	ldr	r3, [pc, #4]	; (8000814 <RCC_ClearITPendingBit+0x8>)
 800080e:	7018      	strb	r0, [r3, #0]
 8000810:	4770      	bx	lr
 8000812:	46c0      	nop			; (mov r8, r8)
 8000814:	4002380e 	.word	0x4002380e

08000818 <TIM_DeInit>:
 8000818:	b508      	push	{r3, lr}
 800081a:	2380      	movs	r3, #128	; 0x80
 800081c:	05db      	lsls	r3, r3, #23
 800081e:	4298      	cmp	r0, r3
 8000820:	d021      	beq.n	8000866 <TIM_DeInit+0x4e>
 8000822:	4b35      	ldr	r3, [pc, #212]	; (80008f8 <TIM_DeInit+0xe0>)
 8000824:	4298      	cmp	r0, r3
 8000826:	d027      	beq.n	8000878 <TIM_DeInit+0x60>
 8000828:	4b34      	ldr	r3, [pc, #208]	; (80008fc <TIM_DeInit+0xe4>)
 800082a:	4298      	cmp	r0, r3
 800082c:	d02d      	beq.n	800088a <TIM_DeInit+0x72>
 800082e:	4b34      	ldr	r3, [pc, #208]	; (8000900 <TIM_DeInit+0xe8>)
 8000830:	4298      	cmp	r0, r3
 8000832:	d033      	beq.n	800089c <TIM_DeInit+0x84>
 8000834:	4b33      	ldr	r3, [pc, #204]	; (8000904 <TIM_DeInit+0xec>)
 8000836:	4298      	cmp	r0, r3
 8000838:	d039      	beq.n	80008ae <TIM_DeInit+0x96>
 800083a:	4b33      	ldr	r3, [pc, #204]	; (8000908 <TIM_DeInit+0xf0>)
 800083c:	4298      	cmp	r0, r3
 800083e:	d03f      	beq.n	80008c0 <TIM_DeInit+0xa8>
 8000840:	4b32      	ldr	r3, [pc, #200]	; (800090c <TIM_DeInit+0xf4>)
 8000842:	4298      	cmp	r0, r3
 8000844:	d045      	beq.n	80008d2 <TIM_DeInit+0xba>
 8000846:	4b32      	ldr	r3, [pc, #200]	; (8000910 <TIM_DeInit+0xf8>)
 8000848:	4298      	cmp	r0, r3
 800084a:	d04b      	beq.n	80008e4 <TIM_DeInit+0xcc>
 800084c:	4b31      	ldr	r3, [pc, #196]	; (8000914 <TIM_DeInit+0xfc>)
 800084e:	4298      	cmp	r0, r3
 8000850:	d000      	beq.n	8000854 <TIM_DeInit+0x3c>
 8000852:	bd08      	pop	{r3, pc}
 8000854:	2010      	movs	r0, #16
 8000856:	2101      	movs	r1, #1
 8000858:	f7ff ff6a 	bl	8000730 <RCC_APB2PeriphResetCmd>
 800085c:	2010      	movs	r0, #16
 800085e:	2100      	movs	r1, #0
 8000860:	f7ff ff66 	bl	8000730 <RCC_APB2PeriphResetCmd>
 8000864:	e7f5      	b.n	8000852 <TIM_DeInit+0x3a>
 8000866:	2001      	movs	r0, #1
 8000868:	2101      	movs	r1, #1
 800086a:	f7ff ff6d 	bl	8000748 <RCC_APB1PeriphResetCmd>
 800086e:	2001      	movs	r0, #1
 8000870:	2100      	movs	r1, #0
 8000872:	f7ff ff69 	bl	8000748 <RCC_APB1PeriphResetCmd>
 8000876:	e7ec      	b.n	8000852 <TIM_DeInit+0x3a>
 8000878:	2002      	movs	r0, #2
 800087a:	2101      	movs	r1, #1
 800087c:	f7ff ff64 	bl	8000748 <RCC_APB1PeriphResetCmd>
 8000880:	2002      	movs	r0, #2
 8000882:	2100      	movs	r1, #0
 8000884:	f7ff ff60 	bl	8000748 <RCC_APB1PeriphResetCmd>
 8000888:	e7e3      	b.n	8000852 <TIM_DeInit+0x3a>
 800088a:	2004      	movs	r0, #4
 800088c:	2101      	movs	r1, #1
 800088e:	f7ff ff5b 	bl	8000748 <RCC_APB1PeriphResetCmd>
 8000892:	2004      	movs	r0, #4
 8000894:	2100      	movs	r1, #0
 8000896:	f7ff ff57 	bl	8000748 <RCC_APB1PeriphResetCmd>
 800089a:	e7da      	b.n	8000852 <TIM_DeInit+0x3a>
 800089c:	2008      	movs	r0, #8
 800089e:	2101      	movs	r1, #1
 80008a0:	f7ff ff52 	bl	8000748 <RCC_APB1PeriphResetCmd>
 80008a4:	2008      	movs	r0, #8
 80008a6:	2100      	movs	r1, #0
 80008a8:	f7ff ff4e 	bl	8000748 <RCC_APB1PeriphResetCmd>
 80008ac:	e7d1      	b.n	8000852 <TIM_DeInit+0x3a>
 80008ae:	2010      	movs	r0, #16
 80008b0:	2101      	movs	r1, #1
 80008b2:	f7ff ff49 	bl	8000748 <RCC_APB1PeriphResetCmd>
 80008b6:	2010      	movs	r0, #16
 80008b8:	2100      	movs	r1, #0
 80008ba:	f7ff ff45 	bl	8000748 <RCC_APB1PeriphResetCmd>
 80008be:	e7c8      	b.n	8000852 <TIM_DeInit+0x3a>
 80008c0:	2020      	movs	r0, #32
 80008c2:	2101      	movs	r1, #1
 80008c4:	f7ff ff40 	bl	8000748 <RCC_APB1PeriphResetCmd>
 80008c8:	2020      	movs	r0, #32
 80008ca:	2100      	movs	r1, #0
 80008cc:	f7ff ff3c 	bl	8000748 <RCC_APB1PeriphResetCmd>
 80008d0:	e7bf      	b.n	8000852 <TIM_DeInit+0x3a>
 80008d2:	2004      	movs	r0, #4
 80008d4:	2101      	movs	r1, #1
 80008d6:	f7ff ff2b 	bl	8000730 <RCC_APB2PeriphResetCmd>
 80008da:	2004      	movs	r0, #4
 80008dc:	2100      	movs	r1, #0
 80008de:	f7ff ff27 	bl	8000730 <RCC_APB2PeriphResetCmd>
 80008e2:	e7b6      	b.n	8000852 <TIM_DeInit+0x3a>
 80008e4:	2008      	movs	r0, #8
 80008e6:	2101      	movs	r1, #1
 80008e8:	f7ff ff22 	bl	8000730 <RCC_APB2PeriphResetCmd>
 80008ec:	2008      	movs	r0, #8
 80008ee:	2100      	movs	r1, #0
 80008f0:	f7ff ff1e 	bl	8000730 <RCC_APB2PeriphResetCmd>
 80008f4:	e7ad      	b.n	8000852 <TIM_DeInit+0x3a>
 80008f6:	46c0      	nop			; (mov r8, r8)
 80008f8:	40000400 	.word	0x40000400
 80008fc:	40000800 	.word	0x40000800
 8000900:	40000c00 	.word	0x40000c00
 8000904:	40001000 	.word	0x40001000
 8000908:	40001400 	.word	0x40001400
 800090c:	40010800 	.word	0x40010800
 8000910:	40010c00 	.word	0x40010c00
 8000914:	40011000 	.word	0x40011000

08000918 <TIM_TimeBaseInit>:
 8000918:	6803      	ldr	r3, [r0, #0]
 800091a:	2280      	movs	r2, #128	; 0x80
 800091c:	b510      	push	{r4, lr}
 800091e:	b29b      	uxth	r3, r3
 8000920:	05d2      	lsls	r2, r2, #23
 8000922:	4290      	cmp	r0, r2
 8000924:	d01a      	beq.n	800095c <TIM_TimeBaseInit+0x44>
 8000926:	4a10      	ldr	r2, [pc, #64]	; (8000968 <TIM_TimeBaseInit+0x50>)
 8000928:	4290      	cmp	r0, r2
 800092a:	d017      	beq.n	800095c <TIM_TimeBaseInit+0x44>
 800092c:	4a0f      	ldr	r2, [pc, #60]	; (800096c <TIM_TimeBaseInit+0x54>)
 800092e:	4290      	cmp	r0, r2
 8000930:	d014      	beq.n	800095c <TIM_TimeBaseInit+0x44>
 8000932:	4a0f      	ldr	r2, [pc, #60]	; (8000970 <TIM_TimeBaseInit+0x58>)
 8000934:	4290      	cmp	r0, r2
 8000936:	d011      	beq.n	800095c <TIM_TimeBaseInit+0x44>
 8000938:	4a0e      	ldr	r2, [pc, #56]	; (8000974 <TIM_TimeBaseInit+0x5c>)
 800093a:	4290      	cmp	r0, r2
 800093c:	d006      	beq.n	800094c <TIM_TimeBaseInit+0x34>
 800093e:	4a0e      	ldr	r2, [pc, #56]	; (8000978 <TIM_TimeBaseInit+0x60>)
 8000940:	4290      	cmp	r0, r2
 8000942:	d003      	beq.n	800094c <TIM_TimeBaseInit+0x34>
 8000944:	4c0d      	ldr	r4, [pc, #52]	; (800097c <TIM_TimeBaseInit+0x64>)
 8000946:	890a      	ldrh	r2, [r1, #8]
 8000948:	4023      	ands	r3, r4
 800094a:	4313      	orrs	r3, r2
 800094c:	8003      	strh	r3, [r0, #0]
 800094e:	684b      	ldr	r3, [r1, #4]
 8000950:	62c3      	str	r3, [r0, #44]	; 0x2c
 8000952:	880b      	ldrh	r3, [r1, #0]
 8000954:	8503      	strh	r3, [r0, #40]	; 0x28
 8000956:	2301      	movs	r3, #1
 8000958:	8283      	strh	r3, [r0, #20]
 800095a:	bd10      	pop	{r4, pc}
 800095c:	2270      	movs	r2, #112	; 0x70
 800095e:	4393      	bics	r3, r2
 8000960:	884a      	ldrh	r2, [r1, #2]
 8000962:	4313      	orrs	r3, r2
 8000964:	e7e8      	b.n	8000938 <TIM_TimeBaseInit+0x20>
 8000966:	46c0      	nop			; (mov r8, r8)
 8000968:	40000400 	.word	0x40000400
 800096c:	40000800 	.word	0x40000800
 8000970:	40000c00 	.word	0x40000c00
 8000974:	40001000 	.word	0x40001000
 8000978:	40001400 	.word	0x40001400
 800097c:	fffffcff 	.word	0xfffffcff

08000980 <TIM_TimeBaseStructInit>:
 8000980:	2301      	movs	r3, #1
 8000982:	425b      	negs	r3, r3
 8000984:	6043      	str	r3, [r0, #4]
 8000986:	2300      	movs	r3, #0
 8000988:	8003      	strh	r3, [r0, #0]
 800098a:	8103      	strh	r3, [r0, #8]
 800098c:	8043      	strh	r3, [r0, #2]
 800098e:	4770      	bx	lr

08000990 <TIM_PrescalerConfig>:
 8000990:	8501      	strh	r1, [r0, #40]	; 0x28
 8000992:	8282      	strh	r2, [r0, #20]
 8000994:	4770      	bx	lr
 8000996:	46c0      	nop			; (mov r8, r8)

08000998 <TIM_CounterModeConfig>:
 8000998:	6802      	ldr	r2, [r0, #0]
 800099a:	4b02      	ldr	r3, [pc, #8]	; (80009a4 <TIM_CounterModeConfig+0xc>)
 800099c:	4013      	ands	r3, r2
 800099e:	4319      	orrs	r1, r3
 80009a0:	8001      	strh	r1, [r0, #0]
 80009a2:	4770      	bx	lr
 80009a4:	0000ff8f 	.word	0x0000ff8f

080009a8 <TIM_SetCounter>:
 80009a8:	6241      	str	r1, [r0, #36]	; 0x24
 80009aa:	4770      	bx	lr

080009ac <TIM_SetAutoreload>:
 80009ac:	62c1      	str	r1, [r0, #44]	; 0x2c
 80009ae:	4770      	bx	lr

080009b0 <TIM_GetCounter>:
 80009b0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80009b2:	4770      	bx	lr

080009b4 <TIM_GetPrescaler>:
 80009b4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80009b6:	b280      	uxth	r0, r0
 80009b8:	4770      	bx	lr
 80009ba:	46c0      	nop			; (mov r8, r8)

080009bc <TIM_UpdateDisableConfig>:
 80009bc:	2900      	cmp	r1, #0
 80009be:	d104      	bne.n	80009ca <TIM_UpdateDisableConfig+0xe>
 80009c0:	6802      	ldr	r2, [r0, #0]
 80009c2:	4b05      	ldr	r3, [pc, #20]	; (80009d8 <TIM_UpdateDisableConfig+0x1c>)
 80009c4:	4013      	ands	r3, r2
 80009c6:	8003      	strh	r3, [r0, #0]
 80009c8:	4770      	bx	lr
 80009ca:	6803      	ldr	r3, [r0, #0]
 80009cc:	2202      	movs	r2, #2
 80009ce:	b29b      	uxth	r3, r3
 80009d0:	4313      	orrs	r3, r2
 80009d2:	8003      	strh	r3, [r0, #0]
 80009d4:	e7f8      	b.n	80009c8 <TIM_UpdateDisableConfig+0xc>
 80009d6:	46c0      	nop			; (mov r8, r8)
 80009d8:	0000fffd 	.word	0x0000fffd

080009dc <TIM_UpdateRequestConfig>:
 80009dc:	2900      	cmp	r1, #0
 80009de:	d104      	bne.n	80009ea <TIM_UpdateRequestConfig+0xe>
 80009e0:	6802      	ldr	r2, [r0, #0]
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <TIM_UpdateRequestConfig+0x1c>)
 80009e4:	4013      	ands	r3, r2
 80009e6:	8003      	strh	r3, [r0, #0]
 80009e8:	4770      	bx	lr
 80009ea:	6803      	ldr	r3, [r0, #0]
 80009ec:	2204      	movs	r2, #4
 80009ee:	b29b      	uxth	r3, r3
 80009f0:	4313      	orrs	r3, r2
 80009f2:	8003      	strh	r3, [r0, #0]
 80009f4:	e7f8      	b.n	80009e8 <TIM_UpdateRequestConfig+0xc>
 80009f6:	46c0      	nop			; (mov r8, r8)
 80009f8:	0000fffb 	.word	0x0000fffb

080009fc <TIM_ARRPreloadConfig>:
 80009fc:	2900      	cmp	r1, #0
 80009fe:	d104      	bne.n	8000a0a <TIM_ARRPreloadConfig+0xe>
 8000a00:	6802      	ldr	r2, [r0, #0]
 8000a02:	4b05      	ldr	r3, [pc, #20]	; (8000a18 <TIM_ARRPreloadConfig+0x1c>)
 8000a04:	4013      	ands	r3, r2
 8000a06:	8003      	strh	r3, [r0, #0]
 8000a08:	4770      	bx	lr
 8000a0a:	6803      	ldr	r3, [r0, #0]
 8000a0c:	2280      	movs	r2, #128	; 0x80
 8000a0e:	b29b      	uxth	r3, r3
 8000a10:	4313      	orrs	r3, r2
 8000a12:	8003      	strh	r3, [r0, #0]
 8000a14:	e7f8      	b.n	8000a08 <TIM_ARRPreloadConfig+0xc>
 8000a16:	46c0      	nop			; (mov r8, r8)
 8000a18:	0000ff7f 	.word	0x0000ff7f

08000a1c <TIM_SelectOnePulseMode>:
 8000a1c:	6802      	ldr	r2, [r0, #0]
 8000a1e:	4b04      	ldr	r3, [pc, #16]	; (8000a30 <TIM_SelectOnePulseMode+0x14>)
 8000a20:	4013      	ands	r3, r2
 8000a22:	8003      	strh	r3, [r0, #0]
 8000a24:	6803      	ldr	r3, [r0, #0]
 8000a26:	b29b      	uxth	r3, r3
 8000a28:	4319      	orrs	r1, r3
 8000a2a:	8001      	strh	r1, [r0, #0]
 8000a2c:	4770      	bx	lr
 8000a2e:	46c0      	nop			; (mov r8, r8)
 8000a30:	0000fff7 	.word	0x0000fff7

08000a34 <TIM_SetClockDivision>:
 8000a34:	6802      	ldr	r2, [r0, #0]
 8000a36:	4b04      	ldr	r3, [pc, #16]	; (8000a48 <TIM_SetClockDivision+0x14>)
 8000a38:	4013      	ands	r3, r2
 8000a3a:	8003      	strh	r3, [r0, #0]
 8000a3c:	6803      	ldr	r3, [r0, #0]
 8000a3e:	b29b      	uxth	r3, r3
 8000a40:	4319      	orrs	r1, r3
 8000a42:	8001      	strh	r1, [r0, #0]
 8000a44:	4770      	bx	lr
 8000a46:	46c0      	nop			; (mov r8, r8)
 8000a48:	0000fcff 	.word	0x0000fcff

08000a4c <TIM_Cmd>:
 8000a4c:	2900      	cmp	r1, #0
 8000a4e:	d104      	bne.n	8000a5a <TIM_Cmd+0xe>
 8000a50:	6802      	ldr	r2, [r0, #0]
 8000a52:	4b05      	ldr	r3, [pc, #20]	; (8000a68 <TIM_Cmd+0x1c>)
 8000a54:	4013      	ands	r3, r2
 8000a56:	8003      	strh	r3, [r0, #0]
 8000a58:	4770      	bx	lr
 8000a5a:	6803      	ldr	r3, [r0, #0]
 8000a5c:	2201      	movs	r2, #1
 8000a5e:	b29b      	uxth	r3, r3
 8000a60:	4313      	orrs	r3, r2
 8000a62:	8003      	strh	r3, [r0, #0]
 8000a64:	e7f8      	b.n	8000a58 <TIM_Cmd+0xc>
 8000a66:	46c0      	nop			; (mov r8, r8)
 8000a68:	0000fffe 	.word	0x0000fffe

08000a6c <TIM_OC1Init>:
 8000a6c:	6a02      	ldr	r2, [r0, #32]
 8000a6e:	4b0a      	ldr	r3, [pc, #40]	; (8000a98 <TIM_OC1Init+0x2c>)
 8000a70:	b530      	push	{r4, r5, lr}
 8000a72:	4013      	ands	r3, r2
 8000a74:	8403      	strh	r3, [r0, #32]
 8000a76:	6a04      	ldr	r4, [r0, #32]
 8000a78:	4b08      	ldr	r3, [pc, #32]	; (8000a9c <TIM_OC1Init+0x30>)
 8000a7a:	6982      	ldr	r2, [r0, #24]
 8000a7c:	884d      	ldrh	r5, [r1, #2]
 8000a7e:	401a      	ands	r2, r3
 8000a80:	880b      	ldrh	r3, [r1, #0]
 8000a82:	431a      	orrs	r2, r3
 8000a84:	4b06      	ldr	r3, [pc, #24]	; (8000aa0 <TIM_OC1Init+0x34>)
 8000a86:	401c      	ands	r4, r3
 8000a88:	890b      	ldrh	r3, [r1, #8]
 8000a8a:	6849      	ldr	r1, [r1, #4]
 8000a8c:	432b      	orrs	r3, r5
 8000a8e:	4323      	orrs	r3, r4
 8000a90:	6341      	str	r1, [r0, #52]	; 0x34
 8000a92:	8302      	strh	r2, [r0, #24]
 8000a94:	8403      	strh	r3, [r0, #32]
 8000a96:	bd30      	pop	{r4, r5, pc}
 8000a98:	0000fffe 	.word	0x0000fffe
 8000a9c:	0000ff8c 	.word	0x0000ff8c
 8000aa0:	0000fffd 	.word	0x0000fffd

08000aa4 <TIM_OC2Init>:
 8000aa4:	6a02      	ldr	r2, [r0, #32]
 8000aa6:	4b0d      	ldr	r3, [pc, #52]	; (8000adc <TIM_OC2Init+0x38>)
 8000aa8:	b510      	push	{r4, lr}
 8000aaa:	4013      	ands	r3, r2
 8000aac:	8403      	strh	r3, [r0, #32]
 8000aae:	6a04      	ldr	r4, [r0, #32]
 8000ab0:	4b0b      	ldr	r3, [pc, #44]	; (8000ae0 <TIM_OC2Init+0x3c>)
 8000ab2:	6982      	ldr	r2, [r0, #24]
 8000ab4:	401a      	ands	r2, r3
 8000ab6:	880b      	ldrh	r3, [r1, #0]
 8000ab8:	021b      	lsls	r3, r3, #8
 8000aba:	431a      	orrs	r2, r3
 8000abc:	4b09      	ldr	r3, [pc, #36]	; (8000ae4 <TIM_OC2Init+0x40>)
 8000abe:	b292      	uxth	r2, r2
 8000ac0:	4023      	ands	r3, r4
 8000ac2:	890c      	ldrh	r4, [r1, #8]
 8000ac4:	0124      	lsls	r4, r4, #4
 8000ac6:	4323      	orrs	r3, r4
 8000ac8:	884c      	ldrh	r4, [r1, #2]
 8000aca:	b29b      	uxth	r3, r3
 8000acc:	0124      	lsls	r4, r4, #4
 8000ace:	6849      	ldr	r1, [r1, #4]
 8000ad0:	4323      	orrs	r3, r4
 8000ad2:	b29b      	uxth	r3, r3
 8000ad4:	6381      	str	r1, [r0, #56]	; 0x38
 8000ad6:	8302      	strh	r2, [r0, #24]
 8000ad8:	8403      	strh	r3, [r0, #32]
 8000ada:	bd10      	pop	{r4, pc}
 8000adc:	0000ffef 	.word	0x0000ffef
 8000ae0:	00008fff 	.word	0x00008fff
 8000ae4:	0000ffdf 	.word	0x0000ffdf

08000ae8 <TIM_OC3Init>:
 8000ae8:	6a02      	ldr	r2, [r0, #32]
 8000aea:	4b0c      	ldr	r3, [pc, #48]	; (8000b1c <TIM_OC3Init+0x34>)
 8000aec:	b510      	push	{r4, lr}
 8000aee:	4013      	ands	r3, r2
 8000af0:	8403      	strh	r3, [r0, #32]
 8000af2:	6a04      	ldr	r4, [r0, #32]
 8000af4:	4b0a      	ldr	r3, [pc, #40]	; (8000b20 <TIM_OC3Init+0x38>)
 8000af6:	69c2      	ldr	r2, [r0, #28]
 8000af8:	401a      	ands	r2, r3
 8000afa:	880b      	ldrh	r3, [r1, #0]
 8000afc:	431a      	orrs	r2, r3
 8000afe:	4b09      	ldr	r3, [pc, #36]	; (8000b24 <TIM_OC3Init+0x3c>)
 8000b00:	4023      	ands	r3, r4
 8000b02:	890c      	ldrh	r4, [r1, #8]
 8000b04:	0224      	lsls	r4, r4, #8
 8000b06:	4323      	orrs	r3, r4
 8000b08:	884c      	ldrh	r4, [r1, #2]
 8000b0a:	b29b      	uxth	r3, r3
 8000b0c:	0224      	lsls	r4, r4, #8
 8000b0e:	6849      	ldr	r1, [r1, #4]
 8000b10:	4323      	orrs	r3, r4
 8000b12:	b29b      	uxth	r3, r3
 8000b14:	63c1      	str	r1, [r0, #60]	; 0x3c
 8000b16:	8382      	strh	r2, [r0, #28]
 8000b18:	8403      	strh	r3, [r0, #32]
 8000b1a:	bd10      	pop	{r4, pc}
 8000b1c:	0000feff 	.word	0x0000feff
 8000b20:	0000ff8f 	.word	0x0000ff8f
 8000b24:	0000fdff 	.word	0x0000fdff

08000b28 <TIM_OC4Init>:
 8000b28:	6a02      	ldr	r2, [r0, #32]
 8000b2a:	4b0d      	ldr	r3, [pc, #52]	; (8000b60 <TIM_OC4Init+0x38>)
 8000b2c:	b510      	push	{r4, lr}
 8000b2e:	4013      	ands	r3, r2
 8000b30:	8403      	strh	r3, [r0, #32]
 8000b32:	6a04      	ldr	r4, [r0, #32]
 8000b34:	4b0b      	ldr	r3, [pc, #44]	; (8000b64 <TIM_OC4Init+0x3c>)
 8000b36:	69c2      	ldr	r2, [r0, #28]
 8000b38:	401a      	ands	r2, r3
 8000b3a:	880b      	ldrh	r3, [r1, #0]
 8000b3c:	021b      	lsls	r3, r3, #8
 8000b3e:	431a      	orrs	r2, r3
 8000b40:	4b09      	ldr	r3, [pc, #36]	; (8000b68 <TIM_OC4Init+0x40>)
 8000b42:	b292      	uxth	r2, r2
 8000b44:	4023      	ands	r3, r4
 8000b46:	890c      	ldrh	r4, [r1, #8]
 8000b48:	0324      	lsls	r4, r4, #12
 8000b4a:	4323      	orrs	r3, r4
 8000b4c:	884c      	ldrh	r4, [r1, #2]
 8000b4e:	b29b      	uxth	r3, r3
 8000b50:	0324      	lsls	r4, r4, #12
 8000b52:	6849      	ldr	r1, [r1, #4]
 8000b54:	4323      	orrs	r3, r4
 8000b56:	b29b      	uxth	r3, r3
 8000b58:	6401      	str	r1, [r0, #64]	; 0x40
 8000b5a:	8382      	strh	r2, [r0, #28]
 8000b5c:	8403      	strh	r3, [r0, #32]
 8000b5e:	bd10      	pop	{r4, pc}
 8000b60:	0000efff 	.word	0x0000efff
 8000b64:	00008fff 	.word	0x00008fff
 8000b68:	0000dfff 	.word	0x0000dfff

08000b6c <TIM_OCStructInit>:
 8000b6c:	2300      	movs	r3, #0
 8000b6e:	8003      	strh	r3, [r0, #0]
 8000b70:	8043      	strh	r3, [r0, #2]
 8000b72:	6043      	str	r3, [r0, #4]
 8000b74:	8103      	strh	r3, [r0, #8]
 8000b76:	4770      	bx	lr

08000b78 <TIM_SelectOCxM>:
 8000b78:	b530      	push	{r4, r5, lr}
 8000b7a:	6a03      	ldr	r3, [r0, #32]
 8000b7c:	2401      	movs	r4, #1
 8000b7e:	b29b      	uxth	r3, r3
 8000b80:	408c      	lsls	r4, r1
 8000b82:	43a3      	bics	r3, r4
 8000b84:	1c05      	adds	r5, r0, #0
 8000b86:	8403      	strh	r3, [r0, #32]
 8000b88:	2308      	movs	r3, #8
 8000b8a:	1c08      	adds	r0, r1, #0
 8000b8c:	3518      	adds	r5, #24
 8000b8e:	4398      	bics	r0, r3
 8000b90:	d00d      	beq.n	8000bae <TIM_SelectOCxM+0x36>
 8000b92:	3904      	subs	r1, #4
 8000b94:	b289      	uxth	r1, r1
 8000b96:	0849      	lsrs	r1, r1, #1
 8000b98:	1949      	adds	r1, r1, r5
 8000b9a:	6808      	ldr	r0, [r1, #0]
 8000b9c:	4b09      	ldr	r3, [pc, #36]	; (8000bc4 <TIM_SelectOCxM+0x4c>)
 8000b9e:	0212      	lsls	r2, r2, #8
 8000ba0:	4003      	ands	r3, r0
 8000ba2:	600b      	str	r3, [r1, #0]
 8000ba4:	680b      	ldr	r3, [r1, #0]
 8000ba6:	b292      	uxth	r2, r2
 8000ba8:	431a      	orrs	r2, r3
 8000baa:	600a      	str	r2, [r1, #0]
 8000bac:	bd30      	pop	{r4, r5, pc}
 8000bae:	0849      	lsrs	r1, r1, #1
 8000bb0:	1869      	adds	r1, r5, r1
 8000bb2:	680b      	ldr	r3, [r1, #0]
 8000bb4:	2070      	movs	r0, #112	; 0x70
 8000bb6:	4383      	bics	r3, r0
 8000bb8:	600b      	str	r3, [r1, #0]
 8000bba:	680b      	ldr	r3, [r1, #0]
 8000bbc:	431a      	orrs	r2, r3
 8000bbe:	600a      	str	r2, [r1, #0]
 8000bc0:	e7f4      	b.n	8000bac <TIM_SelectOCxM+0x34>
 8000bc2:	46c0      	nop			; (mov r8, r8)
 8000bc4:	ffff8fff 	.word	0xffff8fff

08000bc8 <TIM_SetCompare1>:
 8000bc8:	6341      	str	r1, [r0, #52]	; 0x34
 8000bca:	4770      	bx	lr

08000bcc <TIM_SetCompare2>:
 8000bcc:	6381      	str	r1, [r0, #56]	; 0x38
 8000bce:	4770      	bx	lr

08000bd0 <TIM_SetCompare3>:
 8000bd0:	63c1      	str	r1, [r0, #60]	; 0x3c
 8000bd2:	4770      	bx	lr

08000bd4 <TIM_SetCompare4>:
 8000bd4:	6401      	str	r1, [r0, #64]	; 0x40
 8000bd6:	4770      	bx	lr

08000bd8 <TIM_ForcedOC1Config>:
 8000bd8:	6982      	ldr	r2, [r0, #24]
 8000bda:	4b02      	ldr	r3, [pc, #8]	; (8000be4 <TIM_ForcedOC1Config+0xc>)
 8000bdc:	4013      	ands	r3, r2
 8000bde:	4319      	orrs	r1, r3
 8000be0:	8301      	strh	r1, [r0, #24]
 8000be2:	4770      	bx	lr
 8000be4:	0000ff8f 	.word	0x0000ff8f

08000be8 <TIM_ForcedOC2Config>:
 8000be8:	6982      	ldr	r2, [r0, #24]
 8000bea:	4b04      	ldr	r3, [pc, #16]	; (8000bfc <TIM_ForcedOC2Config+0x14>)
 8000bec:	401a      	ands	r2, r3
 8000bee:	020b      	lsls	r3, r1, #8
 8000bf0:	1c11      	adds	r1, r2, #0
 8000bf2:	4319      	orrs	r1, r3
 8000bf4:	b289      	uxth	r1, r1
 8000bf6:	8301      	strh	r1, [r0, #24]
 8000bf8:	4770      	bx	lr
 8000bfa:	46c0      	nop			; (mov r8, r8)
 8000bfc:	00008fff 	.word	0x00008fff

08000c00 <TIM_ForcedOC3Config>:
 8000c00:	69c2      	ldr	r2, [r0, #28]
 8000c02:	4b02      	ldr	r3, [pc, #8]	; (8000c0c <TIM_ForcedOC3Config+0xc>)
 8000c04:	4013      	ands	r3, r2
 8000c06:	4319      	orrs	r1, r3
 8000c08:	8381      	strh	r1, [r0, #28]
 8000c0a:	4770      	bx	lr
 8000c0c:	0000ff8f 	.word	0x0000ff8f

08000c10 <TIM_ForcedOC4Config>:
 8000c10:	69c2      	ldr	r2, [r0, #28]
 8000c12:	4b04      	ldr	r3, [pc, #16]	; (8000c24 <TIM_ForcedOC4Config+0x14>)
 8000c14:	401a      	ands	r2, r3
 8000c16:	020b      	lsls	r3, r1, #8
 8000c18:	1c11      	adds	r1, r2, #0
 8000c1a:	4319      	orrs	r1, r3
 8000c1c:	b289      	uxth	r1, r1
 8000c1e:	8381      	strh	r1, [r0, #28]
 8000c20:	4770      	bx	lr
 8000c22:	46c0      	nop			; (mov r8, r8)
 8000c24:	00008fff 	.word	0x00008fff

08000c28 <TIM_OC1PreloadConfig>:
 8000c28:	6982      	ldr	r2, [r0, #24]
 8000c2a:	4b02      	ldr	r3, [pc, #8]	; (8000c34 <TIM_OC1PreloadConfig+0xc>)
 8000c2c:	4013      	ands	r3, r2
 8000c2e:	4319      	orrs	r1, r3
 8000c30:	8301      	strh	r1, [r0, #24]
 8000c32:	4770      	bx	lr
 8000c34:	0000fff7 	.word	0x0000fff7

08000c38 <TIM_OC2PreloadConfig>:
 8000c38:	6982      	ldr	r2, [r0, #24]
 8000c3a:	4b04      	ldr	r3, [pc, #16]	; (8000c4c <TIM_OC2PreloadConfig+0x14>)
 8000c3c:	401a      	ands	r2, r3
 8000c3e:	020b      	lsls	r3, r1, #8
 8000c40:	1c11      	adds	r1, r2, #0
 8000c42:	4319      	orrs	r1, r3
 8000c44:	b289      	uxth	r1, r1
 8000c46:	8301      	strh	r1, [r0, #24]
 8000c48:	4770      	bx	lr
 8000c4a:	46c0      	nop			; (mov r8, r8)
 8000c4c:	0000f7ff 	.word	0x0000f7ff

08000c50 <TIM_OC3PreloadConfig>:
 8000c50:	69c2      	ldr	r2, [r0, #28]
 8000c52:	4b02      	ldr	r3, [pc, #8]	; (8000c5c <TIM_OC3PreloadConfig+0xc>)
 8000c54:	4013      	ands	r3, r2
 8000c56:	4319      	orrs	r1, r3
 8000c58:	8381      	strh	r1, [r0, #28]
 8000c5a:	4770      	bx	lr
 8000c5c:	0000fff7 	.word	0x0000fff7

08000c60 <TIM_OC4PreloadConfig>:
 8000c60:	69c2      	ldr	r2, [r0, #28]
 8000c62:	4b04      	ldr	r3, [pc, #16]	; (8000c74 <TIM_OC4PreloadConfig+0x14>)
 8000c64:	401a      	ands	r2, r3
 8000c66:	020b      	lsls	r3, r1, #8
 8000c68:	1c11      	adds	r1, r2, #0
 8000c6a:	4319      	orrs	r1, r3
 8000c6c:	b289      	uxth	r1, r1
 8000c6e:	8381      	strh	r1, [r0, #28]
 8000c70:	4770      	bx	lr
 8000c72:	46c0      	nop			; (mov r8, r8)
 8000c74:	0000f7ff 	.word	0x0000f7ff

08000c78 <TIM_OC1FastConfig>:
 8000c78:	6982      	ldr	r2, [r0, #24]
 8000c7a:	4b02      	ldr	r3, [pc, #8]	; (8000c84 <TIM_OC1FastConfig+0xc>)
 8000c7c:	4013      	ands	r3, r2
 8000c7e:	4319      	orrs	r1, r3
 8000c80:	8301      	strh	r1, [r0, #24]
 8000c82:	4770      	bx	lr
 8000c84:	0000fffb 	.word	0x0000fffb

08000c88 <TIM_OC2FastConfig>:
 8000c88:	6982      	ldr	r2, [r0, #24]
 8000c8a:	4b04      	ldr	r3, [pc, #16]	; (8000c9c <TIM_OC2FastConfig+0x14>)
 8000c8c:	401a      	ands	r2, r3
 8000c8e:	020b      	lsls	r3, r1, #8
 8000c90:	1c11      	adds	r1, r2, #0
 8000c92:	4319      	orrs	r1, r3
 8000c94:	b289      	uxth	r1, r1
 8000c96:	8301      	strh	r1, [r0, #24]
 8000c98:	4770      	bx	lr
 8000c9a:	46c0      	nop			; (mov r8, r8)
 8000c9c:	0000fbff 	.word	0x0000fbff

08000ca0 <TIM_OC3FastConfig>:
 8000ca0:	69c2      	ldr	r2, [r0, #28]
 8000ca2:	4b02      	ldr	r3, [pc, #8]	; (8000cac <TIM_OC3FastConfig+0xc>)
 8000ca4:	4013      	ands	r3, r2
 8000ca6:	4319      	orrs	r1, r3
 8000ca8:	8381      	strh	r1, [r0, #28]
 8000caa:	4770      	bx	lr
 8000cac:	0000fffb 	.word	0x0000fffb

08000cb0 <TIM_OC4FastConfig>:
 8000cb0:	69c2      	ldr	r2, [r0, #28]
 8000cb2:	4b04      	ldr	r3, [pc, #16]	; (8000cc4 <TIM_OC4FastConfig+0x14>)
 8000cb4:	401a      	ands	r2, r3
 8000cb6:	020b      	lsls	r3, r1, #8
 8000cb8:	1c11      	adds	r1, r2, #0
 8000cba:	4319      	orrs	r1, r3
 8000cbc:	b289      	uxth	r1, r1
 8000cbe:	8381      	strh	r1, [r0, #28]
 8000cc0:	4770      	bx	lr
 8000cc2:	46c0      	nop			; (mov r8, r8)
 8000cc4:	0000fbff 	.word	0x0000fbff

08000cc8 <TIM_ClearOC1Ref>:
 8000cc8:	6982      	ldr	r2, [r0, #24]
 8000cca:	4b02      	ldr	r3, [pc, #8]	; (8000cd4 <TIM_ClearOC1Ref+0xc>)
 8000ccc:	4013      	ands	r3, r2
 8000cce:	4319      	orrs	r1, r3
 8000cd0:	8301      	strh	r1, [r0, #24]
 8000cd2:	4770      	bx	lr
 8000cd4:	0000ff7f 	.word	0x0000ff7f

08000cd8 <TIM_ClearOC2Ref>:
 8000cd8:	6983      	ldr	r3, [r0, #24]
 8000cda:	0209      	lsls	r1, r1, #8
 8000cdc:	045b      	lsls	r3, r3, #17
 8000cde:	0c5b      	lsrs	r3, r3, #17
 8000ce0:	4319      	orrs	r1, r3
 8000ce2:	b289      	uxth	r1, r1
 8000ce4:	8301      	strh	r1, [r0, #24]
 8000ce6:	4770      	bx	lr

08000ce8 <TIM_ClearOC3Ref>:
 8000ce8:	69c2      	ldr	r2, [r0, #28]
 8000cea:	4b02      	ldr	r3, [pc, #8]	; (8000cf4 <TIM_ClearOC3Ref+0xc>)
 8000cec:	4013      	ands	r3, r2
 8000cee:	4319      	orrs	r1, r3
 8000cf0:	8381      	strh	r1, [r0, #28]
 8000cf2:	4770      	bx	lr
 8000cf4:	0000ff7f 	.word	0x0000ff7f

08000cf8 <TIM_ClearOC4Ref>:
 8000cf8:	69c3      	ldr	r3, [r0, #28]
 8000cfa:	0209      	lsls	r1, r1, #8
 8000cfc:	045b      	lsls	r3, r3, #17
 8000cfe:	0c5b      	lsrs	r3, r3, #17
 8000d00:	4319      	orrs	r1, r3
 8000d02:	b289      	uxth	r1, r1
 8000d04:	8381      	strh	r1, [r0, #28]
 8000d06:	4770      	bx	lr

08000d08 <TIM_OC1PolarityConfig>:
 8000d08:	6a02      	ldr	r2, [r0, #32]
 8000d0a:	4b02      	ldr	r3, [pc, #8]	; (8000d14 <TIM_OC1PolarityConfig+0xc>)
 8000d0c:	4013      	ands	r3, r2
 8000d0e:	4319      	orrs	r1, r3
 8000d10:	8401      	strh	r1, [r0, #32]
 8000d12:	4770      	bx	lr
 8000d14:	0000fffd 	.word	0x0000fffd

08000d18 <TIM_OC2PolarityConfig>:
 8000d18:	6a02      	ldr	r2, [r0, #32]
 8000d1a:	4b04      	ldr	r3, [pc, #16]	; (8000d2c <TIM_OC2PolarityConfig+0x14>)
 8000d1c:	401a      	ands	r2, r3
 8000d1e:	010b      	lsls	r3, r1, #4
 8000d20:	1c11      	adds	r1, r2, #0
 8000d22:	4319      	orrs	r1, r3
 8000d24:	b289      	uxth	r1, r1
 8000d26:	8401      	strh	r1, [r0, #32]
 8000d28:	4770      	bx	lr
 8000d2a:	46c0      	nop			; (mov r8, r8)
 8000d2c:	0000ffdf 	.word	0x0000ffdf

08000d30 <TIM_OC3PolarityConfig>:
 8000d30:	6a02      	ldr	r2, [r0, #32]
 8000d32:	4b04      	ldr	r3, [pc, #16]	; (8000d44 <TIM_OC3PolarityConfig+0x14>)
 8000d34:	401a      	ands	r2, r3
 8000d36:	020b      	lsls	r3, r1, #8
 8000d38:	1c11      	adds	r1, r2, #0
 8000d3a:	4319      	orrs	r1, r3
 8000d3c:	b289      	uxth	r1, r1
 8000d3e:	8401      	strh	r1, [r0, #32]
 8000d40:	4770      	bx	lr
 8000d42:	46c0      	nop			; (mov r8, r8)
 8000d44:	0000fdff 	.word	0x0000fdff

08000d48 <TIM_OC4PolarityConfig>:
 8000d48:	6a02      	ldr	r2, [r0, #32]
 8000d4a:	4b04      	ldr	r3, [pc, #16]	; (8000d5c <TIM_OC4PolarityConfig+0x14>)
 8000d4c:	401a      	ands	r2, r3
 8000d4e:	030b      	lsls	r3, r1, #12
 8000d50:	1c11      	adds	r1, r2, #0
 8000d52:	4319      	orrs	r1, r3
 8000d54:	b289      	uxth	r1, r1
 8000d56:	8401      	strh	r1, [r0, #32]
 8000d58:	4770      	bx	lr
 8000d5a:	46c0      	nop			; (mov r8, r8)
 8000d5c:	0000dfff 	.word	0x0000dfff

08000d60 <TIM_SelectOCREFClear>:
 8000d60:	6882      	ldr	r2, [r0, #8]
 8000d62:	4b04      	ldr	r3, [pc, #16]	; (8000d74 <TIM_SelectOCREFClear+0x14>)
 8000d64:	4013      	ands	r3, r2
 8000d66:	8103      	strh	r3, [r0, #8]
 8000d68:	6883      	ldr	r3, [r0, #8]
 8000d6a:	b29b      	uxth	r3, r3
 8000d6c:	4319      	orrs	r1, r3
 8000d6e:	8101      	strh	r1, [r0, #8]
 8000d70:	4770      	bx	lr
 8000d72:	46c0      	nop			; (mov r8, r8)
 8000d74:	0000fff7 	.word	0x0000fff7

08000d78 <TIM_CCxCmd>:
 8000d78:	6a03      	ldr	r3, [r0, #32]
 8000d7a:	b510      	push	{r4, lr}
 8000d7c:	2401      	movs	r4, #1
 8000d7e:	408c      	lsls	r4, r1
 8000d80:	b29b      	uxth	r3, r3
 8000d82:	43a3      	bics	r3, r4
 8000d84:	8403      	strh	r3, [r0, #32]
 8000d86:	6a03      	ldr	r3, [r0, #32]
 8000d88:	408a      	lsls	r2, r1
 8000d8a:	1c11      	adds	r1, r2, #0
 8000d8c:	4319      	orrs	r1, r3
 8000d8e:	b289      	uxth	r1, r1
 8000d90:	8401      	strh	r1, [r0, #32]
 8000d92:	bd10      	pop	{r4, pc}

08000d94 <TIM_ICInit>:
 8000d94:	880b      	ldrh	r3, [r1, #0]
 8000d96:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d98:	2b00      	cmp	r3, #0
 8000d9a:	d02b      	beq.n	8000df4 <TIM_ICInit+0x60>
 8000d9c:	2b04      	cmp	r3, #4
 8000d9e:	d04a      	beq.n	8000e36 <TIM_ICInit+0xa2>
 8000da0:	2b08      	cmp	r3, #8
 8000da2:	d100      	bne.n	8000da6 <TIM_ICInit+0x12>
 8000da4:	e06d      	b.n	8000e82 <TIM_ICInit+0xee>
 8000da6:	6a05      	ldr	r5, [r0, #32]
 8000da8:	4a47      	ldr	r2, [pc, #284]	; (8000ec8 <TIM_ICInit+0x134>)
 8000daa:	884b      	ldrh	r3, [r1, #2]
 8000dac:	402a      	ands	r2, r5
 8000dae:	888e      	ldrh	r6, [r1, #4]
 8000db0:	890c      	ldrh	r4, [r1, #8]
 8000db2:	8402      	strh	r2, [r0, #32]
 8000db4:	69c7      	ldr	r7, [r0, #28]
 8000db6:	4a45      	ldr	r2, [pc, #276]	; (8000ecc <TIM_ICInit+0x138>)
 8000db8:	0236      	lsls	r6, r6, #8
 8000dba:	403a      	ands	r2, r7
 8000dbc:	4332      	orrs	r2, r6
 8000dbe:	0324      	lsls	r4, r4, #12
 8000dc0:	b292      	uxth	r2, r2
 8000dc2:	6a05      	ldr	r5, [r0, #32]
 8000dc4:	4322      	orrs	r2, r4
 8000dc6:	4c42      	ldr	r4, [pc, #264]	; (8000ed0 <TIM_ICInit+0x13c>)
 8000dc8:	031b      	lsls	r3, r3, #12
 8000dca:	402c      	ands	r4, r5
 8000dcc:	431c      	orrs	r4, r3
 8000dce:	2380      	movs	r3, #128	; 0x80
 8000dd0:	b2a4      	uxth	r4, r4
 8000dd2:	015b      	lsls	r3, r3, #5
 8000dd4:	b292      	uxth	r2, r2
 8000dd6:	4323      	orrs	r3, r4
 8000dd8:	8382      	strh	r2, [r0, #28]
 8000dda:	8403      	strh	r3, [r0, #32]
 8000ddc:	4a3d      	ldr	r2, [pc, #244]	; (8000ed4 <TIM_ICInit+0x140>)
 8000dde:	88cb      	ldrh	r3, [r1, #6]
 8000de0:	69c1      	ldr	r1, [r0, #28]
 8000de2:	021b      	lsls	r3, r3, #8
 8000de4:	400a      	ands	r2, r1
 8000de6:	8382      	strh	r2, [r0, #28]
 8000de8:	69c2      	ldr	r2, [r0, #28]
 8000dea:	b292      	uxth	r2, r2
 8000dec:	4313      	orrs	r3, r2
 8000dee:	b29b      	uxth	r3, r3
 8000df0:	8383      	strh	r3, [r0, #28]
 8000df2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000df4:	6a04      	ldr	r4, [r0, #32]
 8000df6:	4a38      	ldr	r2, [pc, #224]	; (8000ed8 <TIM_ICInit+0x144>)
 8000df8:	888b      	ldrh	r3, [r1, #4]
 8000dfa:	4022      	ands	r2, r4
 8000dfc:	884d      	ldrh	r5, [r1, #2]
 8000dfe:	890e      	ldrh	r6, [r1, #8]
 8000e00:	8402      	strh	r2, [r0, #32]
 8000e02:	6987      	ldr	r7, [r0, #24]
 8000e04:	4a35      	ldr	r2, [pc, #212]	; (8000edc <TIM_ICInit+0x148>)
 8000e06:	0136      	lsls	r6, r6, #4
 8000e08:	403a      	ands	r2, r7
 8000e0a:	4332      	orrs	r2, r6
 8000e0c:	b292      	uxth	r2, r2
 8000e0e:	6a04      	ldr	r4, [r0, #32]
 8000e10:	431a      	orrs	r2, r3
 8000e12:	4b33      	ldr	r3, [pc, #204]	; (8000ee0 <TIM_ICInit+0x14c>)
 8000e14:	8302      	strh	r2, [r0, #24]
 8000e16:	401c      	ands	r4, r3
 8000e18:	2301      	movs	r3, #1
 8000e1a:	432b      	orrs	r3, r5
 8000e1c:	4323      	orrs	r3, r4
 8000e1e:	b29b      	uxth	r3, r3
 8000e20:	8403      	strh	r3, [r0, #32]
 8000e22:	88ca      	ldrh	r2, [r1, #6]
 8000e24:	4b2f      	ldr	r3, [pc, #188]	; (8000ee4 <TIM_ICInit+0x150>)
 8000e26:	6981      	ldr	r1, [r0, #24]
 8000e28:	400b      	ands	r3, r1
 8000e2a:	8303      	strh	r3, [r0, #24]
 8000e2c:	6983      	ldr	r3, [r0, #24]
 8000e2e:	b29b      	uxth	r3, r3
 8000e30:	4313      	orrs	r3, r2
 8000e32:	8303      	strh	r3, [r0, #24]
 8000e34:	e7dd      	b.n	8000df2 <TIM_ICInit+0x5e>
 8000e36:	6a05      	ldr	r5, [r0, #32]
 8000e38:	4a2b      	ldr	r2, [pc, #172]	; (8000ee8 <TIM_ICInit+0x154>)
 8000e3a:	884c      	ldrh	r4, [r1, #2]
 8000e3c:	402a      	ands	r2, r5
 8000e3e:	888b      	ldrh	r3, [r1, #4]
 8000e40:	890e      	ldrh	r6, [r1, #8]
 8000e42:	8402      	strh	r2, [r0, #32]
 8000e44:	6987      	ldr	r7, [r0, #24]
 8000e46:	4a21      	ldr	r2, [pc, #132]	; (8000ecc <TIM_ICInit+0x138>)
 8000e48:	0336      	lsls	r6, r6, #12
 8000e4a:	403a      	ands	r2, r7
 8000e4c:	4332      	orrs	r2, r6
 8000e4e:	021b      	lsls	r3, r3, #8
 8000e50:	b292      	uxth	r2, r2
 8000e52:	6a05      	ldr	r5, [r0, #32]
 8000e54:	431a      	orrs	r2, r3
 8000e56:	4b25      	ldr	r3, [pc, #148]	; (8000eec <TIM_ICInit+0x158>)
 8000e58:	0124      	lsls	r4, r4, #4
 8000e5a:	402b      	ands	r3, r5
 8000e5c:	4323      	orrs	r3, r4
 8000e5e:	b29b      	uxth	r3, r3
 8000e60:	2410      	movs	r4, #16
 8000e62:	b292      	uxth	r2, r2
 8000e64:	4323      	orrs	r3, r4
 8000e66:	8302      	strh	r2, [r0, #24]
 8000e68:	8403      	strh	r3, [r0, #32]
 8000e6a:	4a1a      	ldr	r2, [pc, #104]	; (8000ed4 <TIM_ICInit+0x140>)
 8000e6c:	88cb      	ldrh	r3, [r1, #6]
 8000e6e:	6981      	ldr	r1, [r0, #24]
 8000e70:	021b      	lsls	r3, r3, #8
 8000e72:	400a      	ands	r2, r1
 8000e74:	8302      	strh	r2, [r0, #24]
 8000e76:	6982      	ldr	r2, [r0, #24]
 8000e78:	b292      	uxth	r2, r2
 8000e7a:	4313      	orrs	r3, r2
 8000e7c:	b29b      	uxth	r3, r3
 8000e7e:	8303      	strh	r3, [r0, #24]
 8000e80:	e7b7      	b.n	8000df2 <TIM_ICInit+0x5e>
 8000e82:	6a05      	ldr	r5, [r0, #32]
 8000e84:	4a1a      	ldr	r2, [pc, #104]	; (8000ef0 <TIM_ICInit+0x15c>)
 8000e86:	888c      	ldrh	r4, [r1, #4]
 8000e88:	402a      	ands	r2, r5
 8000e8a:	884b      	ldrh	r3, [r1, #2]
 8000e8c:	890e      	ldrh	r6, [r1, #8]
 8000e8e:	8402      	strh	r2, [r0, #32]
 8000e90:	69c7      	ldr	r7, [r0, #28]
 8000e92:	4a12      	ldr	r2, [pc, #72]	; (8000edc <TIM_ICInit+0x148>)
 8000e94:	0136      	lsls	r6, r6, #4
 8000e96:	403a      	ands	r2, r7
 8000e98:	4332      	orrs	r2, r6
 8000e9a:	b292      	uxth	r2, r2
 8000e9c:	6a05      	ldr	r5, [r0, #32]
 8000e9e:	4322      	orrs	r2, r4
 8000ea0:	4c14      	ldr	r4, [pc, #80]	; (8000ef4 <TIM_ICInit+0x160>)
 8000ea2:	021b      	lsls	r3, r3, #8
 8000ea4:	402c      	ands	r4, r5
 8000ea6:	431c      	orrs	r4, r3
 8000ea8:	2380      	movs	r3, #128	; 0x80
 8000eaa:	b2a4      	uxth	r4, r4
 8000eac:	005b      	lsls	r3, r3, #1
 8000eae:	4323      	orrs	r3, r4
 8000eb0:	8382      	strh	r2, [r0, #28]
 8000eb2:	8403      	strh	r3, [r0, #32]
 8000eb4:	88ca      	ldrh	r2, [r1, #6]
 8000eb6:	4b0b      	ldr	r3, [pc, #44]	; (8000ee4 <TIM_ICInit+0x150>)
 8000eb8:	69c1      	ldr	r1, [r0, #28]
 8000eba:	400b      	ands	r3, r1
 8000ebc:	8383      	strh	r3, [r0, #28]
 8000ebe:	69c3      	ldr	r3, [r0, #28]
 8000ec0:	b29b      	uxth	r3, r3
 8000ec2:	4313      	orrs	r3, r2
 8000ec4:	8383      	strh	r3, [r0, #28]
 8000ec6:	e794      	b.n	8000df2 <TIM_ICInit+0x5e>
 8000ec8:	0000efff 	.word	0x0000efff
 8000ecc:	00000cff 	.word	0x00000cff
 8000ed0:	00005fff 	.word	0x00005fff
 8000ed4:	0000f3ff 	.word	0x0000f3ff
 8000ed8:	0000fffe 	.word	0x0000fffe
 8000edc:	0000ff0c 	.word	0x0000ff0c
 8000ee0:	0000fff5 	.word	0x0000fff5
 8000ee4:	0000fff3 	.word	0x0000fff3
 8000ee8:	0000ffef 	.word	0x0000ffef
 8000eec:	0000ff5f 	.word	0x0000ff5f
 8000ef0:	0000feff 	.word	0x0000feff
 8000ef4:	0000f5ff 	.word	0x0000f5ff

08000ef8 <TIM_ICStructInit>:
 8000ef8:	2300      	movs	r3, #0
 8000efa:	2201      	movs	r2, #1
 8000efc:	8003      	strh	r3, [r0, #0]
 8000efe:	8043      	strh	r3, [r0, #2]
 8000f00:	8082      	strh	r2, [r0, #4]
 8000f02:	80c3      	strh	r3, [r0, #6]
 8000f04:	8103      	strh	r3, [r0, #8]
 8000f06:	4770      	bx	lr

08000f08 <TIM_PWMIConfig>:
 8000f08:	884b      	ldrh	r3, [r1, #2]
 8000f0a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f0c:	425c      	negs	r4, r3
 8000f0e:	415c      	adcs	r4, r3
 8000f10:	0062      	lsls	r2, r4, #1
 8000f12:	4657      	mov	r7, sl
 8000f14:	4692      	mov	sl, r2
 8000f16:	888a      	ldrh	r2, [r1, #4]
 8000f18:	464e      	mov	r6, r9
 8000f1a:	4645      	mov	r5, r8
 8000f1c:	b4e0      	push	{r5, r6, r7}
 8000f1e:	1e55      	subs	r5, r2, #1
 8000f20:	1e6e      	subs	r6, r5, #1
 8000f22:	41b5      	sbcs	r5, r6
 8000f24:	2602      	movs	r6, #2
 8000f26:	1b75      	subs	r5, r6, r5
 8000f28:	880e      	ldrh	r6, [r1, #0]
 8000f2a:	2e00      	cmp	r6, #0
 8000f2c:	d04e      	beq.n	8000fcc <TIM_PWMIConfig+0xc4>
 8000f2e:	6a07      	ldr	r7, [r0, #32]
 8000f30:	4e4f      	ldr	r6, [pc, #316]	; (8001070 <TIM_PWMIConfig+0x168>)
 8000f32:	46bc      	mov	ip, r7
 8000f34:	1c37      	adds	r7, r6, #0
 8000f36:	4666      	mov	r6, ip
 8000f38:	4037      	ands	r7, r6
 8000f3a:	890c      	ldrh	r4, [r1, #8]
 8000f3c:	8407      	strh	r7, [r0, #32]
 8000f3e:	6986      	ldr	r6, [r0, #24]
 8000f40:	6a07      	ldr	r7, [r0, #32]
 8000f42:	46b0      	mov	r8, r6
 8000f44:	4e4b      	ldr	r6, [pc, #300]	; (8001074 <TIM_PWMIConfig+0x16c>)
 8000f46:	46bc      	mov	ip, r7
 8000f48:	4647      	mov	r7, r8
 8000f4a:	4037      	ands	r7, r6
 8000f4c:	46b8      	mov	r8, r7
 8000f4e:	4646      	mov	r6, r8
 8000f50:	0327      	lsls	r7, r4, #12
 8000f52:	4337      	orrs	r7, r6
 8000f54:	b2be      	uxth	r6, r7
 8000f56:	4f48      	ldr	r7, [pc, #288]	; (8001078 <TIM_PWMIConfig+0x170>)
 8000f58:	0212      	lsls	r2, r2, #8
 8000f5a:	4332      	orrs	r2, r6
 8000f5c:	011e      	lsls	r6, r3, #4
 8000f5e:	1c3b      	adds	r3, r7, #0
 8000f60:	4667      	mov	r7, ip
 8000f62:	403b      	ands	r3, r7
 8000f64:	4333      	orrs	r3, r6
 8000f66:	b29b      	uxth	r3, r3
 8000f68:	2610      	movs	r6, #16
 8000f6a:	4333      	orrs	r3, r6
 8000f6c:	b292      	uxth	r2, r2
 8000f6e:	8302      	strh	r2, [r0, #24]
 8000f70:	8403      	strh	r3, [r0, #32]
 8000f72:	4a42      	ldr	r2, [pc, #264]	; (800107c <TIM_PWMIConfig+0x174>)
 8000f74:	88cb      	ldrh	r3, [r1, #6]
 8000f76:	6981      	ldr	r1, [r0, #24]
 8000f78:	4657      	mov	r7, sl
 8000f7a:	400a      	ands	r2, r1
 8000f7c:	8302      	strh	r2, [r0, #24]
 8000f7e:	6982      	ldr	r2, [r0, #24]
 8000f80:	0219      	lsls	r1, r3, #8
 8000f82:	b292      	uxth	r2, r2
 8000f84:	430a      	orrs	r2, r1
 8000f86:	b292      	uxth	r2, r2
 8000f88:	8302      	strh	r2, [r0, #24]
 8000f8a:	6a01      	ldr	r1, [r0, #32]
 8000f8c:	4a3c      	ldr	r2, [pc, #240]	; (8001080 <TIM_PWMIConfig+0x178>)
 8000f8e:	400a      	ands	r2, r1
 8000f90:	8402      	strh	r2, [r0, #32]
 8000f92:	6986      	ldr	r6, [r0, #24]
 8000f94:	0122      	lsls	r2, r4, #4
 8000f96:	4c3b      	ldr	r4, [pc, #236]	; (8001084 <TIM_PWMIConfig+0x17c>)
 8000f98:	6a01      	ldr	r1, [r0, #32]
 8000f9a:	4034      	ands	r4, r6
 8000f9c:	4314      	orrs	r4, r2
 8000f9e:	4a3a      	ldr	r2, [pc, #232]	; (8001088 <TIM_PWMIConfig+0x180>)
 8000fa0:	b2a4      	uxth	r4, r4
 8000fa2:	400a      	ands	r2, r1
 8000fa4:	2101      	movs	r1, #1
 8000fa6:	430a      	orrs	r2, r1
 8000fa8:	4325      	orrs	r5, r4
 8000faa:	4317      	orrs	r7, r2
 8000fac:	b2ad      	uxth	r5, r5
 8000fae:	8305      	strh	r5, [r0, #24]
 8000fb0:	8407      	strh	r7, [r0, #32]
 8000fb2:	6981      	ldr	r1, [r0, #24]
 8000fb4:	4a35      	ldr	r2, [pc, #212]	; (800108c <TIM_PWMIConfig+0x184>)
 8000fb6:	400a      	ands	r2, r1
 8000fb8:	8302      	strh	r2, [r0, #24]
 8000fba:	6982      	ldr	r2, [r0, #24]
 8000fbc:	b292      	uxth	r2, r2
 8000fbe:	4313      	orrs	r3, r2
 8000fc0:	8303      	strh	r3, [r0, #24]
 8000fc2:	bc1c      	pop	{r2, r3, r4}
 8000fc4:	4690      	mov	r8, r2
 8000fc6:	4699      	mov	r9, r3
 8000fc8:	46a2      	mov	sl, r4
 8000fca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000fcc:	890e      	ldrh	r6, [r1, #8]
 8000fce:	6a07      	ldr	r7, [r0, #32]
 8000fd0:	46b2      	mov	sl, r6
 8000fd2:	4e2b      	ldr	r6, [pc, #172]	; (8001080 <TIM_PWMIConfig+0x178>)
 8000fd4:	46bc      	mov	ip, r7
 8000fd6:	1c37      	adds	r7, r6, #0
 8000fd8:	4666      	mov	r6, ip
 8000fda:	4037      	ands	r7, r6
 8000fdc:	8407      	strh	r7, [r0, #32]
 8000fde:	6986      	ldr	r6, [r0, #24]
 8000fe0:	6a07      	ldr	r7, [r0, #32]
 8000fe2:	46b0      	mov	r8, r6
 8000fe4:	4e27      	ldr	r6, [pc, #156]	; (8001084 <TIM_PWMIConfig+0x17c>)
 8000fe6:	46bc      	mov	ip, r7
 8000fe8:	4647      	mov	r7, r8
 8000fea:	4037      	ands	r7, r6
 8000fec:	46b8      	mov	r8, r7
 8000fee:	4657      	mov	r7, sl
 8000ff0:	4646      	mov	r6, r8
 8000ff2:	013f      	lsls	r7, r7, #4
 8000ff4:	4337      	orrs	r7, r6
 8000ff6:	b2bf      	uxth	r7, r7
 8000ff8:	433a      	orrs	r2, r7
 8000ffa:	2601      	movs	r6, #1
 8000ffc:	4f22      	ldr	r7, [pc, #136]	; (8001088 <TIM_PWMIConfig+0x180>)
 8000ffe:	4690      	mov	r8, r2
 8001000:	4662      	mov	r2, ip
 8001002:	46b4      	mov	ip, r6
 8001004:	4017      	ands	r7, r2
 8001006:	4662      	mov	r2, ip
 8001008:	4313      	orrs	r3, r2
 800100a:	433b      	orrs	r3, r7
 800100c:	b29b      	uxth	r3, r3
 800100e:	4646      	mov	r6, r8
 8001010:	8306      	strh	r6, [r0, #24]
 8001012:	8403      	strh	r3, [r0, #32]
 8001014:	4a1d      	ldr	r2, [pc, #116]	; (800108c <TIM_PWMIConfig+0x184>)
 8001016:	88cb      	ldrh	r3, [r1, #6]
 8001018:	6981      	ldr	r1, [r0, #24]
 800101a:	4656      	mov	r6, sl
 800101c:	400a      	ands	r2, r1
 800101e:	8302      	strh	r2, [r0, #24]
 8001020:	6982      	ldr	r2, [r0, #24]
 8001022:	022d      	lsls	r5, r5, #8
 8001024:	b292      	uxth	r2, r2
 8001026:	431a      	orrs	r2, r3
 8001028:	8302      	strh	r2, [r0, #24]
 800102a:	6a01      	ldr	r1, [r0, #32]
 800102c:	4a10      	ldr	r2, [pc, #64]	; (8001070 <TIM_PWMIConfig+0x168>)
 800102e:	021b      	lsls	r3, r3, #8
 8001030:	400a      	ands	r2, r1
 8001032:	8402      	strh	r2, [r0, #32]
 8001034:	6987      	ldr	r7, [r0, #24]
 8001036:	4a0f      	ldr	r2, [pc, #60]	; (8001074 <TIM_PWMIConfig+0x16c>)
 8001038:	6a01      	ldr	r1, [r0, #32]
 800103a:	4017      	ands	r7, r2
 800103c:	0332      	lsls	r2, r6, #12
 800103e:	1c3e      	adds	r6, r7, #0
 8001040:	4316      	orrs	r6, r2
 8001042:	4a0d      	ldr	r2, [pc, #52]	; (8001078 <TIM_PWMIConfig+0x170>)
 8001044:	b2b6      	uxth	r6, r6
 8001046:	4011      	ands	r1, r2
 8001048:	2210      	movs	r2, #16
 800104a:	4311      	orrs	r1, r2
 800104c:	4335      	orrs	r5, r6
 800104e:	0162      	lsls	r2, r4, #5
 8001050:	1c0c      	adds	r4, r1, #0
 8001052:	4314      	orrs	r4, r2
 8001054:	b2ad      	uxth	r5, r5
 8001056:	8305      	strh	r5, [r0, #24]
 8001058:	8404      	strh	r4, [r0, #32]
 800105a:	6981      	ldr	r1, [r0, #24]
 800105c:	4a07      	ldr	r2, [pc, #28]	; (800107c <TIM_PWMIConfig+0x174>)
 800105e:	400a      	ands	r2, r1
 8001060:	8302      	strh	r2, [r0, #24]
 8001062:	6982      	ldr	r2, [r0, #24]
 8001064:	b292      	uxth	r2, r2
 8001066:	4313      	orrs	r3, r2
 8001068:	b29b      	uxth	r3, r3
 800106a:	8303      	strh	r3, [r0, #24]
 800106c:	e7a9      	b.n	8000fc2 <TIM_PWMIConfig+0xba>
 800106e:	46c0      	nop			; (mov r8, r8)
 8001070:	0000ffef 	.word	0x0000ffef
 8001074:	00000cff 	.word	0x00000cff
 8001078:	0000ff5f 	.word	0x0000ff5f
 800107c:	0000f3ff 	.word	0x0000f3ff
 8001080:	0000fffe 	.word	0x0000fffe
 8001084:	0000ff0c 	.word	0x0000ff0c
 8001088:	0000fff5 	.word	0x0000fff5
 800108c:	0000fff3 	.word	0x0000fff3

08001090 <TIM_GetCapture1>:
 8001090:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8001092:	4770      	bx	lr

08001094 <TIM_GetCapture2>:
 8001094:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8001096:	4770      	bx	lr

08001098 <TIM_GetCapture3>:
 8001098:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800109a:	4770      	bx	lr

0800109c <TIM_GetCapture4>:
 800109c:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800109e:	4770      	bx	lr

080010a0 <TIM_SetIC1Prescaler>:
 80010a0:	6982      	ldr	r2, [r0, #24]
 80010a2:	4b04      	ldr	r3, [pc, #16]	; (80010b4 <TIM_SetIC1Prescaler+0x14>)
 80010a4:	4013      	ands	r3, r2
 80010a6:	8303      	strh	r3, [r0, #24]
 80010a8:	6983      	ldr	r3, [r0, #24]
 80010aa:	b29b      	uxth	r3, r3
 80010ac:	4319      	orrs	r1, r3
 80010ae:	8301      	strh	r1, [r0, #24]
 80010b0:	4770      	bx	lr
 80010b2:	46c0      	nop			; (mov r8, r8)
 80010b4:	0000fff3 	.word	0x0000fff3

080010b8 <TIM_SetIC2Prescaler>:
 80010b8:	6982      	ldr	r2, [r0, #24]
 80010ba:	4b05      	ldr	r3, [pc, #20]	; (80010d0 <TIM_SetIC2Prescaler+0x18>)
 80010bc:	0209      	lsls	r1, r1, #8
 80010be:	4013      	ands	r3, r2
 80010c0:	8303      	strh	r3, [r0, #24]
 80010c2:	6983      	ldr	r3, [r0, #24]
 80010c4:	b29b      	uxth	r3, r3
 80010c6:	4319      	orrs	r1, r3
 80010c8:	b289      	uxth	r1, r1
 80010ca:	8301      	strh	r1, [r0, #24]
 80010cc:	4770      	bx	lr
 80010ce:	46c0      	nop			; (mov r8, r8)
 80010d0:	0000f3ff 	.word	0x0000f3ff

080010d4 <TIM_SetIC3Prescaler>:
 80010d4:	69c2      	ldr	r2, [r0, #28]
 80010d6:	4b04      	ldr	r3, [pc, #16]	; (80010e8 <TIM_SetIC3Prescaler+0x14>)
 80010d8:	4013      	ands	r3, r2
 80010da:	8383      	strh	r3, [r0, #28]
 80010dc:	69c3      	ldr	r3, [r0, #28]
 80010de:	b29b      	uxth	r3, r3
 80010e0:	4319      	orrs	r1, r3
 80010e2:	8381      	strh	r1, [r0, #28]
 80010e4:	4770      	bx	lr
 80010e6:	46c0      	nop			; (mov r8, r8)
 80010e8:	0000fff3 	.word	0x0000fff3

080010ec <TIM_SetIC4Prescaler>:
 80010ec:	69c2      	ldr	r2, [r0, #28]
 80010ee:	4b05      	ldr	r3, [pc, #20]	; (8001104 <TIM_SetIC4Prescaler+0x18>)
 80010f0:	0209      	lsls	r1, r1, #8
 80010f2:	4013      	ands	r3, r2
 80010f4:	8383      	strh	r3, [r0, #28]
 80010f6:	69c3      	ldr	r3, [r0, #28]
 80010f8:	b29b      	uxth	r3, r3
 80010fa:	4319      	orrs	r1, r3
 80010fc:	b289      	uxth	r1, r1
 80010fe:	8381      	strh	r1, [r0, #28]
 8001100:	4770      	bx	lr
 8001102:	46c0      	nop			; (mov r8, r8)
 8001104:	0000f3ff 	.word	0x0000f3ff

08001108 <TIM_ITConfig>:
 8001108:	68c3      	ldr	r3, [r0, #12]
 800110a:	b29b      	uxth	r3, r3
 800110c:	2a00      	cmp	r2, #0
 800110e:	d102      	bne.n	8001116 <TIM_ITConfig+0xe>
 8001110:	438b      	bics	r3, r1
 8001112:	8183      	strh	r3, [r0, #12]
 8001114:	4770      	bx	lr
 8001116:	4319      	orrs	r1, r3
 8001118:	8181      	strh	r1, [r0, #12]
 800111a:	e7fb      	b.n	8001114 <TIM_ITConfig+0xc>

0800111c <TIM_GenerateEvent>:
 800111c:	8281      	strh	r1, [r0, #20]
 800111e:	4770      	bx	lr

08001120 <TIM_GetFlagStatus>:
 8001120:	6900      	ldr	r0, [r0, #16]
 8001122:	4008      	ands	r0, r1
 8001124:	1e43      	subs	r3, r0, #1
 8001126:	4198      	sbcs	r0, r3
 8001128:	b2c0      	uxtb	r0, r0
 800112a:	4770      	bx	lr

0800112c <TIM_ClearFlag>:
 800112c:	43c9      	mvns	r1, r1
 800112e:	b289      	uxth	r1, r1
 8001130:	8201      	strh	r1, [r0, #16]
 8001132:	4770      	bx	lr

08001134 <TIM_GetITStatus>:
 8001134:	6903      	ldr	r3, [r0, #16]
 8001136:	68c0      	ldr	r0, [r0, #12]
 8001138:	b282      	uxth	r2, r0
 800113a:	2000      	movs	r0, #0
 800113c:	420b      	tst	r3, r1
 800113e:	d003      	beq.n	8001148 <TIM_GetITStatus+0x14>
 8001140:	4011      	ands	r1, r2
 8001142:	1e4a      	subs	r2, r1, #1
 8001144:	4191      	sbcs	r1, r2
 8001146:	b2c8      	uxtb	r0, r1
 8001148:	4770      	bx	lr
 800114a:	46c0      	nop			; (mov r8, r8)

0800114c <TIM_ClearITPendingBit>:
 800114c:	43c9      	mvns	r1, r1
 800114e:	b289      	uxth	r1, r1
 8001150:	8201      	strh	r1, [r0, #16]
 8001152:	4770      	bx	lr

08001154 <TIM_DMAConfig>:
 8001154:	4311      	orrs	r1, r2
 8001156:	2348      	movs	r3, #72	; 0x48
 8001158:	52c1      	strh	r1, [r0, r3]
 800115a:	4770      	bx	lr

0800115c <TIM_DMACmd>:
 800115c:	68c3      	ldr	r3, [r0, #12]
 800115e:	b29b      	uxth	r3, r3
 8001160:	2a00      	cmp	r2, #0
 8001162:	d102      	bne.n	800116a <TIM_DMACmd+0xe>
 8001164:	438b      	bics	r3, r1
 8001166:	8183      	strh	r3, [r0, #12]
 8001168:	4770      	bx	lr
 800116a:	4319      	orrs	r1, r3
 800116c:	8181      	strh	r1, [r0, #12]
 800116e:	e7fb      	b.n	8001168 <TIM_DMACmd+0xc>

08001170 <TIM_SelectCCDMA>:
 8001170:	2900      	cmp	r1, #0
 8001172:	d104      	bne.n	800117e <TIM_SelectCCDMA+0xe>
 8001174:	6842      	ldr	r2, [r0, #4]
 8001176:	4b05      	ldr	r3, [pc, #20]	; (800118c <TIM_SelectCCDMA+0x1c>)
 8001178:	4013      	ands	r3, r2
 800117a:	8083      	strh	r3, [r0, #4]
 800117c:	4770      	bx	lr
 800117e:	6843      	ldr	r3, [r0, #4]
 8001180:	2208      	movs	r2, #8
 8001182:	b29b      	uxth	r3, r3
 8001184:	4313      	orrs	r3, r2
 8001186:	8083      	strh	r3, [r0, #4]
 8001188:	e7f8      	b.n	800117c <TIM_SelectCCDMA+0xc>
 800118a:	46c0      	nop			; (mov r8, r8)
 800118c:	0000fff7 	.word	0x0000fff7

08001190 <TIM_InternalClockConfig>:
 8001190:	6882      	ldr	r2, [r0, #8]
 8001192:	4b02      	ldr	r3, [pc, #8]	; (800119c <TIM_InternalClockConfig+0xc>)
 8001194:	4013      	ands	r3, r2
 8001196:	8103      	strh	r3, [r0, #8]
 8001198:	4770      	bx	lr
 800119a:	46c0      	nop			; (mov r8, r8)
 800119c:	0000fff8 	.word	0x0000fff8

080011a0 <TIM_ITRxExternalClockConfig>:
 80011a0:	6882      	ldr	r2, [r0, #8]
 80011a2:	4b05      	ldr	r3, [pc, #20]	; (80011b8 <TIM_ITRxExternalClockConfig+0x18>)
 80011a4:	4013      	ands	r3, r2
 80011a6:	4319      	orrs	r1, r3
 80011a8:	8101      	strh	r1, [r0, #8]
 80011aa:	6883      	ldr	r3, [r0, #8]
 80011ac:	2207      	movs	r2, #7
 80011ae:	b29b      	uxth	r3, r3
 80011b0:	4313      	orrs	r3, r2
 80011b2:	8103      	strh	r3, [r0, #8]
 80011b4:	4770      	bx	lr
 80011b6:	46c0      	nop			; (mov r8, r8)
 80011b8:	0000ff8f 	.word	0x0000ff8f

080011bc <TIM_TIxExternalClockConfig>:
 80011bc:	b570      	push	{r4, r5, r6, lr}
 80011be:	6a05      	ldr	r5, [r0, #32]
 80011c0:	2960      	cmp	r1, #96	; 0x60
 80011c2:	d01e      	beq.n	8001202 <TIM_TIxExternalClockConfig+0x46>
 80011c4:	4c1b      	ldr	r4, [pc, #108]	; (8001234 <TIM_TIxExternalClockConfig+0x78>)
 80011c6:	011b      	lsls	r3, r3, #4
 80011c8:	402c      	ands	r4, r5
 80011ca:	8404      	strh	r4, [r0, #32]
 80011cc:	6985      	ldr	r5, [r0, #24]
 80011ce:	4c1a      	ldr	r4, [pc, #104]	; (8001238 <TIM_TIxExternalClockConfig+0x7c>)
 80011d0:	6a06      	ldr	r6, [r0, #32]
 80011d2:	4025      	ands	r5, r4
 80011d4:	2401      	movs	r4, #1
 80011d6:	4325      	orrs	r5, r4
 80011d8:	b2ad      	uxth	r5, r5
 80011da:	432b      	orrs	r3, r5
 80011dc:	4d17      	ldr	r5, [pc, #92]	; (800123c <TIM_TIxExternalClockConfig+0x80>)
 80011de:	b29b      	uxth	r3, r3
 80011e0:	4035      	ands	r5, r6
 80011e2:	432c      	orrs	r4, r5
 80011e4:	b2a4      	uxth	r4, r4
 80011e6:	4322      	orrs	r2, r4
 80011e8:	8303      	strh	r3, [r0, #24]
 80011ea:	8402      	strh	r2, [r0, #32]
 80011ec:	6882      	ldr	r2, [r0, #8]
 80011ee:	4b14      	ldr	r3, [pc, #80]	; (8001240 <TIM_TIxExternalClockConfig+0x84>)
 80011f0:	4013      	ands	r3, r2
 80011f2:	4319      	orrs	r1, r3
 80011f4:	8101      	strh	r1, [r0, #8]
 80011f6:	6883      	ldr	r3, [r0, #8]
 80011f8:	2207      	movs	r2, #7
 80011fa:	b29b      	uxth	r3, r3
 80011fc:	4313      	orrs	r3, r2
 80011fe:	8103      	strh	r3, [r0, #8]
 8001200:	bd70      	pop	{r4, r5, r6, pc}
 8001202:	4c10      	ldr	r4, [pc, #64]	; (8001244 <TIM_TIxExternalClockConfig+0x88>)
 8001204:	402c      	ands	r4, r5
 8001206:	8404      	strh	r4, [r0, #32]
 8001208:	6986      	ldr	r6, [r0, #24]
 800120a:	4c0f      	ldr	r4, [pc, #60]	; (8001248 <TIM_TIxExternalClockConfig+0x8c>)
 800120c:	6a05      	ldr	r5, [r0, #32]
 800120e:	4026      	ands	r6, r4
 8001210:	2480      	movs	r4, #128	; 0x80
 8001212:	0064      	lsls	r4, r4, #1
 8001214:	4326      	orrs	r6, r4
 8001216:	031c      	lsls	r4, r3, #12
 8001218:	1c33      	adds	r3, r6, #0
 800121a:	4323      	orrs	r3, r4
 800121c:	4c0b      	ldr	r4, [pc, #44]	; (800124c <TIM_TIxExternalClockConfig+0x90>)
 800121e:	b29b      	uxth	r3, r3
 8001220:	4025      	ands	r5, r4
 8001222:	2410      	movs	r4, #16
 8001224:	4325      	orrs	r5, r4
 8001226:	0114      	lsls	r4, r2, #4
 8001228:	1c2a      	adds	r2, r5, #0
 800122a:	4322      	orrs	r2, r4
 800122c:	b292      	uxth	r2, r2
 800122e:	8303      	strh	r3, [r0, #24]
 8001230:	8402      	strh	r2, [r0, #32]
 8001232:	e7db      	b.n	80011ec <TIM_TIxExternalClockConfig+0x30>
 8001234:	0000fffe 	.word	0x0000fffe
 8001238:	0000ff0c 	.word	0x0000ff0c
 800123c:	0000fff5 	.word	0x0000fff5
 8001240:	0000ff8f 	.word	0x0000ff8f
 8001244:	0000ffef 	.word	0x0000ffef
 8001248:	00000cff 	.word	0x00000cff
 800124c:	0000ff5f 	.word	0x0000ff5f

08001250 <TIM_ETRClockMode1Config>:
 8001250:	b510      	push	{r4, lr}
 8001252:	021b      	lsls	r3, r3, #8
 8001254:	6884      	ldr	r4, [r0, #8]
 8001256:	431a      	orrs	r2, r3
 8001258:	23ff      	movs	r3, #255	; 0xff
 800125a:	401c      	ands	r4, r3
 800125c:	4322      	orrs	r2, r4
 800125e:	b292      	uxth	r2, r2
 8001260:	4311      	orrs	r1, r2
 8001262:	8101      	strh	r1, [r0, #8]
 8001264:	6882      	ldr	r2, [r0, #8]
 8001266:	4b03      	ldr	r3, [pc, #12]	; (8001274 <TIM_ETRClockMode1Config+0x24>)
 8001268:	4013      	ands	r3, r2
 800126a:	2277      	movs	r2, #119	; 0x77
 800126c:	4313      	orrs	r3, r2
 800126e:	8103      	strh	r3, [r0, #8]
 8001270:	bd10      	pop	{r4, pc}
 8001272:	46c0      	nop			; (mov r8, r8)
 8001274:	0000ff88 	.word	0x0000ff88

08001278 <TIM_ETRClockMode2Config>:
 8001278:	b510      	push	{r4, lr}
 800127a:	021b      	lsls	r3, r3, #8
 800127c:	6884      	ldr	r4, [r0, #8]
 800127e:	431a      	orrs	r2, r3
 8001280:	23ff      	movs	r3, #255	; 0xff
 8001282:	401c      	ands	r4, r3
 8001284:	4322      	orrs	r2, r4
 8001286:	b292      	uxth	r2, r2
 8001288:	4311      	orrs	r1, r2
 800128a:	8101      	strh	r1, [r0, #8]
 800128c:	6882      	ldr	r2, [r0, #8]
 800128e:	2380      	movs	r3, #128	; 0x80
 8001290:	b292      	uxth	r2, r2
 8001292:	01db      	lsls	r3, r3, #7
 8001294:	4313      	orrs	r3, r2
 8001296:	8103      	strh	r3, [r0, #8]
 8001298:	bd10      	pop	{r4, pc}
 800129a:	46c0      	nop			; (mov r8, r8)

0800129c <TIM_SelectInputTrigger>:
 800129c:	6882      	ldr	r2, [r0, #8]
 800129e:	4b02      	ldr	r3, [pc, #8]	; (80012a8 <TIM_SelectInputTrigger+0xc>)
 80012a0:	4013      	ands	r3, r2
 80012a2:	4319      	orrs	r1, r3
 80012a4:	8101      	strh	r1, [r0, #8]
 80012a6:	4770      	bx	lr
 80012a8:	0000ff8f 	.word	0x0000ff8f

080012ac <TIM_SelectOutputTrigger>:
 80012ac:	6842      	ldr	r2, [r0, #4]
 80012ae:	4b04      	ldr	r3, [pc, #16]	; (80012c0 <TIM_SelectOutputTrigger+0x14>)
 80012b0:	4013      	ands	r3, r2
 80012b2:	8083      	strh	r3, [r0, #4]
 80012b4:	6843      	ldr	r3, [r0, #4]
 80012b6:	b29b      	uxth	r3, r3
 80012b8:	4319      	orrs	r1, r3
 80012ba:	8081      	strh	r1, [r0, #4]
 80012bc:	4770      	bx	lr
 80012be:	46c0      	nop			; (mov r8, r8)
 80012c0:	0000ff8f 	.word	0x0000ff8f

080012c4 <TIM_SelectSlaveMode>:
 80012c4:	6882      	ldr	r2, [r0, #8]
 80012c6:	4b04      	ldr	r3, [pc, #16]	; (80012d8 <TIM_SelectSlaveMode+0x14>)
 80012c8:	4013      	ands	r3, r2
 80012ca:	8103      	strh	r3, [r0, #8]
 80012cc:	6883      	ldr	r3, [r0, #8]
 80012ce:	b29b      	uxth	r3, r3
 80012d0:	4319      	orrs	r1, r3
 80012d2:	8101      	strh	r1, [r0, #8]
 80012d4:	4770      	bx	lr
 80012d6:	46c0      	nop			; (mov r8, r8)
 80012d8:	0000fff8 	.word	0x0000fff8

080012dc <TIM_SelectMasterSlaveMode>:
 80012dc:	6882      	ldr	r2, [r0, #8]
 80012de:	4b04      	ldr	r3, [pc, #16]	; (80012f0 <TIM_SelectMasterSlaveMode+0x14>)
 80012e0:	4013      	ands	r3, r2
 80012e2:	8103      	strh	r3, [r0, #8]
 80012e4:	6883      	ldr	r3, [r0, #8]
 80012e6:	b29b      	uxth	r3, r3
 80012e8:	4319      	orrs	r1, r3
 80012ea:	8101      	strh	r1, [r0, #8]
 80012ec:	4770      	bx	lr
 80012ee:	46c0      	nop			; (mov r8, r8)
 80012f0:	0000ff7f 	.word	0x0000ff7f

080012f4 <TIM_ETRConfig>:
 80012f4:	b530      	push	{r4, r5, lr}
 80012f6:	6885      	ldr	r5, [r0, #8]
 80012f8:	24ff      	movs	r4, #255	; 0xff
 80012fa:	402c      	ands	r4, r5
 80012fc:	4321      	orrs	r1, r4
 80012fe:	430a      	orrs	r2, r1
 8001300:	021b      	lsls	r3, r3, #8
 8001302:	431a      	orrs	r2, r3
 8001304:	b292      	uxth	r2, r2
 8001306:	8102      	strh	r2, [r0, #8]
 8001308:	bd30      	pop	{r4, r5, pc}
 800130a:	46c0      	nop			; (mov r8, r8)

0800130c <TIM_EncoderInterfaceConfig>:
 800130c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800130e:	6887      	ldr	r7, [r0, #8]
 8001310:	4c09      	ldr	r4, [pc, #36]	; (8001338 <TIM_EncoderInterfaceConfig+0x2c>)
 8001312:	6985      	ldr	r5, [r0, #24]
 8001314:	403c      	ands	r4, r7
 8001316:	4321      	orrs	r1, r4
 8001318:	4c08      	ldr	r4, [pc, #32]	; (800133c <TIM_EncoderInterfaceConfig+0x30>)
 800131a:	6a06      	ldr	r6, [r0, #32]
 800131c:	402c      	ands	r4, r5
 800131e:	2502      	movs	r5, #2
 8001320:	35ff      	adds	r5, #255	; 0xff
 8001322:	432c      	orrs	r4, r5
 8001324:	4d06      	ldr	r5, [pc, #24]	; (8001340 <TIM_EncoderInterfaceConfig+0x34>)
 8001326:	011b      	lsls	r3, r3, #4
 8001328:	4035      	ands	r5, r6
 800132a:	432a      	orrs	r2, r5
 800132c:	431a      	orrs	r2, r3
 800132e:	b292      	uxth	r2, r2
 8001330:	8101      	strh	r1, [r0, #8]
 8001332:	8304      	strh	r4, [r0, #24]
 8001334:	8402      	strh	r2, [r0, #32]
 8001336:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001338:	0000fff8 	.word	0x0000fff8
 800133c:	0000fcfc 	.word	0x0000fcfc
 8001340:	0000ffdd 	.word	0x0000ffdd

08001344 <TIM_SelectHallSensor>:
 8001344:	2900      	cmp	r1, #0
 8001346:	d104      	bne.n	8001352 <TIM_SelectHallSensor+0xe>
 8001348:	6842      	ldr	r2, [r0, #4]
 800134a:	4b05      	ldr	r3, [pc, #20]	; (8001360 <TIM_SelectHallSensor+0x1c>)
 800134c:	4013      	ands	r3, r2
 800134e:	8083      	strh	r3, [r0, #4]
 8001350:	4770      	bx	lr
 8001352:	6843      	ldr	r3, [r0, #4]
 8001354:	2280      	movs	r2, #128	; 0x80
 8001356:	b29b      	uxth	r3, r3
 8001358:	4313      	orrs	r3, r2
 800135a:	8083      	strh	r3, [r0, #4]
 800135c:	e7f8      	b.n	8001350 <TIM_SelectHallSensor+0xc>
 800135e:	46c0      	nop			; (mov r8, r8)
 8001360:	0000ff7f 	.word	0x0000ff7f

08001364 <TIM_RemapConfig>:
 8001364:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8001366:	0c0b      	lsrs	r3, r1, #16
 8001368:	401a      	ands	r2, r3
 800136a:	2350      	movs	r3, #80	; 0x50
 800136c:	52c2      	strh	r2, [r0, r3]
 800136e:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8001370:	4311      	orrs	r1, r2
 8001372:	b289      	uxth	r1, r1
 8001374:	52c1      	strh	r1, [r0, r3]
 8001376:	4770      	bx	lr

08001378 <__aeabi_uidiv>:
 8001378:	2900      	cmp	r1, #0
 800137a:	d034      	beq.n	80013e6 <.udivsi3_skip_div0_test+0x6a>

0800137c <.udivsi3_skip_div0_test>:
 800137c:	2301      	movs	r3, #1
 800137e:	2200      	movs	r2, #0
 8001380:	b410      	push	{r4}
 8001382:	4288      	cmp	r0, r1
 8001384:	d32c      	bcc.n	80013e0 <.udivsi3_skip_div0_test+0x64>
 8001386:	2401      	movs	r4, #1
 8001388:	0724      	lsls	r4, r4, #28
 800138a:	42a1      	cmp	r1, r4
 800138c:	d204      	bcs.n	8001398 <.udivsi3_skip_div0_test+0x1c>
 800138e:	4281      	cmp	r1, r0
 8001390:	d202      	bcs.n	8001398 <.udivsi3_skip_div0_test+0x1c>
 8001392:	0109      	lsls	r1, r1, #4
 8001394:	011b      	lsls	r3, r3, #4
 8001396:	e7f8      	b.n	800138a <.udivsi3_skip_div0_test+0xe>
 8001398:	00e4      	lsls	r4, r4, #3
 800139a:	42a1      	cmp	r1, r4
 800139c:	d204      	bcs.n	80013a8 <.udivsi3_skip_div0_test+0x2c>
 800139e:	4281      	cmp	r1, r0
 80013a0:	d202      	bcs.n	80013a8 <.udivsi3_skip_div0_test+0x2c>
 80013a2:	0049      	lsls	r1, r1, #1
 80013a4:	005b      	lsls	r3, r3, #1
 80013a6:	e7f8      	b.n	800139a <.udivsi3_skip_div0_test+0x1e>
 80013a8:	4288      	cmp	r0, r1
 80013aa:	d301      	bcc.n	80013b0 <.udivsi3_skip_div0_test+0x34>
 80013ac:	1a40      	subs	r0, r0, r1
 80013ae:	431a      	orrs	r2, r3
 80013b0:	084c      	lsrs	r4, r1, #1
 80013b2:	42a0      	cmp	r0, r4
 80013b4:	d302      	bcc.n	80013bc <.udivsi3_skip_div0_test+0x40>
 80013b6:	1b00      	subs	r0, r0, r4
 80013b8:	085c      	lsrs	r4, r3, #1
 80013ba:	4322      	orrs	r2, r4
 80013bc:	088c      	lsrs	r4, r1, #2
 80013be:	42a0      	cmp	r0, r4
 80013c0:	d302      	bcc.n	80013c8 <.udivsi3_skip_div0_test+0x4c>
 80013c2:	1b00      	subs	r0, r0, r4
 80013c4:	089c      	lsrs	r4, r3, #2
 80013c6:	4322      	orrs	r2, r4
 80013c8:	08cc      	lsrs	r4, r1, #3
 80013ca:	42a0      	cmp	r0, r4
 80013cc:	d302      	bcc.n	80013d4 <.udivsi3_skip_div0_test+0x58>
 80013ce:	1b00      	subs	r0, r0, r4
 80013d0:	08dc      	lsrs	r4, r3, #3
 80013d2:	4322      	orrs	r2, r4
 80013d4:	2800      	cmp	r0, #0
 80013d6:	d003      	beq.n	80013e0 <.udivsi3_skip_div0_test+0x64>
 80013d8:	091b      	lsrs	r3, r3, #4
 80013da:	d001      	beq.n	80013e0 <.udivsi3_skip_div0_test+0x64>
 80013dc:	0909      	lsrs	r1, r1, #4
 80013de:	e7e3      	b.n	80013a8 <.udivsi3_skip_div0_test+0x2c>
 80013e0:	1c10      	adds	r0, r2, #0
 80013e2:	bc10      	pop	{r4}
 80013e4:	4770      	bx	lr
 80013e6:	2800      	cmp	r0, #0
 80013e8:	d001      	beq.n	80013ee <.udivsi3_skip_div0_test+0x72>
 80013ea:	2000      	movs	r0, #0
 80013ec:	43c0      	mvns	r0, r0
 80013ee:	b407      	push	{r0, r1, r2}
 80013f0:	4802      	ldr	r0, [pc, #8]	; (80013fc <.udivsi3_skip_div0_test+0x80>)
 80013f2:	a102      	add	r1, pc, #8	; (adr r1, 80013fc <.udivsi3_skip_div0_test+0x80>)
 80013f4:	1840      	adds	r0, r0, r1
 80013f6:	9002      	str	r0, [sp, #8]
 80013f8:	bd03      	pop	{r0, r1, pc}
 80013fa:	46c0      	nop			; (mov r8, r8)
 80013fc:	00000019 	.word	0x00000019

08001400 <__aeabi_uidivmod>:
 8001400:	2900      	cmp	r1, #0
 8001402:	d0f0      	beq.n	80013e6 <.udivsi3_skip_div0_test+0x6a>
 8001404:	b503      	push	{r0, r1, lr}
 8001406:	f7ff ffb9 	bl	800137c <.udivsi3_skip_div0_test>
 800140a:	bc0e      	pop	{r1, r2, r3}
 800140c:	4342      	muls	r2, r0
 800140e:	1a89      	subs	r1, r1, r2
 8001410:	4718      	bx	r3
 8001412:	46c0      	nop			; (mov r8, r8)

08001414 <__aeabi_idiv0>:
 8001414:	4770      	bx	lr
 8001416:	46c0      	nop			; (mov r8, r8)

08001418 <__aeabi_fmul>:
 8001418:	b5f0      	push	{r4, r5, r6, r7, lr}
 800141a:	465f      	mov	r7, fp
 800141c:	4656      	mov	r6, sl
 800141e:	464d      	mov	r5, r9
 8001420:	4644      	mov	r4, r8
 8001422:	b4f0      	push	{r4, r5, r6, r7}
 8001424:	0244      	lsls	r4, r0, #9
 8001426:	0046      	lsls	r6, r0, #1
 8001428:	b083      	sub	sp, #12
 800142a:	1c0f      	adds	r7, r1, #0
 800142c:	0a64      	lsrs	r4, r4, #9
 800142e:	0e36      	lsrs	r6, r6, #24
 8001430:	0fc5      	lsrs	r5, r0, #31
 8001432:	2e00      	cmp	r6, #0
 8001434:	d041      	beq.n	80014ba <__aeabi_fmul+0xa2>
 8001436:	2eff      	cmp	r6, #255	; 0xff
 8001438:	d022      	beq.n	8001480 <__aeabi_fmul+0x68>
 800143a:	2380      	movs	r3, #128	; 0x80
 800143c:	041b      	lsls	r3, r3, #16
 800143e:	2000      	movs	r0, #0
 8001440:	431c      	orrs	r4, r3
 8001442:	00e4      	lsls	r4, r4, #3
 8001444:	3e7f      	subs	r6, #127	; 0x7f
 8001446:	4682      	mov	sl, r0
 8001448:	4680      	mov	r8, r0
 800144a:	1c39      	adds	r1, r7, #0
 800144c:	004b      	lsls	r3, r1, #1
 800144e:	027f      	lsls	r7, r7, #9
 8001450:	0fc9      	lsrs	r1, r1, #31
 8001452:	0a7f      	lsrs	r7, r7, #9
 8001454:	0e1b      	lsrs	r3, r3, #24
 8001456:	468b      	mov	fp, r1
 8001458:	d03b      	beq.n	80014d2 <__aeabi_fmul+0xba>
 800145a:	2bff      	cmp	r3, #255	; 0xff
 800145c:	d034      	beq.n	80014c8 <__aeabi_fmul+0xb0>
 800145e:	2280      	movs	r2, #128	; 0x80
 8001460:	0412      	lsls	r2, r2, #16
 8001462:	4317      	orrs	r7, r2
 8001464:	00ff      	lsls	r7, r7, #3
 8001466:	3b7f      	subs	r3, #127	; 0x7f
 8001468:	2100      	movs	r1, #0
 800146a:	465a      	mov	r2, fp
 800146c:	406a      	eors	r2, r5
 800146e:	9201      	str	r2, [sp, #4]
 8001470:	4652      	mov	r2, sl
 8001472:	430a      	orrs	r2, r1
 8001474:	2a0f      	cmp	r2, #15
 8001476:	d863      	bhi.n	8001540 <__aeabi_fmul+0x128>
 8001478:	487a      	ldr	r0, [pc, #488]	; (8001664 <__aeabi_fmul+0x24c>)
 800147a:	0092      	lsls	r2, r2, #2
 800147c:	5882      	ldr	r2, [r0, r2]
 800147e:	4697      	mov	pc, r2
 8001480:	2c00      	cmp	r4, #0
 8001482:	d13f      	bne.n	8001504 <__aeabi_fmul+0xec>
 8001484:	2208      	movs	r2, #8
 8001486:	2302      	movs	r3, #2
 8001488:	4692      	mov	sl, r2
 800148a:	4698      	mov	r8, r3
 800148c:	e7dd      	b.n	800144a <__aeabi_fmul+0x32>
 800148e:	9501      	str	r5, [sp, #4]
 8001490:	4640      	mov	r0, r8
 8001492:	2802      	cmp	r0, #2
 8001494:	d12a      	bne.n	80014ec <__aeabi_fmul+0xd4>
 8001496:	9a01      	ldr	r2, [sp, #4]
 8001498:	2501      	movs	r5, #1
 800149a:	4015      	ands	r5, r2
 800149c:	23ff      	movs	r3, #255	; 0xff
 800149e:	2400      	movs	r4, #0
 80014a0:	0264      	lsls	r4, r4, #9
 80014a2:	05db      	lsls	r3, r3, #23
 80014a4:	0a60      	lsrs	r0, r4, #9
 80014a6:	07ed      	lsls	r5, r5, #31
 80014a8:	4318      	orrs	r0, r3
 80014aa:	4328      	orrs	r0, r5
 80014ac:	b003      	add	sp, #12
 80014ae:	bc3c      	pop	{r2, r3, r4, r5}
 80014b0:	4690      	mov	r8, r2
 80014b2:	4699      	mov	r9, r3
 80014b4:	46a2      	mov	sl, r4
 80014b6:	46ab      	mov	fp, r5
 80014b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014ba:	2c00      	cmp	r4, #0
 80014bc:	d127      	bne.n	800150e <__aeabi_fmul+0xf6>
 80014be:	2004      	movs	r0, #4
 80014c0:	2201      	movs	r2, #1
 80014c2:	4682      	mov	sl, r0
 80014c4:	4690      	mov	r8, r2
 80014c6:	e7c0      	b.n	800144a <__aeabi_fmul+0x32>
 80014c8:	1c39      	adds	r1, r7, #0
 80014ca:	1e4a      	subs	r2, r1, #1
 80014cc:	4191      	sbcs	r1, r2
 80014ce:	3102      	adds	r1, #2
 80014d0:	e7cb      	b.n	800146a <__aeabi_fmul+0x52>
 80014d2:	2101      	movs	r1, #1
 80014d4:	2f00      	cmp	r7, #0
 80014d6:	d0c8      	beq.n	800146a <__aeabi_fmul+0x52>
 80014d8:	1c38      	adds	r0, r7, #0
 80014da:	f000 f8e7 	bl	80016ac <__clzsi2>
 80014de:	1f43      	subs	r3, r0, #5
 80014e0:	409f      	lsls	r7, r3
 80014e2:	2376      	movs	r3, #118	; 0x76
 80014e4:	425b      	negs	r3, r3
 80014e6:	1a1b      	subs	r3, r3, r0
 80014e8:	2100      	movs	r1, #0
 80014ea:	e7be      	b.n	800146a <__aeabi_fmul+0x52>
 80014ec:	2803      	cmp	r0, #3
 80014ee:	d100      	bne.n	80014f2 <__aeabi_fmul+0xda>
 80014f0:	e0ae      	b.n	8001650 <__aeabi_fmul+0x238>
 80014f2:	2801      	cmp	r0, #1
 80014f4:	d14f      	bne.n	8001596 <__aeabi_fmul+0x17e>
 80014f6:	9801      	ldr	r0, [sp, #4]
 80014f8:	4642      	mov	r2, r8
 80014fa:	4010      	ands	r0, r2
 80014fc:	b2c5      	uxtb	r5, r0
 80014fe:	2300      	movs	r3, #0
 8001500:	2400      	movs	r4, #0
 8001502:	e7cd      	b.n	80014a0 <__aeabi_fmul+0x88>
 8001504:	230c      	movs	r3, #12
 8001506:	2003      	movs	r0, #3
 8001508:	469a      	mov	sl, r3
 800150a:	4680      	mov	r8, r0
 800150c:	e79d      	b.n	800144a <__aeabi_fmul+0x32>
 800150e:	1c20      	adds	r0, r4, #0
 8001510:	f000 f8cc 	bl	80016ac <__clzsi2>
 8001514:	2676      	movs	r6, #118	; 0x76
 8001516:	1f43      	subs	r3, r0, #5
 8001518:	409c      	lsls	r4, r3
 800151a:	4276      	negs	r6, r6
 800151c:	2300      	movs	r3, #0
 800151e:	1a36      	subs	r6, r6, r0
 8001520:	469a      	mov	sl, r3
 8001522:	4698      	mov	r8, r3
 8001524:	e791      	b.n	800144a <__aeabi_fmul+0x32>
 8001526:	2480      	movs	r4, #128	; 0x80
 8001528:	2500      	movs	r5, #0
 800152a:	03e4      	lsls	r4, r4, #15
 800152c:	23ff      	movs	r3, #255	; 0xff
 800152e:	e7b7      	b.n	80014a0 <__aeabi_fmul+0x88>
 8001530:	465b      	mov	r3, fp
 8001532:	1c3c      	adds	r4, r7, #0
 8001534:	9301      	str	r3, [sp, #4]
 8001536:	4688      	mov	r8, r1
 8001538:	e7aa      	b.n	8001490 <__aeabi_fmul+0x78>
 800153a:	1c3c      	adds	r4, r7, #0
 800153c:	4688      	mov	r8, r1
 800153e:	e7a7      	b.n	8001490 <__aeabi_fmul+0x78>
 8001540:	0c25      	lsrs	r5, r4, #16
 8001542:	0424      	lsls	r4, r4, #16
 8001544:	0c3a      	lsrs	r2, r7, #16
 8001546:	0c24      	lsrs	r4, r4, #16
 8001548:	043f      	lsls	r7, r7, #16
 800154a:	18f6      	adds	r6, r6, r3
 800154c:	0c3f      	lsrs	r7, r7, #16
 800154e:	1c21      	adds	r1, r4, #0
 8001550:	1c23      	adds	r3, r4, #0
 8001552:	4379      	muls	r1, r7
 8001554:	4353      	muls	r3, r2
 8001556:	436f      	muls	r7, r5
 8001558:	4355      	muls	r5, r2
 800155a:	18fb      	adds	r3, r7, r3
 800155c:	0c0a      	lsrs	r2, r1, #16
 800155e:	189b      	adds	r3, r3, r2
 8001560:	46b1      	mov	r9, r6
 8001562:	429f      	cmp	r7, r3
 8001564:	d902      	bls.n	800156c <__aeabi_fmul+0x154>
 8001566:	2280      	movs	r2, #128	; 0x80
 8001568:	0252      	lsls	r2, r2, #9
 800156a:	18ad      	adds	r5, r5, r2
 800156c:	0409      	lsls	r1, r1, #16
 800156e:	041a      	lsls	r2, r3, #16
 8001570:	0c09      	lsrs	r1, r1, #16
 8001572:	1852      	adds	r2, r2, r1
 8001574:	0194      	lsls	r4, r2, #6
 8001576:	0c1b      	lsrs	r3, r3, #16
 8001578:	1e61      	subs	r1, r4, #1
 800157a:	418c      	sbcs	r4, r1
 800157c:	0e92      	lsrs	r2, r2, #26
 800157e:	18ed      	adds	r5, r5, r3
 8001580:	4314      	orrs	r4, r2
 8001582:	01ad      	lsls	r5, r5, #6
 8001584:	432c      	orrs	r4, r5
 8001586:	0123      	lsls	r3, r4, #4
 8001588:	d505      	bpl.n	8001596 <__aeabi_fmul+0x17e>
 800158a:	2201      	movs	r2, #1
 800158c:	0863      	lsrs	r3, r4, #1
 800158e:	2001      	movs	r0, #1
 8001590:	4014      	ands	r4, r2
 8001592:	4481      	add	r9, r0
 8001594:	431c      	orrs	r4, r3
 8001596:	464b      	mov	r3, r9
 8001598:	337f      	adds	r3, #127	; 0x7f
 800159a:	2b00      	cmp	r3, #0
 800159c:	dd2d      	ble.n	80015fa <__aeabi_fmul+0x1e2>
 800159e:	0760      	lsls	r0, r4, #29
 80015a0:	d004      	beq.n	80015ac <__aeabi_fmul+0x194>
 80015a2:	220f      	movs	r2, #15
 80015a4:	4022      	ands	r2, r4
 80015a6:	2a04      	cmp	r2, #4
 80015a8:	d000      	beq.n	80015ac <__aeabi_fmul+0x194>
 80015aa:	3404      	adds	r4, #4
 80015ac:	0122      	lsls	r2, r4, #4
 80015ae:	d503      	bpl.n	80015b8 <__aeabi_fmul+0x1a0>
 80015b0:	4b2d      	ldr	r3, [pc, #180]	; (8001668 <__aeabi_fmul+0x250>)
 80015b2:	401c      	ands	r4, r3
 80015b4:	464b      	mov	r3, r9
 80015b6:	3380      	adds	r3, #128	; 0x80
 80015b8:	2bfe      	cmp	r3, #254	; 0xfe
 80015ba:	dd17      	ble.n	80015ec <__aeabi_fmul+0x1d4>
 80015bc:	9b01      	ldr	r3, [sp, #4]
 80015be:	2501      	movs	r5, #1
 80015c0:	401d      	ands	r5, r3
 80015c2:	2400      	movs	r4, #0
 80015c4:	23ff      	movs	r3, #255	; 0xff
 80015c6:	e76b      	b.n	80014a0 <__aeabi_fmul+0x88>
 80015c8:	2080      	movs	r0, #128	; 0x80
 80015ca:	03c0      	lsls	r0, r0, #15
 80015cc:	4204      	tst	r4, r0
 80015ce:	d008      	beq.n	80015e2 <__aeabi_fmul+0x1ca>
 80015d0:	4207      	tst	r7, r0
 80015d2:	d106      	bne.n	80015e2 <__aeabi_fmul+0x1ca>
 80015d4:	1c04      	adds	r4, r0, #0
 80015d6:	433c      	orrs	r4, r7
 80015d8:	0264      	lsls	r4, r4, #9
 80015da:	0a64      	lsrs	r4, r4, #9
 80015dc:	465d      	mov	r5, fp
 80015de:	23ff      	movs	r3, #255	; 0xff
 80015e0:	e75e      	b.n	80014a0 <__aeabi_fmul+0x88>
 80015e2:	4304      	orrs	r4, r0
 80015e4:	0264      	lsls	r4, r4, #9
 80015e6:	0a64      	lsrs	r4, r4, #9
 80015e8:	23ff      	movs	r3, #255	; 0xff
 80015ea:	e759      	b.n	80014a0 <__aeabi_fmul+0x88>
 80015ec:	9801      	ldr	r0, [sp, #4]
 80015ee:	01a4      	lsls	r4, r4, #6
 80015f0:	2501      	movs	r5, #1
 80015f2:	0a64      	lsrs	r4, r4, #9
 80015f4:	b2db      	uxtb	r3, r3
 80015f6:	4005      	ands	r5, r0
 80015f8:	e752      	b.n	80014a0 <__aeabi_fmul+0x88>
 80015fa:	237e      	movs	r3, #126	; 0x7e
 80015fc:	425b      	negs	r3, r3
 80015fe:	464a      	mov	r2, r9
 8001600:	1a9b      	subs	r3, r3, r2
 8001602:	2b1b      	cmp	r3, #27
 8001604:	dd05      	ble.n	8001612 <__aeabi_fmul+0x1fa>
 8001606:	9b01      	ldr	r3, [sp, #4]
 8001608:	2501      	movs	r5, #1
 800160a:	401d      	ands	r5, r3
 800160c:	2400      	movs	r4, #0
 800160e:	2300      	movs	r3, #0
 8001610:	e746      	b.n	80014a0 <__aeabi_fmul+0x88>
 8001612:	1c22      	adds	r2, r4, #0
 8001614:	40da      	lsrs	r2, r3
 8001616:	464b      	mov	r3, r9
 8001618:	339e      	adds	r3, #158	; 0x9e
 800161a:	409c      	lsls	r4, r3
 800161c:	1c23      	adds	r3, r4, #0
 800161e:	1e5c      	subs	r4, r3, #1
 8001620:	41a3      	sbcs	r3, r4
 8001622:	4313      	orrs	r3, r2
 8001624:	0758      	lsls	r0, r3, #29
 8001626:	d004      	beq.n	8001632 <__aeabi_fmul+0x21a>
 8001628:	220f      	movs	r2, #15
 800162a:	401a      	ands	r2, r3
 800162c:	2a04      	cmp	r2, #4
 800162e:	d000      	beq.n	8001632 <__aeabi_fmul+0x21a>
 8001630:	3304      	adds	r3, #4
 8001632:	015a      	lsls	r2, r3, #5
 8001634:	d505      	bpl.n	8001642 <__aeabi_fmul+0x22a>
 8001636:	9b01      	ldr	r3, [sp, #4]
 8001638:	2501      	movs	r5, #1
 800163a:	401d      	ands	r5, r3
 800163c:	2400      	movs	r4, #0
 800163e:	2301      	movs	r3, #1
 8001640:	e72e      	b.n	80014a0 <__aeabi_fmul+0x88>
 8001642:	9801      	ldr	r0, [sp, #4]
 8001644:	019c      	lsls	r4, r3, #6
 8001646:	2501      	movs	r5, #1
 8001648:	0a64      	lsrs	r4, r4, #9
 800164a:	4005      	ands	r5, r0
 800164c:	2300      	movs	r3, #0
 800164e:	e727      	b.n	80014a0 <__aeabi_fmul+0x88>
 8001650:	2780      	movs	r7, #128	; 0x80
 8001652:	03ff      	lsls	r7, r7, #15
 8001654:	9b01      	ldr	r3, [sp, #4]
 8001656:	433c      	orrs	r4, r7
 8001658:	0264      	lsls	r4, r4, #9
 800165a:	2501      	movs	r5, #1
 800165c:	401d      	ands	r5, r3
 800165e:	0a64      	lsrs	r4, r4, #9
 8001660:	23ff      	movs	r3, #255	; 0xff
 8001662:	e71d      	b.n	80014a0 <__aeabi_fmul+0x88>
 8001664:	08001a88 	.word	0x08001a88
 8001668:	f7ffffff 	.word	0xf7ffffff

0800166c <__aeabi_f2iz>:
 800166c:	0243      	lsls	r3, r0, #9
 800166e:	0a59      	lsrs	r1, r3, #9
 8001670:	0043      	lsls	r3, r0, #1
 8001672:	0fc2      	lsrs	r2, r0, #31
 8001674:	0e1b      	lsrs	r3, r3, #24
 8001676:	2000      	movs	r0, #0
 8001678:	2b7e      	cmp	r3, #126	; 0x7e
 800167a:	dd0d      	ble.n	8001698 <__aeabi_f2iz+0x2c>
 800167c:	2b9d      	cmp	r3, #157	; 0x9d
 800167e:	dc0c      	bgt.n	800169a <__aeabi_f2iz+0x2e>
 8001680:	2080      	movs	r0, #128	; 0x80
 8001682:	0400      	lsls	r0, r0, #16
 8001684:	4301      	orrs	r1, r0
 8001686:	2b95      	cmp	r3, #149	; 0x95
 8001688:	dc0a      	bgt.n	80016a0 <__aeabi_f2iz+0x34>
 800168a:	2096      	movs	r0, #150	; 0x96
 800168c:	1ac3      	subs	r3, r0, r3
 800168e:	40d9      	lsrs	r1, r3
 8001690:	4248      	negs	r0, r1
 8001692:	2a00      	cmp	r2, #0
 8001694:	d100      	bne.n	8001698 <__aeabi_f2iz+0x2c>
 8001696:	1c08      	adds	r0, r1, #0
 8001698:	4770      	bx	lr
 800169a:	4b03      	ldr	r3, [pc, #12]	; (80016a8 <__aeabi_f2iz+0x3c>)
 800169c:	18d0      	adds	r0, r2, r3
 800169e:	e7fb      	b.n	8001698 <__aeabi_f2iz+0x2c>
 80016a0:	3b96      	subs	r3, #150	; 0x96
 80016a2:	4099      	lsls	r1, r3
 80016a4:	e7f4      	b.n	8001690 <__aeabi_f2iz+0x24>
 80016a6:	46c0      	nop			; (mov r8, r8)
 80016a8:	7fffffff 	.word	0x7fffffff

080016ac <__clzsi2>:
 80016ac:	211c      	movs	r1, #28
 80016ae:	2301      	movs	r3, #1
 80016b0:	041b      	lsls	r3, r3, #16
 80016b2:	4298      	cmp	r0, r3
 80016b4:	d301      	bcc.n	80016ba <__clzsi2+0xe>
 80016b6:	0c00      	lsrs	r0, r0, #16
 80016b8:	3910      	subs	r1, #16
 80016ba:	0a1b      	lsrs	r3, r3, #8
 80016bc:	4298      	cmp	r0, r3
 80016be:	d301      	bcc.n	80016c4 <__clzsi2+0x18>
 80016c0:	0a00      	lsrs	r0, r0, #8
 80016c2:	3908      	subs	r1, #8
 80016c4:	091b      	lsrs	r3, r3, #4
 80016c6:	4298      	cmp	r0, r3
 80016c8:	d301      	bcc.n	80016ce <__clzsi2+0x22>
 80016ca:	0900      	lsrs	r0, r0, #4
 80016cc:	3904      	subs	r1, #4
 80016ce:	a202      	add	r2, pc, #8	; (adr r2, 80016d8 <__clzsi2+0x2c>)
 80016d0:	5c10      	ldrb	r0, [r2, r0]
 80016d2:	1840      	adds	r0, r0, r1
 80016d4:	4770      	bx	lr
 80016d6:	46c0      	nop			; (mov r8, r8)
 80016d8:	02020304 	.word	0x02020304
 80016dc:	01010101 	.word	0x01010101
	...

080016e8 <TIM2_IRQHandler>:
volatile int led_state=1;
volatile float servo_angle= 0.0; // +/- 90.0 degrees
 int counter = 0;
void TIM2_IRQHandler(void)
{
  if (TIM_GetITStatus(TIM2, TIM_IT_Update) != RESET)
 80016e8:	2080      	movs	r0, #128	; 0x80
// Integers, or scaled integers (*10) will be more efficient here
volatile int led_state=1;
volatile float servo_angle= 0.0; // +/- 90.0 degrees
 int counter = 0;
void TIM2_IRQHandler(void)
{
 80016ea:	b508      	push	{r3, lr}
  if (TIM_GetITStatus(TIM2, TIM_IT_Update) != RESET)
 80016ec:	05c0      	lsls	r0, r0, #23
 80016ee:	2101      	movs	r1, #1
 80016f0:	f7ff fd20 	bl	8001134 <TIM_GetITStatus>
 80016f4:	2800      	cmp	r0, #0
 80016f6:	d011      	beq.n	800171c <TIM2_IRQHandler+0x34>
  { 
    
    TIM_ClearITPendingBit(TIM2, TIM_IT_Update);
 80016f8:	2080      	movs	r0, #128	; 0x80
 80016fa:	05c0      	lsls	r0, r0, #23
 80016fc:	2101      	movs	r1, #1
 80016fe:	f7ff fd25 	bl	800114c <TIM_ClearITPendingBit>
 
    // minimum high of 600 us for -90 degrees, with +90 degrees at 2400 us, 10 us per degree
    //  timer timebase set to us units to simplify the configuration/math
    TIM_SetCompare1(TIM2, 1500 + (int)(servo_angle * 10.0f) );
 8001702:	4b07      	ldr	r3, [pc, #28]	; (8001720 <TIM2_IRQHandler+0x38>)
 8001704:	4907      	ldr	r1, [pc, #28]	; (8001724 <TIM2_IRQHandler+0x3c>)
 8001706:	6818      	ldr	r0, [r3, #0]
 8001708:	f7ff fe86 	bl	8001418 <__aeabi_fmul>
 800170c:	f7ff ffae 	bl	800166c <__aeabi_f2iz>
 8001710:	4b05      	ldr	r3, [pc, #20]	; (8001728 <TIM2_IRQHandler+0x40>)
 8001712:	18c1      	adds	r1, r0, r3
 8001714:	2080      	movs	r0, #128	; 0x80
 8001716:	05c0      	lsls	r0, r0, #23
 8001718:	f7ff fa56 	bl	8000bc8 <TIM_SetCompare1>
    
  }
}
 800171c:	bd08      	pop	{r3, pc}
 800171e:	46c0      	nop			; (mov r8, r8)
 8001720:	2000001c 	.word	0x2000001c
 8001724:	41200000 	.word	0x41200000
 8001728:	000005dc 	.word	0x000005dc

0800172c <RCC_Configuration>:

  /* --------------------------- System Clocks Configuration -----------------*/
void RCC_Configuration(void)
{
 800172c:	b508      	push	{r3, lr}
  /* TIM3 clock enable */
  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
 800172e:	2001      	movs	r0, #1
 8001730:	1c01      	adds	r1, r0, #0
 8001732:	f7fe ffe5 	bl	8000700 <RCC_APB1PeriphClockCmd>
 
  /* GPIOD clock enable */
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA | RCC_AHBPeriph_GPIOB, ENABLE);
 8001736:	2003      	movs	r0, #3
 8001738:	2101      	movs	r1, #1
 800173a:	f7fe ffc9 	bl	80006d0 <RCC_AHBPeriphClockCmd>
}
 800173e:	bd08      	pop	{r3, pc}

08001740 <NVIC_Configuration>:

 /*--------------------------------- NVIC Configuration -------------------------*/
void NVIC_Configuration(void)
{ 
 8001740:	b507      	push	{r0, r1, r2, lr}
  NVIC_InitTypeDef NVIC_InitStructure;
 
  /* Enable the TIM2 gloabal Interrupt */
  NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
 8001742:	231c      	movs	r3, #28
 8001744:	a801      	add	r0, sp, #4
 8001746:	7003      	strb	r3, [r0, #0]
  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 8001748:	2300      	movs	r3, #0
 800174a:	7043      	strb	r3, [r0, #1]
  NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
 800174c:	2301      	movs	r3, #1
 800174e:	7083      	strb	r3, [r0, #2]
  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8001750:	70c3      	strb	r3, [r0, #3]
  NVIC_Init(&NVIC_InitStructure);
 8001752:	f7fe fe03 	bl	800035c <NVIC_Init>
}
 8001756:	bd07      	pop	{r0, r1, r2, pc}

08001758 <GPIO_Configuration>:

 /*--------------------------------- GPIO Configuration -------------------------*/
void GPIO_Configuration(void)
{
 8001758:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;                
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;              
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;

  GPIO_Init(GPIOA, &GPIO_InitStructure);
 800175a:	4f22      	ldr	r7, [pc, #136]	; (80017e4 <GPIO_Configuration+0x8c>)
 /*--------------------------------- GPIO Configuration -------------------------*/
void GPIO_Configuration(void)
{
  GPIO_InitTypeDef GPIO_InitStructure;

  GPIO_StructInit(&GPIO_InitStructure);
 800175c:	4668      	mov	r0, sp
 800175e:	f7fe fd9f 	bl	80002a0 <GPIO_StructInit>

  /*servo pin setup*/
  //PA1 is associated with TIM2_CH2
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_5;
 8001762:	2320      	movs	r3, #32
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;                
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;              
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
 8001764:	2401      	movs	r4, #1
  GPIO_StructInit(&GPIO_InitStructure);

  /*servo pin setup*/
  //PA1 is associated with TIM2_CH2
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_5;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;                
 8001766:	466a      	mov	r2, sp
 8001768:	2502      	movs	r5, #2
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;              
 800176a:	2600      	movs	r6, #0

  GPIO_StructInit(&GPIO_InitStructure);

  /*servo pin setup*/
  //PA1 is associated with TIM2_CH2
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_5;
 800176c:	9300      	str	r3, [sp, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;                
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;              
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;

  GPIO_Init(GPIOA, &GPIO_InitStructure);
 800176e:	1c38      	adds	r0, r7, #0
  //PA1 is associated with TIM2_CH2
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_5;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;                
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;              
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
 8001770:	2303      	movs	r3, #3

  GPIO_Init(GPIOA, &GPIO_InitStructure);
 8001772:	4669      	mov	r1, sp
  GPIO_StructInit(&GPIO_InitStructure);

  /*servo pin setup*/
  //PA1 is associated with TIM2_CH2
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_5;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;                
 8001774:	7115      	strb	r5, [r2, #4]
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;              
 8001776:	7196      	strb	r6, [r2, #6]
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
 8001778:	7153      	strb	r3, [r2, #5]
  /*servo pin setup*/
  //PA1 is associated with TIM2_CH2
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_5;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;                
  GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;              
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
 800177a:	71d4      	strb	r4, [r2, #7]
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;

  GPIO_Init(GPIOA, &GPIO_InitStructure);
 800177c:	f7fe fd38 	bl	80001f0 <GPIO_Init>
  GPIO_PinAFConfig(GPIOA, GPIO_PinSource5, GPIO_AF_TIM2);     //configure alternate function to us TIM2
 8001780:	1c22      	adds	r2, r4, #0
 8001782:	1c38      	adds	r0, r7, #0
 8001784:	2105      	movs	r1, #5
 8001786:	f7fe fdcd 	bl	8000324 <GPIO_PinAFConfig>

  /* I used this pin for debugging, it toggles an led whenever I pushed the buttons to set the servo position */
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_0;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;                             
 800178a:	466b      	mov	r3, sp
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOA, &GPIO_InitStructure);
 800178c:	1c38      	adds	r0, r7, #0
 800178e:	4669      	mov	r1, sp
  /* used for setting the position of the servo*/
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_12;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
 8001790:	4f15      	ldr	r7, [pc, #84]	; (80017e8 <GPIO_Configuration+0x90>)
  GPIO_Init(GPIOA, &GPIO_InitStructure);
  GPIO_PinAFConfig(GPIOA, GPIO_PinSource5, GPIO_AF_TIM2);     //configure alternate function to us TIM2

  /* I used this pin for debugging, it toggles an led whenever I pushed the buttons to set the servo position */
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_0;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;                             
 8001792:	711c      	strb	r4, [r3, #4]
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
 8001794:	71dc      	strb	r4, [r3, #7]
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
 8001796:	715c      	strb	r4, [r3, #5]

  GPIO_Init(GPIOA, &GPIO_InitStructure);
  GPIO_PinAFConfig(GPIOA, GPIO_PinSource5, GPIO_AF_TIM2);     //configure alternate function to us TIM2

  /* I used this pin for debugging, it toggles an led whenever I pushed the buttons to set the servo position */
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_0;
 8001798:	9400      	str	r4, [sp, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;                             
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOA, &GPIO_InitStructure);
 800179a:	f7fe fd29 	bl	80001f0 <GPIO_Init>

  /*----------button pins-----------*/
  /* used for setting the position of the servo*/
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_12;
 800179e:	2380      	movs	r3, #128	; 0x80
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
 80017a0:	466a      	mov	r2, sp
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
 80017a2:	1c38      	adds	r0, r7, #0
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOA, &GPIO_InitStructure);

  /*----------button pins-----------*/
  /* used for setting the position of the servo*/
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_12;
 80017a4:	015b      	lsls	r3, r3, #5
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
 80017a6:	4669      	mov	r1, sp
  GPIO_Init(GPIOA, &GPIO_InitStructure);

  /*----------button pins-----------*/
  /* used for setting the position of the servo*/
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_12;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
 80017a8:	7116      	strb	r6, [r2, #4]
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
 80017aa:	71d5      	strb	r5, [r2, #7]
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
 80017ac:	7154      	strb	r4, [r2, #5]
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOA, &GPIO_InitStructure);

  /*----------button pins-----------*/
  /* used for setting the position of the servo*/
  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_12;
 80017ae:	9300      	str	r3, [sp, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
 80017b0:	f7fe fd1e 	bl	80001f0 <GPIO_Init>

  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_13;
 80017b4:	2380      	movs	r3, #128	; 0x80
 80017b6:	019b      	lsls	r3, r3, #6
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
 80017b8:	1c38      	adds	r0, r7, #0
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);

  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_13;
 80017ba:	9300      	str	r3, [sp, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
 80017bc:	4669      	mov	r1, sp
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);

  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_13;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
 80017be:	466b      	mov	r3, sp
 80017c0:	711e      	strb	r6, [r3, #4]
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
 80017c2:	71dd      	strb	r5, [r3, #7]
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
 80017c4:	715c      	strb	r4, [r3, #5]
  GPIO_Init(GPIOB, &GPIO_InitStructure);
 80017c6:	f7fe fd13 	bl	80001f0 <GPIO_Init>

  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_14;
 80017ca:	2380      	movs	r3, #128	; 0x80
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
 80017cc:	466a      	mov	r2, sp
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);

  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_14;
 80017ce:	01db      	lsls	r3, r3, #7
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);
 80017d0:	1c38      	adds	r0, r7, #0
 80017d2:	4669      	mov	r1, sp
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);

  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_14;
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
 80017d4:	7116      	strb	r6, [r2, #4]
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
 80017d6:	71d5      	strb	r5, [r2, #7]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
  GPIO_Init(GPIOB, &GPIO_InitStructure);

  GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_14;
 80017d8:	9300      	str	r3, [sp, #0]
  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;                             
  GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_DOWN;
  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
 80017da:	7154      	strb	r4, [r2, #5]
  GPIO_Init(GPIOB, &GPIO_InitStructure);
 80017dc:	f7fe fd08 	bl	80001f0 <GPIO_Init>

}
 80017e0:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 80017e2:	46c0      	nop			; (mov r8, r8)
 80017e4:	40020000 	.word	0x40020000
 80017e8:	40020400 	.word	0x40020400

080017ec <TIM2_Configuration>:

/*----------------------------------TIM2 Configuration -------------------------------------*/
void TIM2_Configuration(void)
{
 80017ec:	b570      	push	{r4, r5, r6, lr}
  /* this is where  struggled, although the system clock is set to 32Mhz it is in reality i would guess at 2Mhz */
  TIM_TimeBaseStructure.TIM_Prescaler  = (uint16_t) (2 - 1);        //prescaler is 2 so timebase is 1Mhz (1us)
  TIM_TimeBaseStructure.TIM_Period = 20000-1;                       //1Mhz / 20000 = 50hz ; (20ms, its what servos need)
  TIM_TimeBaseStructure.TIM_ClockDivision = 0;
  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;       
  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 80017ee:	2580      	movs	r5, #128	; 0x80

}

/*----------------------------------TIM2 Configuration -------------------------------------*/
void TIM2_Configuration(void)
{
 80017f0:	b086      	sub	sp, #24
  /* this is where  struggled, although the system clock is set to 32Mhz it is in reality i would guess at 2Mhz */
  TIM_TimeBaseStructure.TIM_Prescaler  = (uint16_t) (2 - 1);        //prescaler is 2 so timebase is 1Mhz (1us)
  TIM_TimeBaseStructure.TIM_Period = 20000-1;                       //1Mhz / 20000 = 50hz ; (20ms, its what servos need)
  TIM_TimeBaseStructure.TIM_ClockDivision = 0;
  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;       
  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 80017f2:	05ed      	lsls	r5, r5, #23
  TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;

  /* Time base configuration - SystemCoreClock = 32000000 for 32 MHz board */
  /* this is where  struggled, although the system clock is set to 32Mhz it is in reality i would guess at 2Mhz */
  TIM_TimeBaseStructure.TIM_Prescaler  = (uint16_t) (2 - 1);        //prescaler is 2 so timebase is 1Mhz (1us)
  TIM_TimeBaseStructure.TIM_Period = 20000-1;                       //1Mhz / 20000 = 50hz ; (20ms, its what servos need)
 80017f4:	4b14      	ldr	r3, [pc, #80]	; (8001848 <TIM2_Configuration+0x5c>)
  TIM_OCInitTypeDef  TIM_OCInitStructure;
  TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;

  /* Time base configuration - SystemCoreClock = 32000000 for 32 MHz board */
  /* this is where  struggled, although the system clock is set to 32Mhz it is in reality i would guess at 2Mhz */
  TIM_TimeBaseStructure.TIM_Prescaler  = (uint16_t) (2 - 1);        //prescaler is 2 so timebase is 1Mhz (1us)
 80017f6:	a903      	add	r1, sp, #12
 80017f8:	2401      	movs	r4, #1
  TIM_TimeBaseStructure.TIM_Period = 20000-1;                       //1Mhz / 20000 = 50hz ; (20ms, its what servos need)
  TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 80017fa:	2600      	movs	r6, #0
  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;       
  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 80017fc:	1c28      	adds	r0, r5, #0
  TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;

  /* Time base configuration - SystemCoreClock = 32000000 for 32 MHz board */
  /* this is where  struggled, although the system clock is set to 32Mhz it is in reality i would guess at 2Mhz */
  TIM_TimeBaseStructure.TIM_Prescaler  = (uint16_t) (2 - 1);        //prescaler is 2 so timebase is 1Mhz (1us)
  TIM_TimeBaseStructure.TIM_Period = 20000-1;                       //1Mhz / 20000 = 50hz ; (20ms, its what servos need)
 80017fe:	604b      	str	r3, [r1, #4]
  TIM_OCInitTypeDef  TIM_OCInitStructure;
  TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;

  /* Time base configuration - SystemCoreClock = 32000000 for 32 MHz board */
  /* this is where  struggled, although the system clock is set to 32Mhz it is in reality i would guess at 2Mhz */
  TIM_TimeBaseStructure.TIM_Prescaler  = (uint16_t) (2 - 1);        //prescaler is 2 so timebase is 1Mhz (1us)
 8001800:	800c      	strh	r4, [r1, #0]
  TIM_TimeBaseStructure.TIM_Period = 20000-1;                       //1Mhz / 20000 = 50hz ; (20ms, its what servos need)
  TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 8001802:	810e      	strh	r6, [r1, #8]
  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;       
 8001804:	804e      	strh	r6, [r1, #2]
  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 8001806:	f7ff f887 	bl	8000918 <TIM_TimeBaseInit>

   /* Enable TIM4 Preload register on ARR */
  /* I dont know what this does,or is for that matter but the code works with ot without it*/
  TIM_ARRPreloadConfig(TIM2, ENABLE);   
 800180a:	1c28      	adds	r0, r5, #0
 800180c:	1c21      	adds	r1, r4, #0
 800180e:	f7ff f8f5 	bl	80009fc <TIM_ARRPreloadConfig>

  /* PWM1 Mode configuration: PA1 is associated with TIM2_CH2 */
  /* TIM PWM1 Mode configuration: Channel */
  TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;                   
 8001812:	466a      	mov	r2, sp
 8001814:	2360      	movs	r3, #96	; 0x60
 8001816:	8013      	strh	r3, [r2, #0]
  TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
  /* Again, i dont know what this is or does and the code works with or without it*/
  TIM_OCInitStructure.TIM_Pulse = 1500; // Servo Top-Center
 8001818:	4b0c      	ldr	r3, [pc, #48]	; (800184c <TIM2_Configuration+0x60>)
  TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
  TIM_OC1Init(TIM2, &TIM_OCInitStructure);
 800181a:	1c28      	adds	r0, r5, #0
 800181c:	4669      	mov	r1, sp
  TIM_ARRPreloadConfig(TIM2, ENABLE);   

  /* PWM1 Mode configuration: PA1 is associated with TIM2_CH2 */
  /* TIM PWM1 Mode configuration: Channel */
  TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;                   
  TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
 800181e:	8054      	strh	r4, [r2, #2]
  /* Again, i dont know what this is or does and the code works with or without it*/
  TIM_OCInitStructure.TIM_Pulse = 1500; // Servo Top-Center
 8001820:	9301      	str	r3, [sp, #4]
  TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
 8001822:	8116      	strh	r6, [r2, #8]
  TIM_OC1Init(TIM2, &TIM_OCInitStructure);
 8001824:	f7ff f922 	bl	8000a6c <TIM_OC1Init>
  TIM_OC1PreloadConfig(TIM2, TIM_OCPreload_Enable);
 8001828:	1c28      	adds	r0, r5, #0
 800182a:	2108      	movs	r1, #8
 800182c:	f7ff f9fc 	bl	8000c28 <TIM_OC1PreloadConfig>

  /* TIM2 enable counter */
  TIM_Cmd(TIM2, ENABLE);
 8001830:	1c28      	adds	r0, r5, #0
 8001832:	1c21      	adds	r1, r4, #0
 8001834:	f7ff f90a 	bl	8000a4c <TIM_Cmd>
  TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE);
 8001838:	1c28      	adds	r0, r5, #0
 800183a:	1c21      	adds	r1, r4, #0
 800183c:	1c22      	adds	r2, r4, #0
 800183e:	f7ff fc63 	bl	8001108 <TIM_ITConfig>
}
 8001842:	b006      	add	sp, #24
 8001844:	bd70      	pop	{r4, r5, r6, pc}
 8001846:	46c0      	nop			; (mov r8, r8)
 8001848:	00004e1f 	.word	0x00004e1f
 800184c:	000005dc 	.word	0x000005dc

08001850 <main>:
  
  int main(void)
  {
 8001850:	b508      	push	{r3, lr}

    RCC_Configuration();
 8001852:	f7ff ff6b 	bl	800172c <RCC_Configuration>
 
    GPIO_Configuration();
 8001856:	f7ff ff7f 	bl	8001758 <GPIO_Configuration>
 
    NVIC_Configuration();
 800185a:	f7ff ff71 	bl	8001740 <NVIC_Configuration>
 
    TIM2_Configuration();
 800185e:	f7ff ffc5 	bl	80017ec <TIM2_Configuration>
  {

    // read buttons connected to PB12, PB13, PB14 and set the postion of the servo
    // The led being set high and low (PA12) was used for debugging purposes and isn't needed
    // you can set the value of the servo in degrees. The range is from -90 to 90.
    if(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_12))
 8001862:	2180      	movs	r1, #128	; 0x80
 8001864:	4817      	ldr	r0, [pc, #92]	; (80018c4 <main+0x74>)
 8001866:	0149      	lsls	r1, r1, #5
 8001868:	f7fe fd36 	bl	80002d8 <GPIO_ReadInputDataBit>
 800186c:	2800      	cmp	r0, #0
 800186e:	d006      	beq.n	800187e <main+0x2e>
    {
      GPIO_WriteBit(GPIOA, GPIO_Pin_0, 1);
 8001870:	2101      	movs	r1, #1
 8001872:	1c0a      	adds	r2, r1, #0
 8001874:	4814      	ldr	r0, [pc, #80]	; (80018c8 <main+0x78>)
 8001876:	f7fe fd47 	bl	8000308 <GPIO_WriteBit>
      servo_angle = -80.0 ;
 800187a:	4a14      	ldr	r2, [pc, #80]	; (80018cc <main+0x7c>)
 800187c:	e01b      	b.n	80018b6 <main+0x66>
    } 
    else if(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_13))
 800187e:	2180      	movs	r1, #128	; 0x80
 8001880:	4810      	ldr	r0, [pc, #64]	; (80018c4 <main+0x74>)
 8001882:	0189      	lsls	r1, r1, #6
 8001884:	f7fe fd28 	bl	80002d8 <GPIO_ReadInputDataBit>
 8001888:	2800      	cmp	r0, #0
 800188a:	d006      	beq.n	800189a <main+0x4a>
    {
      GPIO_WriteBit(GPIOA, GPIO_Pin_0, 1);
 800188c:	2101      	movs	r1, #1
 800188e:	1c0a      	adds	r2, r1, #0
 8001890:	480d      	ldr	r0, [pc, #52]	; (80018c8 <main+0x78>)
 8001892:	f7fe fd39 	bl	8000308 <GPIO_WriteBit>
      servo_angle= 0.0 ;
 8001896:	2200      	movs	r2, #0
 8001898:	e00d      	b.n	80018b6 <main+0x66>
    }
    else if(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_14))
 800189a:	2180      	movs	r1, #128	; 0x80
 800189c:	01c9      	lsls	r1, r1, #7
 800189e:	4809      	ldr	r0, [pc, #36]	; (80018c4 <main+0x74>)
 80018a0:	f7fe fd1a 	bl	80002d8 <GPIO_ReadInputDataBit>
    {
      GPIO_WriteBit(GPIOA, GPIO_Pin_0, 1);
 80018a4:	2101      	movs	r1, #1
    else if(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_13))
    {
      GPIO_WriteBit(GPIOA, GPIO_Pin_0, 1);
      servo_angle= 0.0 ;
    }
    else if(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_14))
 80018a6:	1c02      	adds	r2, r0, #0
    {
      GPIO_WriteBit(GPIOA, GPIO_Pin_0, 1);
 80018a8:	4807      	ldr	r0, [pc, #28]	; (80018c8 <main+0x78>)
    else if(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_13))
    {
      GPIO_WriteBit(GPIOA, GPIO_Pin_0, 1);
      servo_angle= 0.0 ;
    }
    else if(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_14))
 80018aa:	2a00      	cmp	r2, #0
 80018ac:	d006      	beq.n	80018bc <main+0x6c>
    {
      GPIO_WriteBit(GPIOA, GPIO_Pin_0, 1);
 80018ae:	1c0a      	adds	r2, r1, #0
 80018b0:	f7fe fd2a 	bl	8000308 <GPIO_WriteBit>
      servo_angle = 90.0 ;
 80018b4:	4a06      	ldr	r2, [pc, #24]	; (80018d0 <main+0x80>)
 80018b6:	4b07      	ldr	r3, [pc, #28]	; (80018d4 <main+0x84>)
 80018b8:	601a      	str	r2, [r3, #0]
 80018ba:	e7d2      	b.n	8001862 <main+0x12>
    }
    else 
    {
      GPIO_WriteBit(GPIOA, GPIO_Pin_0, 0);
 80018bc:	f7fe fd24 	bl	8000308 <GPIO_WriteBit>
 80018c0:	e7cf      	b.n	8001862 <main+0x12>
 80018c2:	46c0      	nop			; (mov r8, r8)
 80018c4:	40020400 	.word	0x40020400
 80018c8:	40020000 	.word	0x40020000
 80018cc:	c2a00000 	.word	0xc2a00000
 80018d0:	42b40000 	.word	0x42b40000
 80018d4:	2000001c 	.word	0x2000001c

080018d8 <SystemInit>:
  * @retval None
  */
void SystemInit (void)
{
  /*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100;
 80018d8:	4b3c      	ldr	r3, [pc, #240]	; (80019cc <SystemInit+0xf4>)
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80018da:	b537      	push	{r0, r1, r2, r4, r5, lr}
  /*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100;
 80018dc:	6819      	ldr	r1, [r3, #0]
 80018de:	2280      	movs	r2, #128	; 0x80
 80018e0:	0052      	lsls	r2, r2, #1
 80018e2:	430a      	orrs	r2, r1
 80018e4:	601a      	str	r2, [r3, #0]

  /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
  RCC->CFGR &= (uint32_t)0x88FFC00C;
 80018e6:	6899      	ldr	r1, [r3, #8]
 80018e8:	4a39      	ldr	r2, [pc, #228]	; (80019d0 <SystemInit+0xf8>)
 80018ea:	400a      	ands	r2, r1
 80018ec:	609a      	str	r2, [r3, #8]
  
  /*!< Reset HSION, HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xEEFEFFFE;
 80018ee:	6819      	ldr	r1, [r3, #0]
 80018f0:	4a38      	ldr	r2, [pc, #224]	; (80019d4 <SystemInit+0xfc>)
 80018f2:	400a      	ands	r2, r1
 80018f4:	601a      	str	r2, [r3, #0]

  /*!< Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 80018f6:	6819      	ldr	r1, [r3, #0]
 80018f8:	4a37      	ldr	r2, [pc, #220]	; (80019d8 <SystemInit+0x100>)
 80018fa:	400a      	ands	r2, r1
 80018fc:	601a      	str	r2, [r3, #0]

  /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
  RCC->CFGR &= (uint32_t)0xFF02FFFF;
 80018fe:	689a      	ldr	r2, [r3, #8]
 8001900:	4936      	ldr	r1, [pc, #216]	; (80019dc <SystemInit+0x104>)
 8001902:	400a      	ands	r2, r1
 8001904:	609a      	str	r2, [r3, #8]

  /*!< Disable all interrupts */
  RCC->CIR = 0x00000000;
 8001906:	2200      	movs	r2, #0
 8001908:	60da      	str	r2, [r3, #12]
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 800190a:	9200      	str	r2, [sp, #0]
 800190c:	9201      	str	r2, [sp, #4]
  
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/
  /* Enable HSE */
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 800190e:	6818      	ldr	r0, [r3, #0]
 8001910:	2280      	movs	r2, #128	; 0x80
 8001912:	0252      	lsls	r2, r2, #9
 8001914:	4302      	orrs	r2, r0
 8001916:	601a      	str	r2, [r3, #0]
 8001918:	1c08      	adds	r0, r1, #0
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
 800191a:	6819      	ldr	r1, [r3, #0]
 800191c:	2280      	movs	r2, #128	; 0x80
 800191e:	0292      	lsls	r2, r2, #10
 8001920:	4011      	ands	r1, r2
 8001922:	9101      	str	r1, [sp, #4]
    StartUpCounter++;
 8001924:	9900      	ldr	r1, [sp, #0]
 8001926:	3101      	adds	r1, #1
 8001928:	9100      	str	r1, [sp, #0]
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 800192a:	9901      	ldr	r1, [sp, #4]
 800192c:	2900      	cmp	r1, #0
 800192e:	d104      	bne.n	800193a <SystemInit+0x62>
 8001930:	9c00      	ldr	r4, [sp, #0]
 8001932:	21a0      	movs	r1, #160	; 0xa0
 8001934:	01c9      	lsls	r1, r1, #7
 8001936:	428c      	cmp	r4, r1
 8001938:	d1ef      	bne.n	800191a <SystemInit+0x42>

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 800193a:	6819      	ldr	r1, [r3, #0]
 800193c:	400a      	ands	r2, r1
 800193e:	d000      	beq.n	8001942 <SystemInit+0x6a>
  {
    HSEStatus = (uint32_t)0x01;
 8001940:	2201      	movs	r2, #1
  }
  else
  {
    HSEStatus = (uint32_t)0x00;
 8001942:	9201      	str	r2, [sp, #4]
  }
  
  if (HSEStatus == (uint32_t)0x01)
 8001944:	9901      	ldr	r1, [sp, #4]
 8001946:	2901      	cmp	r1, #1
 8001948:	d004      	beq.n	8001954 <SystemInit+0x7c>
  SetSysClock();

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 800194a:	4b25      	ldr	r3, [pc, #148]	; (80019e0 <SystemInit+0x108>)
 800194c:	2280      	movs	r2, #128	; 0x80
 800194e:	0512      	lsls	r2, r2, #20
 8001950:	609a      	str	r2, [r3, #8]
#endif
}
 8001952:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
  }
  
  if (HSEStatus == (uint32_t)0x01)
  {
    /* Enable 64-bit access */
    FLASH->ACR |= FLASH_ACR_ACC64;
 8001954:	4a23      	ldr	r2, [pc, #140]	; (80019e4 <SystemInit+0x10c>)
 8001956:	2504      	movs	r5, #4
 8001958:	6814      	ldr	r4, [r2, #0]
 800195a:	432c      	orrs	r4, r5
 800195c:	6014      	str	r4, [r2, #0]
    
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTEN;
 800195e:	6814      	ldr	r4, [r2, #0]
 8001960:	2502      	movs	r5, #2
 8001962:	432c      	orrs	r4, r5
 8001964:	6014      	str	r4, [r2, #0]

    /* Flash 1 wait state */
    FLASH->ACR |= FLASH_ACR_LATENCY;
 8001966:	6814      	ldr	r4, [r2, #0]
 8001968:	4321      	orrs	r1, r4
 800196a:	6011      	str	r1, [r2, #0]
    
    /* Power enable */
    RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 800196c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800196e:	2280      	movs	r2, #128	; 0x80
 8001970:	0552      	lsls	r2, r2, #21
 8001972:	430a      	orrs	r2, r1
 8001974:	625a      	str	r2, [r3, #36]	; 0x24
  
    /* Select the Voltage Range 1 (1.8 V) */
    PWR->CR = PWR_CR_VOS_0;
 8001976:	2180      	movs	r1, #128	; 0x80
 8001978:	4a1b      	ldr	r2, [pc, #108]	; (80019e8 <SystemInit+0x110>)
 800197a:	0109      	lsls	r1, r1, #4
 800197c:	6011      	str	r1, [r2, #0]
  
    /* Wait Until the Voltage Regulator is ready */
    while((PWR->CSR & PWR_CSR_VOSF) != RESET)
 800197e:	6851      	ldr	r1, [r2, #4]
 8001980:	06cc      	lsls	r4, r1, #27
 8001982:	d4fc      	bmi.n	800197e <SystemInit+0xa6>
    {
    }
        
    /* HCLK = SYSCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 8001984:	689a      	ldr	r2, [r3, #8]
 8001986:	609a      	str	r2, [r3, #8]
  
    /* PCLK2 = HCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 8001988:	689a      	ldr	r2, [r3, #8]
 800198a:	609a      	str	r2, [r3, #8]
    
    /* PCLK1 = HCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 800198c:	689a      	ldr	r2, [r3, #8]
 800198e:	609a      	str	r2, [r3, #8]
    
    /*  PLL configuration */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL |
 8001990:	6899      	ldr	r1, [r3, #8]
                                        RCC_CFGR_PLLDIV));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMUL12 | RCC_CFGR_PLLDIV3);
 8001992:	2291      	movs	r2, #145	; 0x91
    
    /* PCLK1 = HCLK /1*/
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
    
    /*  PLL configuration */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL |
 8001994:	4001      	ands	r1, r0
 8001996:	6099      	str	r1, [r3, #8]
                                        RCC_CFGR_PLLDIV));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMUL12 | RCC_CFGR_PLLDIV3);
 8001998:	6899      	ldr	r1, [r3, #8]
 800199a:	0412      	lsls	r2, r2, #16
 800199c:	430a      	orrs	r2, r1
 800199e:	609a      	str	r2, [r3, #8]

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
 80019a0:	6819      	ldr	r1, [r3, #0]
 80019a2:	2280      	movs	r2, #128	; 0x80
 80019a4:	0452      	lsls	r2, r2, #17
 80019a6:	430a      	orrs	r2, r1
 80019a8:	601a      	str	r2, [r3, #0]

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 80019aa:	6819      	ldr	r1, [r3, #0]
 80019ac:	4a07      	ldr	r2, [pc, #28]	; (80019cc <SystemInit+0xf4>)
 80019ae:	0188      	lsls	r0, r1, #6
 80019b0:	d5fb      	bpl.n	80019aa <SystemInit+0xd2>
    {
    }
        
    /* Select PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 80019b2:	6890      	ldr	r0, [r2, #8]
 80019b4:	2103      	movs	r1, #3
 80019b6:	4388      	bics	r0, r1
 80019b8:	6090      	str	r0, [r2, #8]
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
 80019ba:	6890      	ldr	r0, [r2, #8]
 80019bc:	4301      	orrs	r1, r0
 80019be:	6091      	str	r1, [r2, #8]

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 80019c0:	6899      	ldr	r1, [r3, #8]
 80019c2:	220c      	movs	r2, #12
 80019c4:	400a      	ands	r2, r1
 80019c6:	2a0c      	cmp	r2, #12
 80019c8:	d1fa      	bne.n	80019c0 <SystemInit+0xe8>
 80019ca:	e7be      	b.n	800194a <SystemInit+0x72>
 80019cc:	40023800 	.word	0x40023800
 80019d0:	88ffc00c 	.word	0x88ffc00c
 80019d4:	eefefffe 	.word	0xeefefffe
 80019d8:	fffbffff 	.word	0xfffbffff
 80019dc:	ff02ffff 	.word	0xff02ffff
 80019e0:	e000ed00 	.word	0xe000ed00
 80019e4:	40023c00 	.word	0x40023c00
 80019e8:	40007000 	.word	0x40007000

080019ec <Reset_Handler>:
.weak Reset_Handler
.type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
movs r1, #0
 80019ec:	2100      	movs	r1, #0
b LoopCopyDataInit
 80019ee:	f000 b804 	b.w	80019fa <LoopCopyDataInit>

080019f2 <CopyDataInit>:

CopyDataInit:
ldr r3, =_sidata
 80019f2:	4b0d      	ldr	r3, [pc, #52]	; (8001a28 <LoopFillZerobss+0x16>)
ldr r3, [r3, r1]
 80019f4:	585b      	ldr	r3, [r3, r1]
str r3, [r0, r1]
 80019f6:	5043      	str	r3, [r0, r1]
adds r1, r1, #4
 80019f8:	3104      	adds	r1, #4

080019fa <LoopCopyDataInit>:

LoopCopyDataInit:
ldr r0, =_sdata
 80019fa:	480c      	ldr	r0, [pc, #48]	; (8001a2c <LoopFillZerobss+0x1a>)
ldr r3, =_edata
 80019fc:	4b0c      	ldr	r3, [pc, #48]	; (8001a30 <LoopFillZerobss+0x1e>)
adds r2, r0, r1
 80019fe:	1842      	adds	r2, r0, r1
cmp r2, r3
 8001a00:	429a      	cmp	r2, r3
bcc CopyDataInit
 8001a02:	f4ff aff6 	bcc.w	80019f2 <CopyDataInit>
ldr r2, =_sbss
 8001a06:	4a0b      	ldr	r2, [pc, #44]	; (8001a34 <LoopFillZerobss+0x22>)
b LoopFillZerobss
 8001a08:	f000 b803 	b.w	8001a12 <LoopFillZerobss>

08001a0c <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
movs r3, #0
 8001a0c:	2300      	movs	r3, #0
str r3, [r2], #4
 8001a0e:	f842 3b04 	str.w	r3, [r2], #4

08001a12 <LoopFillZerobss>:

LoopFillZerobss:
ldr r3, = _ebss
 8001a12:	4b09      	ldr	r3, [pc, #36]	; (8001a38 <LoopFillZerobss+0x26>)
cmp r2, r3
 8001a14:	429a      	cmp	r2, r3
bcc FillZerobss
 8001a16:	f4ff aff9 	bcc.w	8001a0c <FillZerobss>

/* Call the clock system intitialization function.*/
bl SystemInit
 8001a1a:	f7ff ff5d 	bl	80018d8 <SystemInit>
/* Call static constructors */
bl __libc_init_array
 8001a1e:	f000 f80f 	bl	8001a40 <__libc_init_array>
/* Call the application's entry point.*/
bl main
 8001a22:	f7ff ff15 	bl	8001850 <main>
bx lr
 8001a26:	4770      	bx	lr
/* Copy the data segment initializers from flash to SRAM */
movs r1, #0
b LoopCopyDataInit

CopyDataInit:
ldr r3, =_sidata
 8001a28:	08001ae0 	.word	0x08001ae0
ldr r3, [r3, r1]
str r3, [r0, r1]
adds r1, r1, #4

LoopCopyDataInit:
ldr r0, =_sdata
 8001a2c:	20000000 	.word	0x20000000
ldr r3, =_edata
 8001a30:	2000001c 	.word	0x2000001c
adds r2, r0, r1
cmp r2, r3
bcc CopyDataInit
ldr r2, =_sbss
 8001a34:	2000001c 	.word	0x2000001c
FillZerobss:
movs r3, #0
str r3, [r2], #4

LoopFillZerobss:
ldr r3, = _ebss
 8001a38:	20000020 	.word	0x20000020

08001a3c <ADC1_IRQHandler>:
* @retval : None
*/
.section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
b Infinite_Loop
 8001a3c:	f7ff bffe 	b.w	8001a3c <ADC1_IRQHandler>

08001a40 <__libc_init_array>:
 8001a40:	b570      	push	{r4, r5, r6, lr}
 8001a42:	4e0d      	ldr	r6, [pc, #52]	; (8001a78 <__libc_init_array+0x38>)
 8001a44:	4d0d      	ldr	r5, [pc, #52]	; (8001a7c <__libc_init_array+0x3c>)
 8001a46:	2400      	movs	r4, #0
 8001a48:	1bad      	subs	r5, r5, r6
 8001a4a:	10ad      	asrs	r5, r5, #2
 8001a4c:	d005      	beq.n	8001a5a <__libc_init_array+0x1a>
 8001a4e:	00a3      	lsls	r3, r4, #2
 8001a50:	58f3      	ldr	r3, [r6, r3]
 8001a52:	3401      	adds	r4, #1
 8001a54:	4798      	blx	r3
 8001a56:	42a5      	cmp	r5, r4
 8001a58:	d1f9      	bne.n	8001a4e <__libc_init_array+0xe>
 8001a5a:	f000 f835 	bl	8001ac8 <_init>
 8001a5e:	4e08      	ldr	r6, [pc, #32]	; (8001a80 <__libc_init_array+0x40>)
 8001a60:	4d08      	ldr	r5, [pc, #32]	; (8001a84 <__libc_init_array+0x44>)
 8001a62:	2400      	movs	r4, #0
 8001a64:	1bad      	subs	r5, r5, r6
 8001a66:	10ad      	asrs	r5, r5, #2
 8001a68:	d005      	beq.n	8001a76 <__libc_init_array+0x36>
 8001a6a:	00a3      	lsls	r3, r4, #2
 8001a6c:	58f3      	ldr	r3, [r6, r3]
 8001a6e:	3401      	adds	r4, #1
 8001a70:	4798      	blx	r3
 8001a72:	42a5      	cmp	r5, r4
 8001a74:	d1f9      	bne.n	8001a6a <__libc_init_array+0x2a>
 8001a76:	bd70      	pop	{r4, r5, r6, pc}
	...
 8001a88:	08001540 	.word	0x08001540
 8001a8c:	0800153a 	.word	0x0800153a
 8001a90:	0800153a 	.word	0x0800153a
 8001a94:	08001530 	.word	0x08001530
 8001a98:	08001490 	.word	0x08001490
 8001a9c:	08001490 	.word	0x08001490
 8001aa0:	08001526 	.word	0x08001526
 8001aa4:	08001530 	.word	0x08001530
 8001aa8:	08001490 	.word	0x08001490
 8001aac:	08001526 	.word	0x08001526
 8001ab0:	08001490 	.word	0x08001490
 8001ab4:	08001530 	.word	0x08001530
 8001ab8:	0800148e 	.word	0x0800148e
 8001abc:	0800148e 	.word	0x0800148e
 8001ac0:	0800148e 	.word	0x0800148e
 8001ac4:	080015c8 	.word	0x080015c8

08001ac8 <_init>:
 8001ac8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001aca:	46c0      	nop			; (mov r8, r8)
 8001acc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001ace:	bc08      	pop	{r3}
 8001ad0:	469e      	mov	lr, r3
 8001ad2:	4770      	bx	lr

08001ad4 <_fini>:
 8001ad4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ad6:	46c0      	nop			; (mov r8, r8)
 8001ad8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001ada:	bc08      	pop	{r3}
 8001adc:	469e      	mov	lr, r3
 8001ade:	4770      	bx	lr
